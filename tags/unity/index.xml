<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>unity on David Amador</title>
    <link>https://www.david-amador.com/tags/unity/</link>
    <description>Recent content in unity on David Amador</description>
    <image>
      <title>David Amador</title>
      <url>https://www.david-amador.com/david-amador-pixel.png</url>
      <link>https://www.david-amador.com/david-amador-pixel.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Sep 2023 09:57:43 +0000</lastBuildDate>
    <atom:link href="https://www.david-amador.com/tags/unity/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unity enshittification round 2, moving on to custom tech.</title>
      <link>https://www.david-amador.com/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/</link>
      <pubDate>Sun, 24 Sep 2023 09:57:43 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/</guid>
      <description>After mostly a week of anxiety, for thousands and thousands of developers, Unity changed the rules again, and first glance, it’s better for the immediate problems it would cause for active and in-development games. They removed the retroactive aspect of the “pay-per-game-install”, so only for someone on Unity 2023 LTS+ (launching next year) will that apply, current projects will not be affected. Small relief, as long as we can keep using existing versions with current Terms of Service.</description>
      <content:encoded><![CDATA[<p>After mostly a <a href="/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/" title="The Unity enshittification, proprietary tech dangers, and mostly not talking about what I’m doing.">week of anxiety,</a> for thousands and thousands of developers, Unity <a href="https://blog.unity.com/news/open-letter-on-runtime-fee">changed the rules again</a>, and first glance, it’s better for the immediate problems it would cause for active and in-development games. They removed the retroactive aspect of the “pay-per-game-install”, so only for someone on Unity 2023 LTS+ (launching next year) will that apply, current projects will not be affected. Small relief, as long as we can keep using existing versions with current Terms of Service. This will be impossible on mobile and consoles in a short time frame due to SDKs, but for PC should be fine.</p>
<p>So that’s good huh? Well not quite imo, because the rest pretty much maintains, more or less with some changes, Unity Plus still gone (although expected), but <a href="https://unity.com/pricing-updates">it’s a revenue/pay-per-install deal</a>, on top of the yearly license fees. I feel they fear they tainted their image so much they aren’t even forcing the Unity splash screen anymore, probably because players will now fear every Unity game will come with install tracking software.</p>
<p>I think the subscription plan, especially for mobile/consoles is needed, it’s a company and needs to make money to maintain the software, fair. However for me it’s a lot of the break of trust they did, and trying for the SECOND time (that I recall) to change the Terms of Service retroactively and only after industry-wide outrage did they backtracked slightly. So for now the new-new rules only apply to a smaller %, which I guess they expect will calm down most of the community. In a couple years they’ll pull some other stunt and we’ll recall “oh right, they did this before”.</p>
<p>Furthermore, they had deleted the transparency repo with the Terms of Service from GitHub, which raised many eyebrows, when enquired to why they deleted the answer was “low views so it was deleted”. The repo is back up meanwhile, I mean, what the heck?</p>
<p><a href="https://twitter.com/unity/status/1705317639478751611"><img loading="lazy" src="/wp-content/uploads/2023/09/image-2.png" alt=""  />
</a></p>
<h2 id="moving-forward">Moving forward</h2>
<p>So as I mentioned in last post I have been working on a prototype for what I hope I can turn into a new game, in Unity. I decided that I’ll continue working on the prototype in Unity (actually taking a break from work right now to write this), it would be slightly silly to change now. And when I feel most of the features are done, I’ll try to move to my own tech, yes again.</p>
<p>I’ve been doing some research and tests and I’ll be dismantling <a href="/tags/quest-of-dungeons/" title="Quest of Dungeons development update">Quest of Dungeons</a> engine, which was all <a href="https://en.wikipedia.org/wiki/Object-oriented_programming">OOP</a>, to adding <a href="https://en.wikipedia.org/wiki/Entity_component_system">ECS</a>, using <a href="https://github.com/SanderMertens/flecs/">Flecs</a>, this is a major thing I’m taking with me from my time using Unity, I like that it helps solving a lot of issues sometimes, even if full ECS is not the solution for me. But having that will be nice, I can see the benefit now. Another thing might also be trying to mimick Prefabs and/or ScriptableObjects, that would be nice, but that’s just in the back of my head at the moment. I already started the process of integrating Flecs, so slowly and gradually, and hopefully, when it’s time to switch engine it will be a suitable alternative. If not well, better not update to 2023LTS I guess.</p>
<p>At least this is the plan right now, who knows, maybe I’ll reach a point where it feels too frustrating to rewrite it all in a different engine and language (c# to cpp), or ran out of budget to do so, plans do change. But at the moment at least it moves forward like this.</p>
<h2 id="list-of-mostly-open-source-game-engines-and-frameworks">List of mostly open-source game engines and frameworks</h2>
<p>Using suggestions I compiled a list of game engines and frameworks, mostly open-source and free, but there are a few with licenses, regardless, for anyone looking to test alternatives, there’s a bunch of stuff.</p>
<p><a href="https://github.com/DJLink/list-of-game-engines-and-frameworks">https://github.com/DJLink/list-of-game-engines-and-frameworks</a></p>
<p>My personal suggestion for anyone who wants to try the “make my own engine” approach, for 2D stuff (don’t get too deep the rabbit hole on 3D), will be to use SDL to bootstrap window creation, input etc. I’ve used that in a bunch of stuff in the past and can vouch for it.</p>
]]></content:encoded>
    </item>
    <item>
      <title>The Unity enshittification, proprietary tech dangers, and mostly not talking about what I&#39;m doing.</title>
      <link>https://www.david-amador.com/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/</link>
      <pubDate>Sat, 16 Sep 2023 11:14:16 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/</guid>
      <description>So this was an “eventful” week in the game dev community. Unity, one of the most well know, and used game engines out there, after years of doing mostly good for the community, pulled a reverse card and broke years of trust the community had on them. Unity announced that they are retroactively charging (for example $0.2) for each game install, after developers hit a certain yearly revenue threshold, which sounds insane.</description>
      <content:encoded><![CDATA[<p>So this was an “eventful” week in the game dev community. <a href="https://unity.com/">Unity</a>, one of the most well know, and used game engines out there, after years of doing mostly good for the community, pulled a reverse card and broke years of trust the community had on them. <a href="https://blog.unity.com/news/plan-pricing-and-packaging-updates">Unity announced </a>that they are retroactively charging (for example $0.2) for each game install, after developers hit a certain yearly revenue threshold, which sounds insane.</p>
<p><a href="https://blog.unity.com/news/plan-pricing-and-packaging-updates"><img loading="lazy" src="/wp-content/uploads/2023/09/unity-new-runtime-free-pricing-image.png" alt=""  />
</a></p>
<p>Also they are removing the Plus subscription, which honestly this one I was kind of expecting for a while now. Which means a lot of people would have to jump to the nearly $2k yearly subscriptions. This on it’s own, while a big jump, at least is more understandable, building tech is expensive. The pay-per-install is crazy though.</p>
<p><a href="https://twitter.com/DJ_Link/status/1666532480646627329"><img loading="lazy" src="/wp-content/uploads/2023/09/image-1.png" alt=""  />
</a>On top of all, the thing that breaks trust the most, is the retroactive thing, games already released on older versions will be affected. The Terms of Service for those older versions, which developers agreed on installing X version, are no longer valid, they changed them, which means it’s no longer safe to trust the rules, Unity can just flip them. What’s for tomorrow?</p>
<h2 id="proprietary-tech">Proprietary tech</h2>
<p>This is, and always be one of the downsides of depending on other people technology, if the whole company depends on it, and there’s no easy replacement, a drastic change can hurt the whole business bad. This is not to say that we must avoid it 100% of the time, but it clearly shows that if a company amasses too much power, <a href="https://en.wikipedia.org/wiki/Murphy's_law">murphy’s law</a>!</p>
<p>I usually like to discuss this subject, even before this whole thing, not because I think everyone should do custom engines (even if fun) but because we shouldn’t trick ourselves in believing “my choice of engine is forever!”, it won’t be, unless it’s our own tech that we spend tons of time supporting/improving it, everything else eventually mutates too much, fades or gets killed. So we should always try to at the very least, be mentally prepared.</p>
<p>A very large amount of developers probably entered gamedev through Unity, it was mostly the goto suggestion everyone gave, and never tried anything else (and why would they, if it worked right?), but after years of learning that tool, it might be frustrating to change, but trust me, you got this. It will be hard, but if you ever change again it will be easier.</p>
<h2 id="what-im-up-to">What I’m up to</h2>
<p>Personally I’ve been using Unity for the ~5 years maybe, mostly for contract work and porting stuff. But recently, and after years of shipping stuff on <a href="/tags/basalt/">custom framework</a> I decided to work on my current game prototype in Unity, it made sense, my day work is 80% on that tech, built in Editor, multi-platform, so I would also be learning more and prototyping in Unity is generally quite fun. But these changes now mean I’ll be changing for something else, not because these rules will affect me, I don’t see ever reaching the $200k yearly, but because I don’t know what they’ll do next. I’d rather risk elsewhere.</p>
<h4 id="what-next">What next?</h4>
<p>For the past couple days I’ve trying to decide on exactly where, but haven’t made my mind yet. But I have decided that I’ll at least try to wrap up the prototype phase in Unity, makes sense, game is still a bit barebones (why I’m not talking about it yet) but there’s a lot done, so I’d rather pass the whole “toy prototyping messy code” in Unity, and when it feels time to move to production port the whole thing elsewhere and in the process hopefully have a cleaner code base.</p>
<p>Custom or another engine I’m unsure, but atm I’m leaning more towards custom, but that would mean I’d probably either reshape my entire custom engine, or do from scratch, reason being, it’s 100% object oriented, and while working with Unity I discovered there’s tons of advantages to the Entity Component System, so I want that on my framework. Might be more initial setup, but after shipping a couple games on tons of platforms in OOP, I discovered that some of the issues would have been easier to solve with ECS, not all but several.</p>
<p>Overall I’m excited about the possibility of working on my own tech, because well, it’s fun. As for my next game, progress has been slow, because I’m still taking the approach of contract work, and working on it on my spare time until it feels like a viable project and deciding full or part-time.</p>
<p>After working on Quest of Dungeons for many years (which I’m grateful) I did several prototypes that were, to be honest, not good games, and I will never ship something that at the very least I don’t find fun, so yeah sorry it’s been a while. The hope is that if I find it fun, more people will, so until that time, work moves on, maybe I’ll have more news about something sooner than later.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Made a small game for Ludum Dare 42</title>
      <link>https://www.david-amador.com/2018/08/made-a-small-game-for-ludum-dare-42/</link>
      <pubDate>Tue, 14 Aug 2018 15:02:38 +0000</pubDate>
      <guid>https://www.david-amador.com/2018/08/made-a-small-game-for-ludum-dare-42/</guid>
      <description>Hey,
It’s been ages since my last post, feel like things keep getting in the way, also not much exciting stuff lately.
But decided to take a break from my current project to participate in Ludum Dare 42, it’s been years since the last time, also I liked the theme “Running out of Space” so I decided to hack something. To try and get out of my comfort zone I made my first game in Unity, so that was a fun experiment.</description>
      <content:encoded><![CDATA[<p>Hey,</p>
<p>It’s been ages since my last post, feel like things keep getting in the way, also not much exciting stuff lately.</p>
<p>But decided to take a break from my current project to participate in Ludum Dare 42, it’s been years since the last time, also I liked the theme “Running out of Space” so I decided to hack something. To try and get out of my comfort zone I made my first game in Unity, so that was a fun experiment.</p>
<p>The game is a small top down shooting game, but when you miss an enemy you create a block instead, so the more you miss the less area to fly around. Here’s a gif illustrating.</p>
<p><a href="https://dj_link.itch.io/dont-miss"><img loading="lazy" src="/wp-content/uploads/2018/08/Honeycam-2018-08-13-22-21-37.gif" alt=""  />
</a></p>
<p>Made code, art and sounds, cod is c# in Unity, art was made in photoshop, the sound effects I think you’ll notice right away how they were made, and finally used <a href="https://boscaceoil.net/">Bosca Ceoil</a> for music.</p>
<p>There’s a webGl version so you an try it directly in your browser.</p>
<p><a href="https://dj_link.itch.io/dont-miss">https://dj_link.itch.io/dont-miss</a></p>
<p>Here’s the LD Jam entry: <a href="https://ldjam.com/events/ludum-dare/42/dont-miss-1">https://ldjam.com/events/ludum-dare/42/dont-miss-1</a></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
