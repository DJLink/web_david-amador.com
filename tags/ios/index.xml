<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>iOS on David Amador</title>
    <link>https://www.david-amador.com/tags/ios/</link>
    <description>Recent content in iOS on David Amador</description>
    <image>
      <title>David Amador</title>
      <url>https://www.david-amador.com/david-amador-pixel.png</url>
      <link>https://www.david-amador.com/david-amador-pixel.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 08 Dec 2014 11:40:29 +0000</lastBuildDate>
    <atom:link href="https://www.david-amador.com/tags/ios/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>QoD iOS and Android update 1.1.1 released</title>
      <link>https://www.david-amador.com/2014/12/qod-ios-and-android-update-1-1-1-released/</link>
      <pubDate>Mon, 08 Dec 2014 11:40:29 +0000</pubDate>
      <guid>https://www.david-amador.com/2014/12/qod-ios-and-android-update-1-1-1-released/</guid>
      <description>A new patch for iOS and Android went live, v1.1.1
There are some differences in what’s new for each one of the platforms, the biggest change being support for iPhone 6 and 6 Plus on iOS and x86 architecture support on Android.
The reason why there are more tweaks on the iOS is because the Android version was updated more recently. After this update they are on par on features and fixes.</description>
      <content:encoded><![CDATA[<p>A new patch for iOS and Android went live, v1.1.1</p>
<p>There are some differences in what’s new for each one of the platforms, the biggest change being support for iPhone 6 and 6 Plus on iOS and x86 architecture support on Android.</p>
<p><a href="/wp-content/uploads/2014/12/quest_of_dungeons_iphone6_plus_vs_iphone_5.png"><img loading="lazy" src="/wp-content/uploads/2014/12/quest_of_dungeons_iphone6_plus_vs_iphone_5.png" alt="quest_of_dungeons_iphone6_plus_vs_iphone_5"  />
</a></p>
<p>The reason why there are more tweaks on the iOS is because the Android version was updated more recently. After this update they are on par on features and fixes.</p>
<p>-General-</p>
<ul>
<li>Warnings (Low Mana, Choose target) are no longer displayed on top of menus</li>
<li>Several improvements and glitch fixes</li>
</ul>
<p>-iOS specifics</p>
<ul>
<li>Added support for iPhone 6 and iPhone 6 Plus</li>
<li>New Difficulty mode “Hell”</li>
<li>Achievement added for completing “Hell”</li>
<li>Added current Save information when loading (Level, Class, Difficulty, etc) (iPad only)</li>
<li>Fixed “Create New Game” screen animation glitch where class selector would jump from off screen</li>
<li>Fixed typo in “Pierce Skin”</li>
<li>Fixed Store bug where quickly walking away before Store menu completely opens would show the menu empty</li>
<li>Store menu now remembers if Inventory was open or not before closing it</li>
<li>When playing a new game the last played difficulty is the one used by default</li>
<li>New achievement “Listen Closely”</li>
</ul>
<p>-Android specifics</p>
<ul>
<li>Can turn on 2d light effects via Start Menu-&gt;Options-&gt;High Performance</li>
<li>Added native x86 platform support</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Quest of Dungeons is now available</title>
      <link>https://www.david-amador.com/2014/04/quest-of-dungeons-is-now-available/</link>
      <pubDate>Sun, 06 Apr 2014 11:39:36 +0000</pubDate>
      <guid>https://www.david-amador.com/2014/04/quest-of-dungeons-is-now-available/</guid>
      <description>I’m pleased to announce that Quest of Dungeons is finally out.
I didn’t get to make a post on day one, and it’s been nearly two weeks since launch but these past 2 weeks have been one crazy roller coaster.
It was released on March 25th, for PC, Mac and iOS. You can get it on Steam, iOS App Store or directly from the site via Humble Store.
I released all platforms on the same day, which was something I always wanted to try, and I have to say that it didn’t went as bad as I thought.</description>
      <content:encoded><![CDATA[<p><a href="http://www.questofdungeons.com"><img loading="lazy" src="https://www.questofdungeons.com/imgs/icon.png" alt="Quest of Dungeons"  />
  </a></p>
<p>I’m pleased to announce that Quest of Dungeons is finally out.<br>
I didn’t get to make a post on day one, and it’s been nearly two weeks since launch but these past 2 weeks have been one crazy roller coaster.</p>
<p>It was released on March 25th, for PC, Mac and iOS. You can get it on <a href="https://store.steampowered.com/app/270050">Steam</a>, <a href="https://itunes.apple.com/app/id698726956/">iOS App Store</a> or directly from the <a href="https://www.questofdungeons.com/">site</a> via Humble Store.</p>
<p>I released all platforms on the same day, which was something I always wanted to try, and I have to say that it didn’t went as bad as I thought. As some of you know I have a day job so I had to take 2 vacation days to simple answer emails and do quick fixes, especially to the PC/Mac version. With each new software is natural to have problems at launch and Quest of Dungeons was no exception, and right now I’m still working on a daily basis in fixing some stuff and attending to some popular requests/changes from players to the game.</p>
<p>It was an extremely complicated task to do on my own, managing marketing, answering emails and tweets, scouting Steam forums to see if players are reporting problems, oh and do some actual coding, because you know, bugs don’t fix themselves. But overall I’m happy with the results so far.</p>
<p>The response to the game has been overall positive, and despite a few problems the game has gathered some good reviews.</p>
<p>TouchArcade – 4/5 – <a href="https://toucharcade.com/2014/04/03/quest-of-dungeons-review/">Review</a><br>
CriticalIndieGamer – 9/10 – <a href="https://criticalindiegamer.com/2014/04/quest-of-dungeons-review-pc/">Review</a><br>
SoftPedia – 7/10 – <a href="www.softpedia.com/reviews/games/pc/Quest-of-Dungeons-Review-435164.shtml">Review</a><br>
148Apps – 4/5 – <a href="https://www.148apps.com/reviews/quest-of-dungeons-review/">Review</a><br>
PocketGamer – 6/10 – <a href="https://www.pocketgamer.co.uk/r/iPad/Quest+of+Dungeons/review.asp?c=58622&amp;srch=quest+of+dungeons">Review</a></p>
<p>There are several <a href="https://www.youtube.com/results?search_query=%22quest+of+dungeons%22">youtube videos</a>, and I even caught a few people live streaming it on Twitch, it’s always awesome to see people playing your game, and having genuine reactions.</p>
<p>This is one of my favourite moments (#spoilers)</p>
<p>{&laquo; youtube ef9Z-Zs23GQ &gt;}}</p>
]]></content:encoded>
    </item>
    <item>
      <title>Quest of Dungeons development update</title>
      <link>https://www.david-amador.com/2013/12/quest-of-dungeons-development-update/</link>
      <pubDate>Wed, 11 Dec 2013 12:00:14 +0000</pubDate>
      <guid>https://www.david-amador.com/2013/12/quest-of-dungeons-development-update/</guid>
      <description>I’ve been working on Quest of Dungeons and I’m nearing Gold. I’m attempting to release every version on the same day, which I never managed to do before but would like to do this time.
I have both the iOS, Mac and Windows version very stable, the Mac and iOS apps were already accepted by the App Store, for Windows I’m still trying to wrap up the process of getting it on a digital store too.</description>
      <content:encoded><![CDATA[<p>I’ve been working on Quest of Dungeons and I’m nearing Gold. I’m attempting to release every version on the same day, which I never managed to do before but would like to do this time.<br>
I have both the iOS, Mac and Windows version very stable, the Mac and iOS apps were already accepted by the App Store, for Windows I’m still trying to wrap up the process of getting it on a digital store too. I’m just polishing the game and finishing some bugs, but I’m close, I can feel it =)<br>
Right now I’m targeting for a late January release, but I’ll have a more precise date in the next few weeks.</p>
<p>Meanwhile here are a couple of screenshots.</p>
<p><a href="/wp-content/uploads/2013/12/quest_of_dungeons_mac_01.png"><img loading="lazy" src="/wp-content/uploads/2013/12/quest_of_dungeons_mac_01-300x187.png" alt="quest_of_dungeons_mac_01"  />
</a></p>
<p><a href="/wp-content/uploads/2013/12/quest_of_dungeons_mac_02.png"><img loading="lazy" src="/wp-content/uploads/2013/12/quest_of_dungeons_mac_02-300x187.png" alt="quest_of_dungeons_mac_02"  />
</a></p>
<p><a href="/wp-content/uploads/2013/12/quest_of_dungeons_mac_03.png"><img loading="lazy" src="/wp-content/uploads/2013/12/quest_of_dungeons_mac_03-300x187.png" alt="quest_of_dungeons_mac_03"  />
</a></p>
<p><a href="/wp-content/uploads/2013/12/quest_of_dungeons_mac_04.png"><img loading="lazy" src="/wp-content/uploads/2013/12/quest_of_dungeons_mac_04-300x187.png" alt="quest_of_dungeons_mac_04"  />
</a></p>
<p><a href="/wp-content/uploads/2013/12/quest_of_dungeons_mac_05.png"><img loading="lazy" src="/wp-content/uploads/2013/12/quest_of_dungeons_mac_05-300x187.png" alt="quest_of_dungeons_mac_05"  />
</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Puwang - a 5 day work</title>
      <link>https://www.david-amador.com/2012/09/puwang-a-5-day-work/</link>
      <pubDate>Fri, 28 Sep 2012 20:03:40 +0000</pubDate>
      <guid>https://www.david-amador.com/2012/09/puwang-a-5-day-work/</guid>
      <description>Hi, how’s everyone doing?
So this was a different week for me. It’s been a long time that I had the chance to work on a small prototype or a 48H competition because of my work on Dary’s Legend so I decided to stop for a couple of days and do something else.
Also my cat’s been quite sick, and between the Vet and taking care of him, working on a fun project gave me more time do everything.</description>
      <content:encoded><![CDATA[<p>Hi, how’s everyone doing?</p>
<p>So this was a different week for me. It’s been a long time that I had the chance to work on a small prototype or a 48H competition because of my work on Dary’s Legend so I decided to stop for a couple of days and do something else.</p>
<p>Also my cat’s been quite sick, and between the Vet and taking care of him, working on a fun project gave me more time do everything.</p>
<p>Since I love shump games I decided to do one. The idea is simple, you are in a arena with your ship and you just blast enemies away.</p>
<p>Initially I worked around 6-8hours on this back in August but had to drop it because of some much other work I had, so it wasn’t until this monday I grabbed it again.</p>
<p>I decided to make the game for iOS because it’s easier to make prototypes there and I can carry them around everywhere, playing them, to see if they are any good.</p>
<p>Actually the first 8 hours where quite productive and this is what I had after that time:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/sfxpNnfoZQI" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p>So during these past 5 days I polished it a little, grabbed myself a notepad and hand-drawn everything. It’s not much artistic, but I’m not a designer.<br>
Had a few problems with iOS 6 due to some deprecated stuff but in the end it all fall into place.<br>
Also some tweaks performance-wise on the Engine where made since with a lot of stuff on screen things can get out of control pretty easily specially on these portable devices.</p>
<p>iPhone 5 just came out and I even took the time to add support for those extra pixels, actually I just increased the viewport, no scaling.</p>
<p>I probably named it poorly but it’s <strong>Puwang</strong>.</p>
<p><a href="/wp-content/uploads/2012/09/puwang2.png"><img loading="lazy" src="/wp-content/uploads/2012/09/puwang2.png" alt=""  title="puwang2"  />
</a><br>
<a href="/wp-content/uploads/2012/09/puwang.png"><img loading="lazy" src="/wp-content/uploads/2012/09/puwang.png" alt=""  title="puwang"  />
</a><br>
<a href="/wp-content/uploads/2012/09/puwang_icon_screen.png"><img loading="lazy" src="/wp-content/uploads/2012/09/puwang_icon_screen-200x300.png" alt=""  title="puwang_icon_screen"  />
</a></p>
<p>Also added some Leaderboards via Gamecenter and as I write this I’m starting to receive some feedback of the early beta builds I sent to a couple of testers. If people like it I might release it on the App Store.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/AIiKBVTiEhM" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

<p><del>If you want to participate in the beta test use this link: <a href="http://tflig.ht/SRB5aP">http://tflig.ht/SRB5aP</a></del></p>
<p><!-- raw HTML omitted -->[Edit 10-10-2012]<!-- raw HTML omitted --> Puwang is now out on the app store, you can get it <a href="http://itunes.apple.com/us/app/puwang/id566365237?ls=1&amp;mt=8">here</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>So what have I learned after eight months on the App Store</title>
      <link>https://www.david-amador.com/2011/06/so-what-have-i-learned-after-eight-months-on-the-app-store/</link>
      <pubDate>Fri, 24 Jun 2011 21:14:07 +0000</pubDate>
      <guid>https://www.david-amador.com/2011/06/so-what-have-i-learned-after-eight-months-on-the-app-store/</guid>
      <description>First of all I think this is my last idevblogaday post for a while. I my math doesn’t fail me this is my 10th post and it’s time for someone to take turn. Actually it’s just the 9th.
I hope my words have somehow enriched your knowledge, in case you want to stick around just bookmark my feeds. I keep this fairly updated. Also since I’ve been working on a new game</description>
      <content:encoded><![CDATA[<p><!-- raw HTML omitted -->First of all I think this is my last <a href="http://idevblogaday.com/">idevblogaday</a> post for a while. I my math doesn’t fail me this is my 10th post and it’s time for someone to take turn.<!-- raw HTML omitted --> Actually it’s just the 9th.<br>
I hope my words have somehow enriched your knowledge, in case you want to stick around just bookmark my feeds. I keep this fairly updated. Also since I’ve been working on a new game<br>
there’s probably news to share in the next 2-3 months.</p>
<p>Around 11 months ago I registered my App Store developer account. The idea…put Vizati on the iPhone.<br>
I’ve never worked with Mac’s before, didn’t even have an iPhone/iPod or whatever. I just read that a bunch of people got rich and many more where making a living out of it.<br>
So here I go.</p>
<p><strong>Just placing an app there will sell</strong></p>
<p>My first BIG mistake was the general conception that “just placing an app there will sell”. That’s probably true on the very first months the App Store opened. Not now, trust me. You release a new game, will probably have a few sales on the 1st day because it’s on the new released games and that’s it, only on very rare conditions will the game start selling very good with just that.<br>
So keep in mind advertisement on iOS is mandatory, forums, twitter, mailing list, whatever.<br>
The first month I was sending dozens of emails every single day to websites, journalists, magazines, some paid off, others didn’t.</p>
<p><strong>Release my app at a Thursday to be featured at that week’s App Featured Apps</strong></p>
<p>Although this might increase your odds, we released Vizati on a Friday, 2 weeks later it got a feature on the App Store, so it can still happen. Just create something cool and appealing.</p>
<p><strong>$0.99 is the way to go</strong></p>
<p>Wrong, don’t EVER place your app at $0.99 right from start. Evaluate it well, start higher. Having a higher price will help to distinguish it from others, will give you margin for promotions without making it free. Many costumers, tired of the enormous lists of game will only seek higher priced games because logic mandates that they are indeed better. If you think your app is not worth more that $0.99 go back to the drawing boards. There’s no sense in having crappy apps, 100 bad apps may not sell as much as 5 really good ones.<br>
Selling at a low price will also bring all kinds of customers, they will give you a 1 star just because you haven’t updated the app in 5 months or so. Customers that buy pricier app are more forgiving and respectful.</p>
<p><strong>Making a Free promotion will help boost sales afterwords</strong></p>
<p>True, for the first 2-3 days. Then you’ll get back to whatever you where selling. Unless you have some in-game purchases it’s not worth it. Well only if you want to brag to your friends that your app got 100K downloads no matter the price. I’ve tried this 3 times, each time I place it at a smarter occasion getting successfully more downloads, thing is that after 3 days of getting back to regular price things would slowly return to normal. Depending on promotion amount of days you may end up with the same money you would have not making the promotion. Also usually you will see your rating decreasing half or a full star, keep in mind, all kinds of people will download it.</p>
<p><strong>Answering to customers Feedback helps sales</strong></p>
<p>Obviously implementing a highly demanded features will make them happy thus recommending to friends. Just don’t go making all the changes they ask. Choose a position and defend it, show that things are the way they are because you choose so, not because of some mistake.</p>
<p><strong>People will buy all kinds of crap, just place one level.</strong></p>
<p>Also true, but just because they bought a “fart app” doesn’t mean they wont’ complain about your 15m duration game.</p>
<p>Well, time to go work on top secret project, see ya later</p>
]]></content:encoded>
    </item>
    <item>
      <title>A little on how to initialize and use GameCenter</title>
      <link>https://www.david-amador.com/2011/04/a-little-on-how-to-initialize-and-use-gamecenter/</link>
      <pubDate>Fri, 01 Apr 2011 10:53:01 +0000</pubDate>
      <guid>https://www.david-amador.com/2011/04/a-little-on-how-to-initialize-and-use-gamecenter/</guid>
      <description>Small side-note first, Vizati is now available for the Super Nintendo, more info.
For my third idevblogaday post I’m going to talk about Game Center.
Game Center was released only a couple months ago (September or so) but already tons of applications are using it and even more, players ask for it.
It’s a way to track achievements, leader boards etc. Unfortunately It’s only available from iOS 4.1+, so some compatibility check has to be done.</description>
      <content:encoded><![CDATA[<blockquote>
<p><em>Small side-note first, Vizati is now available for the Super Nintendo, <a href="http://www.differentpixel.com/2011/04/vizati-now-available-for-the-super-nintendo/">more info</a>.</em></p>
</blockquote>
<p>For my third <a href="http://idevblogaday.com/">idevblogaday</a> post I’m going to talk about <a href="http://en.wikipedia.org/wiki/Game_Center">Game Center</a>.<br>
Game Center was released only a couple months ago (September or so) but already tons of applications are using it and even more, players ask for it.</p>
<p>It’s a way to track achievements, leader boards etc. Unfortunately It’s only available from iOS 4.1+, so some compatibility check has to be done.</p>
<p>Let’s start by checking if the device is able to use Game Center</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">-</span> <span class="p">(</span><span class="n">BOOL</span><span class="p">)</span><span class="n">isGameCenterAvailable</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>	
</span></span><span class="line"><span class="cl">    <span class="c1">// Check for presence of GKLocalPlayer API.	
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">Class</span> <span class="n">gcClass</span> <span class="o">=</span> <span class="p">(</span><span class="n">NSClassFromString</span><span class="p">(</span><span class="err">@</span><span class="s">&#34;GKLocalPlayer&#34;</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// The device must be running running iOS 4.1 or later.	
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">NSString</span> <span class="o">*</span><span class="n">reqSysVer</span> <span class="o">=</span> <span class="err">@</span><span class="s">&#34;4.1&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="c1">// Get Current sys version	
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">NSString</span> <span class="o">*</span><span class="n">currSysVer</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIDevice</span> <span class="n">currentDevice</span><span class="p">]</span> <span class="n">systemVersion</span><span class="p">];</span>	
</span></span><span class="line"><span class="cl">    <span class="c1">// Compare both versions
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="n">BOOL</span> <span class="n">osVersionSupported</span> <span class="o">=</span> <span class="p">([</span><span class="n">currSysVer</span> <span class="nl">compare</span><span class="p">:</span><span class="n">reqSysVer</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSNumericSearch</span><span class="p">]</span> <span class="o">!=</span> <span class="n">NSOrderedAscending</span><span class="p">);</span>	
</span></span><span class="line"><span class="cl">    <span class="c1">// Final Check
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="k">return</span> <span class="p">(</span><span class="n">gcClass</span> <span class="o">&amp;&amp;</span> <span class="n">osVersionSupported</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Now we can use it to check if it’s available before actually using it. I would advise you to make this check only once at start and store it somewhere. Using this function intensively is not recommended.</p>
<p>So to init Game Center:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">initGameCenter</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Only continue if Game Center is available on this device
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="p">([</span><span class="n">self</span> <span class="n">isGameCenterAvailable</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="c1">// Authenticate the local player
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="p">[</span><span class="n">self</span> <span class="n">gameCenterAuthenticate</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">		<span class="c1">// Register the GKPlayerAuthenticationDidChangeNotificationName notification
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="n">NSNotificationCenter</span> <span class="o">*</span><span class="n">nc</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">		<span class="p">[</span><span class="n">nc</span> <span class="nl">addObserver</span><span class="p">:</span> <span class="n">self</span>
</span></span><span class="line"><span class="cl">			   <span class="nl">selector</span><span class="p">:</span><span class="err">@</span><span class="n">selector</span><span class="p">(</span><span class="n">gameCenterAuthenticationChanged</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">				   <span class="nl">name</span><span class="p">:</span><span class="n">GKPlayerAuthenticationDidChangeNotificationName</span>
</span></span><span class="line"><span class="cl">				 <span class="nl">object</span><span class="p">:</span><span class="n">nil</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>Noticed the <em>gameCenterAuthenticate</em> and <em>gameCenterAuthenticationChanged</em> we registered?</p>
<p>First our registered function will check if the player has logged in, if not it will prompt it.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">gameCenterAuthenticate</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Authenticate the local user
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span><span class="p">([</span><span class="n">GKLocalPlayer</span> <span class="n">localPlayer</span><span class="p">].</span><span class="n">authenticated</span> <span class="o">==</span> <span class="n">NO</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="p">[[</span><span class="n">GKLocalPlayer</span> <span class="n">localPlayer</span><span class="p">]</span> <span class="nl">authenticateWithCompletionHandler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">               <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span><span class="p">(</span><span class="n">error</span> <span class="o">==</span> <span class="n">nil</span><span class="p">)</span> 
</span></span><span class="line"><span class="cl">                        <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="c1">// Game Center Active and Player Sucessfully logged in
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                                <span class="c1">// Store in your global vars that Game Center is Active
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="p">}</span> 
</span></span><span class="line"><span class="cl">                        <span class="k">else</span> 
</span></span><span class="line"><span class="cl">                        <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="c1">// Player Is not Logged In, so proceed as not having Game Center
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>                                <span class="c1">// Store in your global vars that Game Center is INACTIVE
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}];</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">gameCenterAuthenticationChanged</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="n">self</span> <span class="n">gameCenterAuthenticate</span><span class="p">];</span> <span class="c1">// In case the player makes logout we prompt it with login again.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>To submit something to Game Center:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">         <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">category</span> <span class="o">=</span> <span class="s">&#34;top_score&#34;</span><span class="p">;</span> <span class="c1">// Identifier you registered for your App with Apple, check iTunesConnect
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>         <span class="kt">int</span> <span class="n">value</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="c1">// Let&#39;s say your player made 1000 points
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl">         <span class="n">NSString</span> <span class="o">*</span><span class="n">cat</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSString</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithUTF8String</span><span class="p">:</span><span class="n">category</span><span class="p">.</span><span class="n">c_str</span><span class="p">()];</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Report the high score to Game Center
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="n">GKScore</span> <span class="o">*</span><span class="n">scoreReporter</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">GKScore</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithCategory</span><span class="p">:</span><span class="n">cat</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">scoreReporter</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">[</span><span class="n">scoreReporter</span> <span class="nl">reportScoreWithCompletionHandler</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="n">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="p">(</span><span class="n">error</span> <span class="o">==</span> <span class="n">nil</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="n">NSLog</span><span class="p">(</span><span class="err">@</span><span class="s">&#34;Game Center - High score successfully sent&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}];</span>	
</span></span></code></pre></div><p>And that’s it. There’s tons of other stuff like achievements, online playing etc. But this should get you started.</p>
]]></content:encoded>
    </item>
    <item>
      <title>iPad launch images support for all orientations</title>
      <link>https://www.david-amador.com/2010/09/ipad-launch-images-support-for-all-orientations/</link>
      <pubDate>Fri, 10 Sep 2010 23:23:49 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/09/ipad-launch-images-support-for-all-orientations/</guid>
      <description>When loading an application on an iPhone or iPad, a launch image can be shown to provide feedback to the user that the application is loading.
On the iPhone a Default.png was used, with the iPad we need to anticipate the device being started in any orientation.
Filename Dimensions Default-Portrait.png * 768w x 1024h Default-PortraitUpsideDown.png 768w x 1024h Default-Landscape.png ** 1024w x 768h Default-LandscapeLeft.png 1024w x 768h Default-LandscapeRight.png 1024w x 768h Default.</description>
      <content:encoded><![CDATA[<p>When loading an application on an iPhone or iPad, a launch image can be shown to provide feedback to the user that the application is loading.<br>
On the iPhone a Default.png was used, with the iPad we need to anticipate the device being started in any orientation.</p>
<table>
<thead>
<tr>
<th>Filename</th>
<th>Dimensions</th>
</tr>
</thead>
<tbody>
<tr>
<td>Default-Portrait.png *</td>
<td>768w x 1024h</td>
</tr>
<tr>
<td>Default-PortraitUpsideDown.png</td>
<td>768w x 1024h</td>
</tr>
<tr>
<td>Default-Landscape.png **</td>
<td>1024w x 768h</td>
</tr>
<tr>
<td>Default-LandscapeLeft.png</td>
<td>1024w x 768h</td>
</tr>
<tr>
<td>Default-LandscapeRight.png</td>
<td>1024w x 768h</td>
</tr>
<tr>
<td>Default.png</td>
<td>Not recommended</td>
</tr>
</tbody>
</table>
<p>* If you have not specified a Default-PortraitUpsideDown.png file, this file will take precedence.</p>
<p>** If you have not specified a Default-LandscapeLet.png or Default-LandscapeRight.png image file, this file will take precedence.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Setting OpenGL view for iPhone 4 retina hi resolution</title>
      <link>https://www.david-amador.com/2010/09/setting-opengl-view-for-iphone-4-retina-hi-resolution/</link>
      <pubDate>Fri, 10 Sep 2010 09:24:23 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/09/setting-opengl-view-for-iphone-4-retina-hi-resolution/</guid>
      <description>This had me scratching my head for awhile.
At first I thought that glGetRenderbufferParameterivOES would properly detect Retina screen at 960×640 but it keeps returning 480×320.
A little explanation on Retina screen first. Older devices have 320×480 screen resolution. With new iPhone 4 and iPod Touch 4G the screen has 640×960 but on the same physical area. This means that each pixel is 4 times as small.
To properly simulate older games resolutions iOS will replace each of your 320×480 game pixel by 4, this way your game will look identical.</description>
      <content:encoded><![CDATA[<p>This had me scratching my head for awhile.<br>
At first I thought that glGetRenderbufferParameterivOES would properly detect Retina screen at 960×640 but it keeps returning 480×320.</p>
<p>A little explanation on Retina screen first. Older devices have 320×480 screen resolution. With new iPhone 4 and iPod Touch 4G the screen has 640×960 but on the same physical area. This means that each pixel is 4 times as small.<br>
To properly simulate older games resolutions iOS will replace each of your 320×480 game pixel by 4, this way your game will look identical.</p>
<p><img loading="lazy" src="/wp-content/uploads/2010/09/retina_pixels.jpg" alt=""  title="retina_pixels"  />
</p>
<p>So the API handles this differently. If you developed for iPad you notice that glGetRenderbufferParameterivOES return 1024×768 but not retina displays. Instead you have to check it yourself:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">w</span> <span class="o">=</span> <span class="mi">320</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">h</span> <span class="o">=</span> <span class="mi">480</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl"><span class="kt">float</span> <span class="n">ver</span> <span class="o">=</span> <span class="p">[[[</span><span class="n">UIDevice</span> <span class="n">currentDevice</span><span class="p">]</span> <span class="n">systemVersion</span><span class="p">]</span> <span class="n">floatValue</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="c1">// You can&#39;t detect screen resolutions in pre 3.2 devices, but they are all 320x480
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">if</span> <span class="p">(</span><span class="n">ver</span> <span class="o">&gt;=</span> <span class="mf">3.2f</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="n">UIScreen</span><span class="o">*</span> <span class="n">mainscr</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">	<span class="n">w</span> <span class="o">=</span> <span class="n">mainscr</span><span class="p">.</span><span class="n">currentMode</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">h</span> <span class="o">=</span> <span class="n">mainscr</span><span class="p">.</span><span class="n">currentMode</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">		
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">w</span> <span class="o">==</span> <span class="mi">640</span> <span class="o">&amp;&amp;</span> <span class="n">h</span> <span class="o">==</span> <span class="mi">960</span><span class="p">)</span> <span class="c1">// Retina display detected
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Set contentScale Factor to 2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="n">self</span><span class="p">.</span><span class="n">contentScaleFactor</span> <span class="o">=</span> <span class="mf">2.0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Also set our glLayer contentScale Factor to 2
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="n">CAEAGLLayer</span> <span class="o">*</span><span class="n">eaglLayer</span> <span class="o">=</span> <span class="p">(</span><span class="n">CAEAGLLayer</span> <span class="o">*</span><span class="p">)</span><span class="n">self</span><span class="p">.</span><span class="n">layer</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="n">eaglLayer</span><span class="p">.</span><span class="n">contentsScale</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="c1">//new line
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>Easy right? Remember, you must do this before calling glGetRenderbufferParameterivOES.<br>
For touch positions just multiply each position by the scale factor.</p>
<p>I’ve only tested this on the simulator since I don’t own an iPhone 4 but it should work and detect either you are on a regular or retina screen.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Targetting iOS devices hardware</title>
      <link>https://www.david-amador.com/2010/09/targetting-ios-devices-hardware/</link>
      <pubDate>Wed, 08 Sep 2010 12:01:37 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/09/targetting-ios-devices-hardware/</guid>
      <description>I decided to compile all iOS devices specs here so we can get a better glimpse on their hardware and what we can expect from them.
This covers iPhones, iPod Touches and iPad.
iPhone/iPhone 3G – 412 MHz / 128MB / 320×480
iPhone 3GS – 600 MHz / 256MB / 320×480
iPhone 4 -~800MHz / 512MB / 640×960
iPod Touch 1G – 412 MHz / 128MB / 320×480
iPod Touch 2G – 532 MHz / 128MB / 320×480</description>
      <content:encoded><![CDATA[<p>I decided to compile all iOS devices specs here so we can get a better glimpse on their hardware and what we can expect from them.</p>
<p>This covers iPhones, iPod Touches and iPad.</p>
<p><strong>iPhone/iPhone 3G</strong> – 412 MHz / 128MB / 320×480<br>
<strong>iPhone 3GS</strong> – 600 MHz / 256MB / 320×480<br>
<strong>iPhone 4</strong> -~800MHz / 512MB / 640×960</p>
<p><strong>iPod Touch 1G</strong> – 412 MHz / 128MB / 320×480<br>
<strong>iPod Touch 2G</strong> – 532 MHz / 128MB / 320×480<br>
<strong>iPod Touch 3G</strong> – 600 MHz / 256MB / 320×480<br>
<strong>iPod Touch 4G</strong> – 800 MHz / 256MB / 640×960</p>
<p><strong>iPad</strong> – 1 GHz / 256MB /1024×768</p>
<p>I think this data is correct (Wikipedia) but let me know if some is wrong.</p>
<p>As you can see there’s some great deal of difference in CPU clocks on some models. So watch out if you want to target all generations since some games can be run slow on older devices.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
