<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Log on David Amador</title>
    <link>https://www.david-amador.com/tags/log/</link>
    <description>Recent content in Log on David Amador</description>
    <image>
      <title>David Amador</title>
      <url>https://www.david-amador.com/david-amador-pixel.png</url>
      <link>https://www.david-amador.com/david-amador-pixel.png</link>
    </image>
    <generator>Hugo -- 0.139.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 20 Nov 2009 10:53:13 +0000</lastBuildDate>
    <atom:link href="https://www.david-amador.com/tags/log/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to do a Xna Log file</title>
      <link>https://www.david-amador.com/2009/11/how-to-do-a-xna-log-file/</link>
      <pubDate>Fri, 20 Nov 2009 10:53:13 +0000</pubDate>
      <guid>https://www.david-amador.com/2009/11/how-to-do-a-xna-log-file/</guid>
      <description>&lt;p&gt;Although the title says XNA log file this is actually a C# log file, I’ve just thrown this title cause lot’s of people search for xna log instead of C# log file.&lt;/p&gt;
&lt;p&gt;Many have asked me why take time to do a log file when you can throw exceptions when something goes wrong. Well the answer is simple, to keep track of what’s happening, log steps, write to the file exactly what when wrong even if you are on Release mode, and more, if someone complains the game is crashing you simply ask for the log file and see what when wrong.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Although the title says XNA log file this is actually a C# log file, I’ve just thrown this title cause lot’s of people search for xna log instead of C# log file.</p>
<p>Many have asked me why take time to do a log file when you can throw exceptions when something goes wrong. Well the answer is simple, to keep track of what’s happening, log steps, write to the file exactly what when wrong even if you are on Release mode, and more, if someone complains the game is crashing you simply ask for the log file and see what when wrong.</p>
<p>I’ve recently build one for my engine Basalt so I decided to share the result, start by creating log type:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">enum</span> <span class="n">Log_Type</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="n">ERROR</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">WARNING</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="n">INFO</span> <span class="p">=</span> <span class="m">2</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></div><p>Next, the class itself:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"> <span class="kd">public</span> <span class="kd">static</span> <span class="k">class</span> <span class="nc">Logger</span>
</span></span><span class="line"><span class="cl">   <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">static</span> <span class="kd">protected</span> <span class="kt">bool</span>              <span class="n">_active</span><span class="p">;</span>  <span class="c1">// In case you want to deactivate the logger</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kd">static</span> <span class="kd">public</span> <span class="k">init</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">_active</span> <span class="p">=</span> <span class="kc">true</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="cp">#if</span> <span class="n">WINDOWS</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">StreamWriter</span> <span class="n">textOut</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StreamWriter</span><span class="p">(</span><span class="k">new</span> <span class="n">FileStream</span><span class="p">(</span><span class="s">&#34;log.html&#34;</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Create</span><span class="p">,</span> <span class="n">FileAccess</span><span class="p">.</span><span class="n">Write</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">            <span class="n">textOut</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Log File&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">textOut</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">textOut</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;&lt;span style=&#34;</span><span class="n">font</span><span class="p">-</span><span class="n">family</span><span class="p">:</span> <span class="s">&#34;Kootenay&#34;</span><span class="p">;</span> <span class="n">color</span><span class="p">:</span> <span class="err">#</span><span class="m">000000</span><span class="p">;</span><span class="s">&#34;&gt;&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">            <span class="n">textOut</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&#34;Log started at &#34;</span> <span class="p">+</span> <span class="n">System</span><span class="p">.</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">ToLongTimeString</span><span class="p">()+</span><span class="s">&#34;&lt;/span&gt;
</span></span></span><span class="line"><span class="cl"><span class="s"></span><span class="p">&lt;</span><span class="n">hr</span><span class="p">&gt;&lt;/</span><span class="n">hr</span><span class="p">&gt;</span><span class="s">&#34;);
</span></span></span><span class="line"><span class="cl"><span class="s"></span>            <span class="n">textOut</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="cp">#endif</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kd">static</span> <span class="kd">public</span> <span class="kt">bool</span> <span class="n">Active</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_active</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">set</span> <span class="p">{</span> <span class="n">_active</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kd">static</span> <span class="kd">public</span> <span class="k">void</span> <span class="n">log</span><span class="p">(</span><span class="n">Log_Type</span> <span class="n">type</span><span class="p">,</span> <span class="kt">string</span> <span class="n">text</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="cp">#if</span> <span class="n">WINDOWS</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(!</span><span class="n">_active</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="kt">string</span> <span class="n">begin</span> <span class="p">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="k">switch</span> <span class="p">(</span><span class="n">type</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="n">Log_Type</span><span class="p">.</span><span class="n">ERROR</span><span class="p">:</span> <span class="n">begin</span> <span class="p">=</span> <span class="s">&#34;&lt;span style=&#34;</span><span class="n">color</span><span class="p">:</span> <span class="err">#</span><span class="m">00f000</span><span class="p">;</span><span class="s">&#34;&gt;&#34;</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="n">Log_Type</span><span class="p">.</span><span class="n">INFO</span><span class="p">:</span> <span class="n">begin</span> <span class="p">=</span> <span class="s">&#34;&lt;span style=&#34;</span><span class="n">color</span><span class="p">:</span> <span class="err">#</span><span class="m">0008f0</span><span class="p">;</span><span class="s">&#34;&gt;&#34;</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">                <span class="k">case</span> <span class="n">Log_Type</span><span class="p">.</span><span class="n">WARNING</span><span class="p">:</span> <span class="n">begin</span> <span class="p">=</span> <span class="s">&#34;&lt;span style=&#34;</span><span class="n">color</span><span class="p">:</span> <span class="err">#</span><span class="m">00f</span><span class="n">f00</span><span class="p">;</span><span class="s">&#34;&gt;&#34;</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="n">text</span> <span class="p">=</span> <span class="n">begin</span><span class="p">+</span><span class="n">System</span><span class="p">.</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">ToLongTimeString</span><span class="p">()</span> <span class="p">+</span> <span class="s">&#34; : &#34;</span> <span class="p">+</span> <span class="n">text</span> <span class="p">+</span> <span class="s">&#34;&lt;/span&gt;&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="n">Output</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="cp">#endif</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="kd">static</span> <span class="kd">private</span> <span class="k">void</span> <span class="n">Output</span><span class="p">(</span><span class="kt">string</span> <span class="n">text</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="cp">#if</span> <span class="n">WINDOWS</span>
</span></span><span class="line"><span class="cl">            <span class="k">try</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="n">StreamWriter</span> <span class="n">textOut</span> <span class="p">=</span> <span class="k">new</span> <span class="n">StreamWriter</span><span class="p">(</span><span class="k">new</span> <span class="n">FileStream</span><span class="p">(</span><span class="s">&#34;log.html&#34;</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Append</span><span class="p">,</span> <span class="n">FileAccess</span><span class="p">.</span><span class="n">Write</span><span class="p">));</span>
</span></span><span class="line"><span class="cl">                <span class="n">textOut</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">                <span class="n">textOut</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">catch</span> <span class="p">(</span><span class="n">System</span><span class="p">.</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="kt">string</span> <span class="n">error</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#endif</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">	
</span></span></code></pre></div><p>For using just do on your game constructor:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="n">Logger</span><span class="p">.</span><span class="k">init</span><span class="p">();</span>
</span></span></code></pre></div><p>After this since it’s a static class you can do wherever you want a log, something like this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="n">Logger</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">Log_Type</span><span class="p">.</span><span class="n">INFO</span><span class="p">,</span><span class="s">&#34;Resolution Changed&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">Logger</span><span class="p">.</span><span class="n">log</span><span class="p">(</span><span class="n">Log_Type</span><span class="p">.</span><span class="n">ERROR</span><span class="p">,</span><span class="s">&#34;Unable to find texture XPTO&#34;</span><span class="p">);</span>
</span></span></code></pre></div><p>This will output a log.html file that you can open with your favorite browser.</p>
<p><a href="/wp-content/uploads/2009/11/basalt_log.jpg"><img alt="basalt_log" loading="lazy" src="/wp-content/uploads/2009/11/basalt_log-300x189.jpg" title="basalt_log"></a></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
