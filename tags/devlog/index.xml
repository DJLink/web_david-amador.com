<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>devlog on David Amador</title>
    <link>https://www.david-amador.com/tags/devlog/</link>
    <description>Recent content in devlog on David Amador</description>
    <image>
      <title>David Amador</title>
      <url>https://www.david-amador.com/david-amador-pixel.png</url>
      <link>https://www.david-amador.com/david-amador-pixel.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 15 Oct 2023 17:20:55 +0000</lastBuildDate>
    <atom:link href="https://www.david-amador.com/tags/devlog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>game5 devlog #2</title>
      <link>https://www.david-amador.com/2023/10/game5-devlog-2/</link>
      <pubDate>Sun, 15 Oct 2023 17:20:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/10/game5-devlog-2/</guid>
      <description>I missed last week devlog, mostly because I did almost no progress but also because it was a bad week overall, personally and in terms of work, nothing too bad but you know that feeling when you barely made any progress, despite tons of work hours? So one of those weeks.
But onto game5 progress.
Importers I managed to finish some of the importers (spreadsheets -&amp;gt; ScriptableObjects + prefabs) that I was working on, right now I can just glance over values on a spreadsheet, tweak, and have it export all the Scriptable Objects, generating the prefabs with corresponding data and images and test them.</description>
      <content:encoded><![CDATA[<p>I missed last week devlog, mostly because I did almost no progress but also because it was a bad week overall, personally and in terms of work, nothing too bad but you know that feeling when you barely made any progress, despite tons of work hours? So one of those weeks.</p>
<p>But onto <a href="/2023/10/game5-devlog-1/" title="game5 devlog #1">game5</a> progress.</p>
<h2 id="importers">Importers</h2>
<p>I managed to finish some of the importers (spreadsheets -&gt; ScriptableObjects + prefabs) that I was working on, right now I can just glance over values on a spreadsheet, tweak, and have it export all the Scriptable Objects, generating the prefabs with corresponding data and images and test them. I could have made the game parse the spreadsheet at boot time and create them, but I decided against it, I want to generate this process offline. One of the reasons is because I have more control over not replacing existing items GUIDs (to keep and existing links), and also I can tweak any individually generated files manually, if I need to.</p>
<h2 id="testing-amp-automation">Testing &amp; Automation</h2>
<p>As I start to get more pieces onto the game I’m hitting the time that I need to start testing what I do, obviously with beta testers etc, but also I need to find a way to test it on my own in an effective way. For bugs, balance and well, fun factor.</p>
<p>I recall for Quest of Dungeons I had several spreadsheets with the game combat formulas and it would show up curves of progression for each character stat as it levelled up, this helped me visualising pros and cons of each one of them. And even other stuff, like how many total XP points one could get by each floor, or gold, so even with the procedural nature, I knew lower and upper bounds.</p>
<p>That meant that even if I never ended up getting a really good, or bad combination of items during my tests, I could see the best and worst case, and I would tweak monsters and boss fights accordingly.</p>
<p>This leads me to this game, where given it’s nature of it’s progression, I’m still unsure of the best tools I can cook up to help me on this, before I place it on testers hands. It won’t be bullet proof but it would be best for me to get a general idea of what to expect.</p>
<p>Automation is something I had for QoD and already have it to a certain degree here, an “auto playtester”, basically a script that just does some dumb decisions and plays the game on it’s own, this doesn’t give much info but at least I can quicky test over crashes over certain periods of time, I just let it playing on it’s own. It has limitations but it’s nice.</p>
<h2 id="content">Content</h2>
<p>As I’m making importers for content I’m now starting to replace some testing placeholders with what I think will be final, in terms of mechanics and items, which is why the Testing phase will start to be important as I tweak content and also gameplay values, the fun factor of the game in a way.</p>
<p>This step is usually the one I get stuck the most, because as much as I can plan on paper, some things might not work at all when testing, also trying to keep the scope realistic for me, I’m just one person coding all this, got to be real here. I always think “oh 8 items might be too little content”, but then again sometimes less is more, as long as it’s well placed. Also being less we can always add more later if needed. Doing work unnecessarily hurts more, on Vizati and QoD locking down content amount like “7 floors max, 4 characters, 10 skills per character” really helped me early on, it was tangible and gives a sense of progression and motivation as we create each one. So that’s the sort of thing I’m trying to do here.</p>
<p>So that’s one of the reasons I’m trying to decide this stuff right now, considering the very low time and budget I have available, I’m trying to realistically get a good scope for what I can do, even if it turns out a short game (and that’s ok), match everything as close as possible to what I think I’ll need in the end, so I can decide the stage of art, where to get it, or who to hire, or even if it’s something I could do on my own (some of it anyway). Yeah I know I just described that I’m lacking a proper <a href="https://en.wikipedia.org/wiki/Game_design_document">GDD</a> 🙂</p>
<h5 id="mood">Mood</h5>
<p>So all around I feel a bit more optimistic about game5 this week, but as any game developer will tell you, this feeling goes up and down every given week xD. Sometimes I feel like I might have something here, other times “this sucks”.<br>
Until the next post!</p>
<p>post feature image from deviantArt, Halloween month! 🎃 (<a href="https://www.deviantart.com/hoshi-pan/art/witch-tea-818804167">https://www.deviantart.com/hoshi-pan/art/witch-tea-818804167</a>)</p>
]]></content:encoded>
    </item>
    <item>
      <title>game5 devlog #1</title>
      <link>https://www.david-amador.com/2023/10/game5-devlog-1/</link>
      <pubDate>Mon, 02 Oct 2023 20:40:47 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/10/game5-devlog-1/</guid>
      <description>Nothing announced, not even a name decided, but I want to vaguely blog about it as a means of brainstorming with myself. I’ll be vague as heck until I’m sure I have something worth “here’s a new game”, if that ever turns out to be the case.
So this week’s it’s progress on my “on-going not yet announced game because not ready and might be bad” game, which I decided to for now on call Game5 here, so it’s easier to know what we are talking about.</description>
      <content:encoded><![CDATA[<p>Nothing announced, not even a name decided, but I want to vaguely blog about it as a means of brainstorming with myself. I’ll be vague as heck until I’m sure I have something worth “here’s a new game”, if that ever turns out to be the case.</p>
<p>So this week’s it’s progress on my “on-going not yet announced game because not ready and might be bad” game, which I decided to for now on call Game5 here, so it’s easier to know what we are talking about.</p>
<h2 id="no-progress">No progress</h2>
<p>I haven’t been able to do make progress during the day because of contract work, so it’s mostly nights and weekends when physically possible. And I’m actually feeling a bit bad about this, so this might take a while. There’s been weeks of good productivity followed by weeks/months of just “seems to be the same”. To be honest some design decisions were also blocking me, the initial plan was enough to start but there’s always some roadblocks ahead.</p>
<h2 id="death-by-a-thousand-buttons">Death by a thousand buttons</h2>
<p>After QoD I specifically remember saying “My next game needs to have as little UI as possible”, but here we are, this game will (probably) live or die depending on how bad it is to use it. I mean the “game” part has to be fun as well obviously, but there is a lot of interconnection between both. You’ll understand what I mean by that later. No it’s not an RTS etc.</p>
<h2 id="slow-progress-is-better-than-none">Slow progress is better than none</h2>
<p>But the past 2-3 weeks I got a little lightbulb that gave me a general direction of a way to solve some stuff and it’s on a good track again I feel. And while there’s no real need for the UI to look good at this point, I already have 2 iterations of it, mostly from a functional standpoint.</p>
<p>I did a first prototype with the general idea, not all features, but turned out incredibly cumbersome to use from a UX standpoint. But this was good, I felt there was still something there in terms of “game”, just needs iteration.</p>
<p>I “quickly” remade it into a different one recently, and now I feel it’s much better, there’s still a lot to do in terms of making it coherent. But this is also the part where I feel I have to focus on the “toy” part of the game itself.</p>
<h3 id="planning">Planning</h3>
<p>A lot of my problems sometimes come from lack of planning some details more carefully, in a way it’s good to just jump in and get it rolling, but other times it comes back to bite you. With that in mind, and since I now have a general idea of functionalities and a barebones UI, I hired someone to freelance work with me on their spare time on the UI. At this point it’s compartmentalized enough that if they need to leave to other things I can carry on, and also I can focus a bit more on the gameplay components.</p>
<h3 id="iteration-and-automation">Iteration and Automation</h3>
<p>I do a lot of notes and value on spreadsheets, that end up on the game, for testing, and especially during prototype phase I found myself copying pasting values around. So I took a couple hours to write some python scripts that grab cvs, parse them and export the proper ScriptableObjects for what I need. This speeds up quick testing and changing values. I was getting tired of changing them directly on Unity inspector.</p>
<h2 id="next-steps">Next steps</h2>
<p>My next move is balancing out a initial progress/difficulty ramp. Right now I have most stuff “just there”, in a sort of chaotic way, to test out the fun of it, but I need to make a proper vertical slice. At this point I do have several mechanics in place, but a lot buggy and a bit all over the place, so I have to streamline that to make it more cohesive. I don’t have any new mechanics still missing (so far), so just cooking up a small prototype that I could just hand over to someone and have them play, and see what happens.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Unity enshittification round 2, moving on to custom tech.</title>
      <link>https://www.david-amador.com/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/</link>
      <pubDate>Sun, 24 Sep 2023 09:57:43 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/</guid>
      <description>After mostly a week of anxiety, for thousands and thousands of developers, Unity changed the rules again, and first glance, it’s better for the immediate problems it would cause for active and in-development games. They removed the retroactive aspect of the “pay-per-game-install”, so only for someone on Unity 2023 LTS+ (launching next year) will that apply, current projects will not be affected. Small relief, as long as we can keep using existing versions with current Terms of Service.</description>
      <content:encoded><![CDATA[<p>After mostly a <a href="/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/" title="The Unity enshittification, proprietary tech dangers, and mostly not talking about what I’m doing.">week of anxiety,</a> for thousands and thousands of developers, Unity <a href="https://blog.unity.com/news/open-letter-on-runtime-fee">changed the rules again</a>, and first glance, it’s better for the immediate problems it would cause for active and in-development games. They removed the retroactive aspect of the “pay-per-game-install”, so only for someone on Unity 2023 LTS+ (launching next year) will that apply, current projects will not be affected. Small relief, as long as we can keep using existing versions with current Terms of Service. This will be impossible on mobile and consoles in a short time frame due to SDKs, but for PC should be fine.</p>
<p>So that’s good huh? Well not quite imo, because the rest pretty much maintains, more or less with some changes, Unity Plus still gone (although expected), but <a href="https://unity.com/pricing-updates">it’s a revenue/pay-per-install deal</a>, on top of the yearly license fees. I feel they fear they tainted their image so much they aren’t even forcing the Unity splash screen anymore, probably because players will now fear every Unity game will come with install tracking software.</p>
<p>I think the subscription plan, especially for mobile/consoles is needed, it’s a company and needs to make money to maintain the software, fair. However for me it’s a lot of the break of trust they did, and trying for the SECOND time (that I recall) to change the Terms of Service retroactively and only after industry-wide outrage did they backtracked slightly. So for now the new-new rules only apply to a smaller %, which I guess they expect will calm down most of the community. In a couple years they’ll pull some other stunt and we’ll recall “oh right, they did this before”.</p>
<p>Furthermore, they had deleted the transparency repo with the Terms of Service from GitHub, which raised many eyebrows, when enquired to why they deleted the answer was “low views so it was deleted”. The repo is back up meanwhile, I mean, what the heck?</p>
<p><a href="https://twitter.com/unity/status/1705317639478751611"><img loading="lazy" src="/wp-content/uploads/2023/09/image-2.png" alt=""  />
</a></p>
<h2 id="moving-forward">Moving forward</h2>
<p>So as I mentioned in last post I have been working on a prototype for what I hope I can turn into a new game, in Unity. I decided that I’ll continue working on the prototype in Unity (actually taking a break from work right now to write this), it would be slightly silly to change now. And when I feel most of the features are done, I’ll try to move to my own tech, yes again.</p>
<p>I’ve been doing some research and tests and I’ll be dismantling <a href="/tags/quest-of-dungeons/" title="Quest of Dungeons development update">Quest of Dungeons</a> engine, which was all <a href="https://en.wikipedia.org/wiki/Object-oriented_programming">OOP</a>, to adding <a href="https://en.wikipedia.org/wiki/Entity_component_system">ECS</a>, using <a href="https://github.com/SanderMertens/flecs/">Flecs</a>, this is a major thing I’m taking with me from my time using Unity, I like that it helps solving a lot of issues sometimes, even if full ECS is not the solution for me. But having that will be nice, I can see the benefit now. Another thing might also be trying to mimick Prefabs and/or ScriptableObjects, that would be nice, but that’s just in the back of my head at the moment. I already started the process of integrating Flecs, so slowly and gradually, and hopefully, when it’s time to switch engine it will be a suitable alternative. If not well, better not update to 2023LTS I guess.</p>
<p>At least this is the plan right now, who knows, maybe I’ll reach a point where it feels too frustrating to rewrite it all in a different engine and language (c# to cpp), or ran out of budget to do so, plans do change. But at the moment at least it moves forward like this.</p>
<h2 id="list-of-mostly-open-source-game-engines-and-frameworks">List of mostly open-source game engines and frameworks</h2>
<p>Using suggestions I compiled a list of game engines and frameworks, mostly open-source and free, but there are a few with licenses, regardless, for anyone looking to test alternatives, there’s a bunch of stuff.</p>
<p><a href="https://github.com/DJLink/list-of-game-engines-and-frameworks">https://github.com/DJLink/list-of-game-engines-and-frameworks</a></p>
<p>My personal suggestion for anyone who wants to try the “make my own engine” approach, for 2D stuff (don’t get too deep the rabbit hole on 3D), will be to use SDL to bootstrap window creation, input etc. I’ve used that in a bunch of stuff in the past and can vouch for it.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
