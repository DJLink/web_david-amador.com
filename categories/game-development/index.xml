<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Game Development on David Amador</title>
    <link>https://www.david-amador.com/categories/game-development/</link>
    <description>Recent content in Game Development on David Amador</description>
    <image>
      <title>David Amador</title>
      <url>https://www.david-amador.com/david-amador-pixel.png</url>
      <link>https://www.david-amador.com/david-amador-pixel.png</link>
    </image>
    <generator>Hugo -- 0.139.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Jan 2025 08:32:55 +0000</lastBuildDate>
    <atom:link href="https://www.david-amador.com/categories/game-development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2024 wrap-up, 2025 the year of Godot</title>
      <link>https://www.david-amador.com/2025/01/2024-wrap-up-2025-the-year-of-godot/</link>
      <pubDate>Wed, 01 Jan 2025 08:32:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2025/01/2024-wrap-up-2025-the-year-of-godot/</guid>
      <description>&lt;h1 id=&#34;-2024&#34;&gt;🕛 2024&lt;/h1&gt;
&lt;p&gt;Initially intended to do a &amp;ldquo;end of year&amp;rdquo; post BEFORE EOY; talking about some stuff but that never happened because work and other stuff kept getting in the way. 2024 was a weird year, from work, to personal, to world, to finances, to game dev, &lt;em&gt;&lt;strong&gt;to everything really&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I just feel tired honestly, that&amp;rsquo;s the best way I can describe 2024!&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;Tired Computer Anime&#34; loading=&#34;lazy&#34; src=&#34;https://www.david-amador.com/wp-content/uploads/2025/01/tired_computer_anime.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ok that started in a weird way, but allow me some latitude here&amp;hellip;
The world is in a weird state, economy, layoffs everywhere, the game dev industry in a very fragile state; and suddenly every company is betting all their chips on &amp;ldquo;AAAAeee IIIIII&amp;rdquo;, politics seem wacko, climate change, social networks going bananas, overall everyone trying to find their feet.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="-2024">🕛 2024</h1>
<p>Initially intended to do a &ldquo;end of year&rdquo; post BEFORE EOY; talking about some stuff but that never happened because work and other stuff kept getting in the way. 2024 was a weird year, from work, to personal, to world, to finances, to game dev, <em><strong>to everything really</strong></em>.</p>
<p>I just feel tired honestly, that&rsquo;s the best way I can describe 2024!</p>
<p><img alt="Tired Computer Anime" loading="lazy" src="/wp-content/uploads/2025/01/tired_computer_anime.gif"></p>
<p>Ok that started in a weird way, but allow me some latitude here&hellip;
The world is in a weird state, economy, layoffs everywhere, the game dev industry in a very fragile state; and suddenly every company is betting all their chips on &ldquo;AAAAeee IIIIII&rdquo;, politics seem wacko, climate change, social networks going bananas, overall everyone trying to find their feet.</p>
<p>I&rsquo;ve been trying to take the opportunity of Twitter going bananas to spend less time on social networks, it&rsquo;s just doom scrolling these days, but it propagated to every other place.</p>
<h2 id="games-and-such">Games and such</h2>
<p>I haven&rsquo;t played many video games this year, I&rsquo;m still trying to finish Metroid Prime Remaster, I&rsquo;m SOOO STUCK on Phazon mines, but really want to eventually finish this one as I&rsquo;m enjoying the game a lot, I get why it was so highly rated back then.</p>
<p><img alt="Stuck on Phazon Mines" loading="lazy" src="/wp-content/uploads/2025/01/stuck_on_phazon_mines.png"></p>
<p>I got the new Legend of Zelda Echoes of Wisdom, and actually completed it, couldn&rsquo;t put it down, it&rsquo;s such a nice game with tons of great ideas and mechanics, a merge of Breath of the Wild and Tears of Kingdom into Link Between Worlds. I really think this brings top-down Zeldas to a whole new level, can&rsquo;t wait for a new one.</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2025/01/zelda_echoes_1.jpeg"><img alt="Zelda Echoes of Wisdom" loading="lazy" src="/wp-content/uploads/2025/01/zelda_echoes_1.jpeg"></a></th>
          <th><a href="/wp-content/uploads/2025/01/zelda_echoes_4.jpeg"><img alt="Zelda Echoes of Wisdom" loading="lazy" src="/wp-content/uploads/2025/01/zelda_echoes_4.jpeg"></a></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><a href="/wp-content/uploads/2025/01/zelda_echoes_3.jpeg"><img alt="Zelda Echoes of Wisdom" loading="lazy" src="/wp-content/uploads/2025/01/zelda_echoes_3.jpeg"></a></td>
          <td><a href="/wp-content/uploads/2025/01/zelda_echoes_2.jpeg"><img alt="Zelda Echoes of Wisdom" loading="lazy" src="/wp-content/uploads/2025/01/zelda_echoes_2.jpeg"></a></td>
      </tr>
  </tbody>
</table>
<hr>
<p>I didn&rsquo;t play a lot of video games but I&rsquo;ve also played a bit of board games. For some reason I always assumed most board games were multiplayer, which would be harder for me, but there&rsquo;s actually tons of neat solo games now, a booming market, so I started playing some Arkham Horror, which I can play solo, and it&rsquo;s cool, even if I lose a lot.</p>
<p><img alt="Arkham Horror Card Game" loading="lazy" src="/wp-content/uploads/2025/01/arkham_horror_card_game_box.jpeg"></p>
<p>And just a couple days ago I decided to grab Carcassonne from my desk (been there a while just unboxed) and take to play during the Xmas days break, it&rsquo;s a lot of fun to play with other people.</p>
<p><img alt="Carcassonne" loading="lazy" src="/wp-content/uploads/2025/01/carcassonne.jpg"></p>
<h1 id="travel">travel</h1>
<p>Every year I keep saying I should travel/rest more, and I haven&rsquo;t been taking a lot of free time/vacations, but I did manage to take a 6 days-vacation and a flight to Cabo Verde (they have low cost routes now). I visited Maio and Santiago islands, gorgeous landscapes and water. To sum it up, within 2 hours of landing I got a rusty nail rip through my shoes (so lucky I hadn&rsquo;t changed into beach sandals yet), saw a dude accidentally fishing a baby Hammerhead shark, did some snorkeling and had a local convince me to try fishing, which I haven&rsquo;t done since my dad took me once as a kid, learned how to play an old board game with some locals, it was fun.</p>
<p>Here&rsquo;s some dumb photos/videos because my blog is like a personal journal :)</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2025/01/tarrafal_beach.jpg"><img alt="Tarrafal Beach" loading="lazy" src="/wp-content/uploads/2025/01/tarrafal_beach.jpg"></a></th>
          <th><a href="/wp-content/uploads/2025/01/cabo_verde.jpg"><img alt="Tarrafal Beach" loading="lazy" src="/wp-content/uploads/2025/01/cabo_verde.jpg"></a></th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><video width="100%" controls>
    <source src="/wp-content/uploads/2025/01/david_attempt_fishing.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>
</td>
          <td><a href="/wp-content/uploads/2025/01/tarrafal_sign_david.jpg"><img alt="David near Tarrafal Sign" loading="lazy" src="/wp-content/uploads/2025/01/tarrafal_sign_david.jpg"></a> <video width="100%" controls>
    <source src="/wp-content/uploads/2025/01/dumb_stuff.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>
</td>
      </tr>
  </tbody>
</table>
<p>Sorry for video quality but this is an attempt in not having tons of MBs on this page, and I really don&rsquo;t want to embed this stuff on YouTube, so let me know if you know a better alternative to have videos on a blog post that &ldquo;makes sense&rdquo;.</p>
<h1 id="age">age</h1>
<p>I turned 40 this past year, yeah that&rsquo;s right, time does fly. Now this is not something that I usually discuss but the turn of a new decade does make you pause for a second, life comes fast. What I notice so far is most of the same things at early 30&rsquo;s but more, your body gives you more signs that you really need to pay attention to your health, it&rsquo;s not a &ldquo;power it through&rdquo; anymore, it&rsquo;s a &ldquo;maintenance mode&rdquo; now, whatever bad decisions you made in the past might show up now, any good ones you&rsquo;ll start to appreciate. Honestly my major problem has always been overworking myself and maybe not that good eating habits, that&rsquo;s the bad. On the good side, ever since I got a health scare right before my 30th birthday, I&rsquo;ve tried to be a bit more active (thanks Fitbit!) so in the past 10 years I&rsquo;ve actually managed to get into better physical shape, I do feel I&rsquo;m probably more in shape now than in my 20s and 30s;  I just can&rsquo;t do as much as 10 years ago, there&rsquo;s limits, we just have to work with them and move forward.
<img alt="Indiana Jones It&rsquo;s not the Years, It&rsquo;s the Mileage" loading="lazy" src="/wp-content/uploads/2025/01/indiana_jones_its_not_the_years_its_the_mileage.jpg"></p>
<h1 id="gamedev">gamedev</h1>
<p>It&rsquo;s been forever since I launched a game of my own even if I&rsquo;ve helped with dozens of games (porting) in the last few years, but it is what it is. It&rsquo;s hard to mix all in, and I can&rsquo;t do the whole &ldquo;quitting a job, work on a game for a couple months, launch it and get a new job after&rdquo; anymore, so development just takes &raquo;forever&laquo;  It&rsquo;s one of the reasons I don&rsquo;t even talk about what I&rsquo;m attempting to work on, I have no idea of deadlines, which is both a blessing and a curse. It&rsquo;s not bad, but I still have a few more dumb things I want to work on, and release, I just feel like a bit of a fraud I haven&rsquo;t been able to after wrapping up QoD development, but I think that project also left me some burnout, it was ~7years of dev, porting and updates after all.</p>
<p>But for things we can control  a bit better, and while I like to tinker with my own <a href="/tags/basalt/">game framework</a>, it would be a mistake not to look into what&rsquo;s available in terms of Game Engines. I&rsquo;ve done a lot of contract work in Unity and GameMaker 2, including some personal stuff, but after what <a href="/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/">Unity pulled</a> (over a year now), using Unity now leaves a sour taste, it&rsquo;s not the same anymore.</p>
<hr>
<h1 id="godot">Godot</h1>
<p><a href="https://godotengine.org/">Godot</a> has been around since 2014, and gained popularity over the years, and like what happened with Mastodon when Twitter died (yes it&rsquo;s dead, old twitter is gone, X is crap), Godot exploded once Unity did what they did.
People became aware there was an open-source alternative, stable and ready to use, not controlled by maniac shareholders just trying to profit even if they had to fire everyone in the company.</p>
<p>Over the years I had read some stuff and devs talking about it, but never found the time, until a couple weeks ago.</p>
<p>So I downloaded, unzip it, ran the executable, and &hellip; wait it booted the entire Editor within a couple seconds &hellip;</p>
<p><img alt="Godot Editor" loading="lazy" src="/wp-content/uploads/2025/01/godot_editor_new_scene.png"></p>
<p>My brain thought:</p>
<blockquote>
<p>wtf there&rsquo;s no installer :O</p>
</blockquote>
<p>Yes, it just boots, a whole engine in a 250mb executable.</p>
<p><strong>Choice of Language</strong></p>
<p>Godot allows a couple of languages, but there seems to be 2 main ones, and I was a bit on the fence if I should go with C# or GDScript, Godot&rsquo;s custom scripting language. So I decided to talk a bit with <a href="https://iohanna.itch.io/">Joana</a> about the pros and cons, she had also recently started using Godot herself. She went with C#, and seems like most of her Unity code worked fine, which is great.
But I decided to just dive into GDScript, a clean slate with &ldquo;no baggage&rdquo; is something that I enjoy from time to time, the idea of learning something new without trying to make existing things work sounded exciting; and I also remember the lessons from GameMaker 2 GML, at first there was friction, but there are some valid choices/ideals there that I sometimes think others could copy. Also if you want to use C#, for now, you need a dedicated Editor build and there&rsquo;s no support for Web Exports (this will change in the future).</p>
<p><a href="https://docs.godotengine.org/en/stable/tutorials/scripting/gdscript/gdscript_basics.html">GDScript</a> is at first glance very Python like, but it&rsquo;s mostly due to it&rsquo;s indentation-based syntax</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="n">var</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
</span></span><span class="line"><span class="cl"><span class="n">var</span> <span class="n">s</span> <span class="o">=</span> <span class="s2">&#34;Hello&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">var</span> <span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">var</span> <span class="nb">dict</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;key&#34;</span><span class="p">:</span> <span class="s2">&#34;value&#34;</span><span class="p">,</span> <span class="mi">2</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">var</span> <span class="n">typed_var</span><span class="p">:</span> <span class="nb">int</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">enum</span> <span class="p">{</span><span class="n">UNIT_NEUTRAL</span><span class="p">,</span> <span class="n">UNIT_ENEMY</span><span class="p">,</span> <span class="n">UNIT_ALLY</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">enum</span> <span class="n">Named</span> <span class="p">{</span><span class="n">THING_1</span><span class="p">,</span> <span class="n">THING_2</span><span class="p">,</span> <span class="n">ANOTHER_THING</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">var</span> <span class="n">v2</span> <span class="o">=</span> <span class="n">Vector2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">func</span> <span class="n">something</span><span class="p">(</span><span class="n">p1</span><span class="p">,</span> <span class="n">p2</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">	<span class="nb">super</span><span class="p">(</span><span class="n">p1</span><span class="p">,</span> <span class="n">p2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">Something</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="n">var</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">10</span>
</span></span></code></pre></div><p>I use Python often for scripts so it was easy to get used to it. So far, from what I&rsquo;ve read, one of the downsides is if you need really intensive computation algorithms, in which maybe doing them directly in C++ or C# might be better, but that&rsquo;s probably edge cases, and you can mix in both languages, so not a decision that can ruin things later on.</p>
<p>In terms of language I do like it, it&rsquo;s clean, feels modern, and my only complaint so far is exactly the same as Python, I wish we had { } to wrap up scopes instead of tabs, but that&rsquo;s a personal preference. I&rsquo;m sure as months progress I&rsquo;ll bump into caveats, but that can be said of all languages.</p>
<h2 id="the-nodes-and-more">The Nodes and more</h2>
<p>Godot uses Nodes for everything, and at first I thought &ldquo;oh it&rsquo;s like Unity GameObject&rdquo;, but it&rsquo;s not quite that, Nodes can only be used with 1 script, you can&rsquo;t just add a bunch of them to a node like Unity on a GameObject.</p>
<p><img alt="Godot Nodes" loading="lazy" src="/wp-content/uploads/2025/01/nodes_and_scenes_nodes.jpg"></p>
<p>Here if you want a new behaviour, add a child node and add that script.
It seems odd at first but this comes with a very powerful &ldquo;side-effect&rdquo;, anything can be a scene, and you can add nodes in anything, it&rsquo;s quite fascinating and powerful, seems truly abstract.</p>
<p>The rest is the standard 2DSprites, Meshes, Sounds, position components, UI etc.
To learn this I decided to make a small prototype game and so far most stuff has been very easy to create, from UI to animations and game logic.</p>
<p>The part that is creating more friction for me right now, is the Editor UI/UX inconsistency, there are tons of small quirks (I&rsquo;ve been live posting some) that are not necessarily bugs but tweaking would go a long way in terms of User Experience and making it more intuitive.</p>
<p>Took me forever to notice that &ldquo;Animation&rdquo; was actually a button hiding a ton of options, it looked like a pressed &ldquo;Tab&rdquo;, it has the same design as the 0 on the left, it doesn&rsquo;t look like a button. I&rsquo;m nitpicking here, because it does work functionally, but I care about this engine now and I want it to be even better.</p>
<table>
  <thead>
      <tr>
          <th><img loading="lazy" src="/wp-content/uploads/2025/01/godot_button_1.png"></th>
          <th><img loading="lazy" src="/wp-content/uploads/2025/01/godot_button_2.png"></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<p>Godot is being made for free by the community, on their spare time, the fact that it works as it does right now is magic.</p>
<p><img alt="IT Crowd Have you tried turning it off and on again" loading="lazy" src="/wp-content/uploads/2025/01/have_you_tried_turning_it_off_and_on_again.jpg"></p>
<p>Sometimes I had to restart the editor to make some things work again (I read this on Reddit) and whenever some code isn&rsquo;t working but I can&rsquo;t quite understand why, I would just restart it. At least once a day this would happen, but it might also be due to my use of Visual Code as external code editor and it getting confused some times (I need to do more testing on this).</p>
<p>Right now the engine has tons of potential and I feel it&rsquo;s already quite robust for 2D games, I can&rsquo;t say for 3D because I haven&rsquo;t had the chance yet.</p>
<h1 id="plans-for-godot">Plans for Godot</h1>
<p>As the title suggests, for me this will be the year I plan to migrate to Godot whenever possible.</p>
<p>I do have a &ldquo;game&rdquo; that I&rsquo;m working on SLOOOWLY whenever I find some time, and getting it out of Unity would be a big plus for me. I initially started it as part of learning Unity for contact work purposes and I kept working on it, felt like a nightmare to move it to my custom framework due to amount of work (but doable), but moving to Godot actually sounds FUN! But it&rsquo;s not for now, I have to wrap up the gameplay at least so that migrating would be easier once I have it all.</p>
<p>And that&rsquo;s what I wanted to say, Godot is a lot of fun to work with, you&rsquo;ll spot quirks very rapidly, but it&rsquo;s such a light and fast engine to work, perfect for prototyping.</p>
<p>Godot is in the same place as Blender a few year ago, with a promising future.</p>
<hr>
<p>See you in the next post!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Gamedev tricks used by developers</title>
      <link>https://www.david-amador.com/2024/11/gamedev-tricks-used-by-developers/</link>
      <pubDate>Fri, 15 Nov 2024 14:39:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2024/11/gamedev-tricks-used-by-developers/</guid>
      <description>&lt;h2 id=&#34;-origin-thread&#34;&gt;🧵 origin thread&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;In 2018 I started a thread on Twitter (later renamed X 🙄) where &lt;a href=&#34;https://x.com/DJ_Link/status/964124424969637888&#34;&gt;I shared some game development tricks&lt;/a&gt; devs used to get around bugs, software, hardware and/or time constraints. Later I kept adding more posts to that thread, and there&amp;rsquo;s some cool information there. But because I now went through the process of replicating that thread on both &lt;a href=&#34;https://mastodon.gamedev.place/deck/@djlink/109313319839796759&#34;&gt;Mastodon&lt;/a&gt; and &lt;a href=&#34;https://bsky.app/profile/djlink.bsky.social/post/3l6ubkivh5o2t&#34;&gt;Bluesky&lt;/a&gt;; it got me thinking, I should probably put this on my own blog, a single post, which is easier to read, also in case those websites are ever gone. If I find more I&amp;rsquo;ll add them later. This page may take a bit to load due to images, gifs videos etc.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="-origin-thread">🧵 origin thread</h2>
<blockquote>
<p>In 2018 I started a thread on Twitter (later renamed X 🙄) where <a href="https://x.com/DJ_Link/status/964124424969637888">I shared some game development tricks</a> devs used to get around bugs, software, hardware and/or time constraints. Later I kept adding more posts to that thread, and there&rsquo;s some cool information there. But because I now went through the process of replicating that thread on both <a href="https://mastodon.gamedev.place/deck/@djlink/109313319839796759">Mastodon</a> and <a href="https://bsky.app/profile/djlink.bsky.social/post/3l6ubkivh5o2t">Bluesky</a>; it got me thinking, I should probably put this on my own blog, a single post, which is easier to read, also in case those websites are ever gone. If I find more I&rsquo;ll add them later. This page may take a bit to load due to images, gifs videos etc.</p>
</blockquote>
<hr>
<h3 id="-skyrim-shelves">👾 Skyrim shelves</h3>
<p>Skyrim small tables are actually shelves buried. If you can&rsquo;t see it &hellip;</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_1.jpg"><img alt="Skyrim buried shelves 1" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_1.jpg"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_2.jpg"><img alt="Skyrim buried shelves 2" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_2.jpg"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-jak-and-daxter-loading">👾 Jak and Daxter loading</h3>
<p>In Jak and Daxter if by any chance the Area/assets ahead aren&rsquo;t fully loaded the game will make you trip to give it more time to load in background.</p>
<p><img alt="Jak and Daxter tripping loading" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/jak_dexter_tripping_loading.gif"></p>
<hr>
<h3 id="-super-mario-64-infinite-stairs">👾 Super Mario 64 infinite stairs</h3>
<p>In Super Mario 64 this is how Nintendo got the infinite stairs effect working, teleport. Mario keeps getting teleported to a prior point on the stairs which makes it impossible to progress in a normal way. But this is also the reason why Speedrunners can glitch the effect and skip it using the backwards jump trick.</p>
<p><img alt="Super Mario 64 infinite stairs" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/super_mario_64_infinite_stairs.gif"></p>
<hr>
<h3 id="-wing-commander-memory-exception">👾 Wing Commander memory exception</h3>
<p>There was a memory exception in Wing Commander on exit, because of the deadline they left it but change the error message to &ldquo;Thank you for playing Wing Commander!&rdquo;</p>
<p><img alt="Wing Commander exit message" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/wing_commander_exit_message.jpg"></p>
<hr>
<h3 id="-undertale-npc-pathfinding">👾 Undertale NPC pathfinding</h3>
<p>This one is from Undertale, to prevent NPCs to walk on pits, developer added Magic glass so that way &ldquo;it works&rdquo;.</p>
<table>
  <thead>
      <tr>
          <th><img alt="Undertale magic glass 1" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/undertale_magic_glass_1.jpg"></th>
          <th><img alt="Undertale magic glass 2" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/undertale_magic_glass_2.jpg"></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-fallout-3-trains-are-hats">👾 Fallout 3 trains are hats</h3>
<p>In Fallout 3 all the trains are actually a character wearing a train model as a hat. <a href="https://www.pcgamer.com/heres-whats-happening-inside-fallout-3s-metro-train/">Source</a>.</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_1.jpg"><img alt="Fallout 3 Trains" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_1.jpg"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_2.jpg"><img alt="Fallout 3 Trains" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_2.jpg"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-donkey-kong-64-memory-crash-myth">👾 Donkey Kong 64 memory crash (myth)</h3>
<p>This one was later proved as a myth by developers on my thread, but I&rsquo;m leaving it here since you can still find it in tons of places, so this way here it has a correction that it was in fact a myth.</p>
<p>Internet theories says that Donkey Kong 64 had a memory crash/limit bug on standard N64. Unable to identify the cause of the crash they decided to ship the game with the memory expansion bundled with game.</p>
<p><img alt="Donkey Kong 64" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/donkey_kong_64.jpg"></p>
<hr>
<h3 id="-super-mario-bros-reuse-of-grassclouds">👾 Super Mario Bros. reuse of grass/clouds</h3>
<p>In Super Mario Bros. because of memory limitations clouds and bushes are the same sprite but using a different color palette.</p>
<p><img alt="Super Mario Bros. reuse of grass and clouds" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/super_mario_bros_grass_clouds.jpg"></p>
<hr>
<h3 id="-kirby-dream-land-memory-saving">👾 Kirby Dream Land memory saving</h3>
<p>In Kirby Dream Land for Gameboy, to save memory some enemies have the same &ldquo;back&rdquo; part of the sprite and only change the face.</p>
<p><img alt="Kirby Dream Land memory saving" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/kirby_gameboy_reuse_assets.jpg"></p>
<hr>
<h3 id="-zelda-a-link-between-worlds-fake-perspective">👾 Zelda A Link Between Worlds fake perspective</h3>
<p>This is one of my fav, in Zelda: A Link Between Worlds because a true top down view in 3D had some issues, they purposely tilt the objects so the perspective looks good to the player.</p>
<p><img alt="Zelda A Link Between Worlds fake perspective" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/zelda_link_between_worlds_skewed_view.jpg"></p>
<hr>
<h3 id="-duke-nukem-mirrors">👾 Duke Nukem mirrors</h3>
<p>Duke Nukem 3D mirrors reflection were achieved by duplicating the room on the other side. If you deactivate clipping you can go to the other side. True reflections are computational intensive even today.</p>
<p><img alt="Duke Nukem mirrors" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/duke_nukem_mirrors.gif"></p>
<hr>
<h3 id="-nba-jam-te-cartridge-day-one-patch">👾 NBA Jam: T.E. cartridge day one &ldquo;patch&rdquo;</h3>
<p>In NBA Jam: T.E. for Genesis/Mega Drive devs only found out after making the 250k cartridges there was a save bug. Playing game in a certain order fixed it so it got a day one patch in the manual saying how to initialize memory.</p>
<p><a href="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_1.jpg"><img alt="NBA Jam T.E" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_1.jpg"></a></p>
<p><a href="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_2.png"><img alt="NBA Jam T.E" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_2.png"></a></p>
<hr>
<h3 id="-mario-galaxy-drown-animation">👾 Mario Galaxy drown animation</h3>
<p>In Super Mario Galaxy when Mario drowns in a swap his hand reaches out, because of the size of the head they have to shrink it so only the hand is visible to the player.</p>
<p><img alt="Mario Galaxy drown animation" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/mario_galaxy_drown_animation.gif"></p>
<hr>
<h3 id="-world-of-warcraft-rest-bonus">👾 World of Warcraft rest bonus</h3>
<p>World of Warcraft rest bonus was made to encourage breaks, half XP gained after a few hours. Players hated, so they made everything take 2x as much XP to achieve but you start at 200% XP and gradually back to 100%. Same thing &amp; players are happy. <a href="https://www.psychologyofgames.com/2010/03/framing-and-world-of-warcrafts-rest-system/">source</a></p>
<p><img alt="World of Warcraft rest bonus" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/world_of_warcraft_rest_bonus.jpg"></p>
<hr>
<h3 id="-resident-evil-4-radio-billboards">👾 Resident Evil 4 radio billboards</h3>
<p>This one is not as unknown or hard to imagine but in Resident Evil 4 during the radio chat cutscenes it&rsquo;s actually a 2D panel with the 3D models behind. Many other games do this too.</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_1.jpg"><img alt="Resident Evil 4" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_1.jpg"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_2.jpg"><img alt="Fallout 3 Trains" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_2.jpg"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-duck-hunt-zapper">👾 Duck Hunt Zapper</h3>
<p>In Duck Hunt the NES Zapper worked by blacking out screen &amp; drawing white blocks around targets when you fire, for a couple frames. The diode in the Zapper detects the change in light intensity and tells the computer if it’s pointed at a lit target.</p>
<p><img alt="Duck Hunt Zapper" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/duck_hunt_zapper.gif"></p>
<hr>
<h3 id="-metal-gear-solid-ps1-reflections">👾 Metal Gear Solid PS1 reflections</h3>
<p>In Metal Gear Solid 1, another reflection trick. Water puddle in 1st mission map is just a transparent texture with the geometry of ceiling and walls duplicated below the ground. That&rsquo;s why you can&rsquo;t see Snake reflection.</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_1.jpg"><img alt="Metal Gear Solid" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_1.jpg"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_2.jpg"><img alt="Metal Gear Solid" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_2.jpg"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-prince-of-persia-animations">👾 Prince of Persia animations</h3>
<p>In Prince of Persia (1989) animations looked fluid &amp; realistic because Jordan Mechner used Rotoscope, he filmed his brother doing the stunts, took pictures with camera, had them developed at Fotomat and then traced them, frame by frame.</p>
<p><img alt="Prince of Persia Rotoscope" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/prince_of_persia_rotoscope.gif"></p>
<hr>
<h3 id="-tomb-raider-sega-saturn">👾 Tomb Raider Sega Saturn</h3>
<p>Sega Saturn used Quads instead of triangles (the industry norm) for rendering, which is good for 2D but not as practical for 3D, devs had to work around that, so games like Tomb Raider had to be built to support quads on Saturn and triangles on PlayStation.</p>
<p><img alt="Tomb Raider Sega Saturn quads" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/tomb_raider_saturn_quads.gif"></p>
<hr>
<h3 id="-pong">👾 Pong</h3>
<p>Original Pong had 0 lines of code.</p>
<p><img alt="Pong" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/pong_0_lines_code.jpg"></p>
<hr>
<h3 id="-paper-mario-shadows">👾 Paper Mario shadows</h3>
<p>Paper Mario uses a transparent mesh to simulate door shadows.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/paper_mario_shadows.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-dead-space-ui">👾 Dead Space UI</h3>
<p>Dead Space UI is all made with particles so it can sort in render, glow and be more immersive. <a href="https://x.com/Worthless_Bums/status/1271139746551599112">source</a></p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/dead_space_particles_ui.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-katamari-damacy-spawns">👾 Katamari Damacy spawns</h3>
<p>Katamari Damacy only has support for closed, circular paths, so how they make boulders travel beneath the ground, back to the original place, so that it seems like they are spawning and despawning!</p>
<p><a href="https://x.com/JasperRLZ/status/1289960052250435584">source</a></p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/katamari_spawns.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-elders-scroll-morrowind-xbox-memory-management">👾 Elder&rsquo;s Scroll Morrowind Xbox memory management</h3>
<p>This is easily one of the best, on OG Xbox, Elder Scrolls III would occasionally reboot the Xbox if they ran out of memory. The user would just see a longer then usual loading screen.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/xbox_elders_scroll_reboot_when_low_memory.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-grand-theft-auto-tanks">👾 Grand Theft Auto tanks</h3>
<p>In GTA the tanks were made with pedestrians that were on top of a car to use the existing shooting mechanics and also the driving code.</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_1.png"><img alt="Grand Theft Auto Tanks" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_1.png"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_2.png"><img alt="Grand Theft Auto Tanks" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_2.png"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-kirby-and-the-forgotten-land-game-feel">👾 Kirby and the Forgotten Land game feel</h3>
<p>Kirby and the Forgotten Land is a 3D game, but will fake the hit collisions for better game feel depending where the camera is, in certain angles as long as in camera it &ldquo;looks&rdquo; like it hits it will consider it a collision even if it&rsquo;s not.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/kirby_forgotten_land_game_feel.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-skyrim-npcs-inventory-system">👾 Skyrim NPCs inventory system</h3>
<p>Skyrim handles each NPCs inventory by having it on a unique chest hidden under the map. Most are impossible to get unless clipping is used, but sometimes you can find them.</p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_1.jpg"><img alt="Skyrim NPC inventory" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_1.jpg"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_2.jpg"><img alt="Skyrim NPC inventory" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_2.jpg"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-doom-3-volumetric-glow">👾 Doom 3 volumetric glow</h3>
<p>Doom 3 fakes volumetric glow by folding vertexes with camera movement. <a href="https://simonschreibt.de/gat/doom-3-volumetric-glow/">source</a></p>
<p><img alt="Doom 3 volumetric glow" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/doom3_volumetric_glow.gif"></p>
<hr>
<h3 id="-lord-of-the-rings-engine-reuse">👾 Lord of the Rings engine reuse</h3>
<p>Lord of the Rings game was made by reusing Tiger Woods golf game because they needed large areas with a goal/castle at the end, a golf game is just that. I think it’s quite funny how far apart they are but it works.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/lord_of_the_rings_tiger_woods_engine.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-metroid-prime-noise-texture">👾 Metroid Prime noise texture</h3>
<p>In order to save memory, Metroid Prime fullscreen static texture effect is generated using random live RAM data, which is just the game itself running, GameCube only had 24MB. <a href="https://x.com/ZoidCTF/status/1590012338421518337">source</a></p>
<p><img alt="Metroid Prime" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/metroid_prime_noise_texture.jpg"></p>
<hr>
<h3 id="-titan-quest-action-delays">👾 Titan Quest action delays</h3>
<p>On Titan Quest, because there was no way to script timed delays actions, developers created ambient creatures like Squirrels and used their animations as a way to count time to trigger the events.</p>
<p><img alt="Titan Quest action delays" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/titan_quest_timed_delays.png"></p>
<hr>
<h3 id="-journey-shadows">👾 Journey shadows</h3>
<p>Journey doesn&rsquo;t have a real-time shadow system so they are hand painted and baked later. The results are impressive but the amount of work involved wow. <a href="https://x.com/matt_nava/status/1503152810078052355">source</a></p>
<p><img alt="Journey Shadows" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_1.png"></p>
<table>
  <thead>
      <tr>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_2.png"><img alt="Journey Shadows" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_2.png"></a></th>
          <th><a href="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_3.png"><img alt="Journey Shadows" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_3.png"></a></th>
      </tr>
  </thead>
  <tbody>
  </tbody>
</table>
<hr>
<h3 id="-silent-hill-2-mirror">👾 Silent Hill 2 mirror</h3>
<p>Another duplicate room mirror trick, this time Silent Hill 2, in the beginning of the game, the mirror reflection is just the entire bathroom duplicated.</p>
<p><img alt="Silent Hill 2 mirror" loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/silent_hill_2_mirror_duplicate_room.jpg"></p>
<hr>
<p>(to be continued &hellip;. maybe)</p>
]]></content:encoded>
    </item>
    <item>
      <title>Quest of Dungeons turns 10 years old!</title>
      <link>https://www.david-amador.com/2024/03/quest-of-dungeons-turns-10-years-old/</link>
      <pubDate>Mon, 25 Mar 2024 11:39:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2024/03/quest-of-dungeons-turns-10-years-old/</guid>
      <description>&lt;h1 id=&#34;-its-been-10-years&#34;&gt;📝 It&amp;rsquo;s been 10 years&lt;/h1&gt;
&lt;p&gt;It&amp;rsquo;s around 11 a.m. as start to type this. 10 years ago at this hour, I was at my day job, trying to focus and not be distracted by the fact that later that day, at around 18h, &lt;a href=&#34;https://www.questofdungeons.com&#34;&gt;Quest of Dungeons&lt;/a&gt; was being released on Steam and iOS. For the first time, players around the world could try it. I was quite anxious about this; it had been a few years in the making, &lt;a href=&#34;https://www.david-amador.com/2014/10/indie-dev-day-job-making-it-work-building-quest-of-dungeons/&#34;&gt;mostly nights and weekends&lt;/a&gt;. I had little idea of what to expect, but being on Steam was simultaneously exciting and terrifying. What if people hated it?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="-its-been-10-years">📝 It&rsquo;s been 10 years</h1>
<p>It&rsquo;s around 11 a.m. as start to type this. 10 years ago at this hour, I was at my day job, trying to focus and not be distracted by the fact that later that day, at around 18h, <a href="https://www.questofdungeons.com">Quest of Dungeons</a> was being released on Steam and iOS. For the first time, players around the world could try it. I was quite anxious about this; it had been a few years in the making, <a href="/2014/10/indie-dev-day-job-making-it-work-building-quest-of-dungeons/">mostly nights and weekends</a>. I had little idea of what to expect, but being on Steam was simultaneously exciting and terrifying. What if people hated it?</p>
<p>What follows for the rest of the post, is a brain dump of the timeline of some of the most crucial events of this silly little project for anyone who is curious.</p>
<p><img alt="Quest of Dungeons characters" loading="lazy" src="/wp-content/uploads/2024/03/pixel_logo_v1_4x.png"></p>
<h1 id="-2011-2013">🤯 2011-2013</h1>
<p>✔️ Failing can help</p>
<p>Before the game launched, I had a few years of terrible prototypes, cancelled projects, and other unexpected life events. One day, though, all those mistakes fell into place, and QoD was born—a flow of ideas came to my mind, after seeing a bunch of stuff failed in front of me, but that maybe I could make them work. I knew what I wanted to avoid now and what I things I would like to experiment with. Within this time I also made a simple iOS game called <a href="/2012/09/puwang-a-5-day-work/">Puwang</a>, a gamejam compo, where most of the goal was to make a quick game and hopefully make $100 that year to cover the iOS developer account expenses. For QoD I wanted to make a small game that I could play on my phone during commute, and that&rsquo;s why it started as a mobile-only game.</p>
<p><img alt="Quest of Dungeons characters" loading="lazy" src="/wp-content/uploads/2024/03/qod_characters.png"></p>
<p>⌨️ Expanding</p>
<p>During the time I was the only person to ever played it, I found myself enjoying it on a bigger screen/tablet, and after giving it a 2-3 friends to test and having confirmation, I thought it would be good to launch a desktop version along the iPhone/iPad versions, Windows and Mac.
This added some development time, but also allowed me to expand the game a bit more, the mobile version was virtually identical to desktop/tabled, but they shared a bigger UI, more suited for Mouse and the higher resolutions.
This turned out to be one of the best decisions, as the desktop version is foundation for everything after. At this point I was already <a href="/tags/basalt/">rolling my own engine</a> for prior games on mobile and desktop, so most of the development was indeed for game stuff, and not engine. While I&rsquo;ve made the mistake often of &ldquo;build the engine instead of game&rdquo;, here the engine was built around the game, that&rsquo;s how it should be.</p>
<h1 id="20140325---steam-and-ios-launch">2014/03/25 - Steam and iOS launch</h1>
<p>I had tried to bring games to Steam before but with no success. The focus was on Mobile, with Desktop in mind, but where to sell it? Before Steam I was able to get confirmation for the new Humble Store, but Steam was still on my mind. In the past I had higher hopes for my first game <a href="/tags/vizati/">Vizati</a>, looked more polished, so QoD didn&rsquo;t seemed to have a chance.</p>
<p><img loading="lazy" src="/wp-content/uploads/2017/03/Screenshot-2022-11-01-at-19.38.50.png"></p>
<p>But I decided to make a trailer and launch a GL page, and imagine my surprise when QoD was approved on Steam Greenlight within a week or so. Just look at my dumb face here that I just digged from some old Tweets.</p>
<p><img alt="David celebrating QoD approval on Steam Greenlight" loading="lazy" src="/wp-content/uploads/2024/03/david_amador_celebrating_qod_greenlight_2014-01-24_22.38.07.jpg"></p>
<p>With the trailer out, people seemed to enjoyed what they saw, I also thought I was near completing the game, there&rsquo;s always something right? So I pretty much crunched the entire rest of time between my day job and finishing the game.</p>
<p>Finally on March 25th it was out, everyone could play it. Since the game was only releasing around 18h on Steam, I went to my day job that day, and only took the next day off for checking &amp; fixing bugs etc.</p>
<p>Initially all I was getting was a flow of emails with some bugs and suggestions, but overall people seemed to like it, which was a relief. There was still tons of stuff to fix, but slowly, and for the next few weeks went through issues and suggestions. On the mobile side of things things were smoother, that version was the older one, had more testing, also less hardware configurations. I recall before launch, a conversation with some coworkers, that making it paid on mobile was probably a mistake, but I don&rsquo;t know how to design games around F2P/Ads, so I made it paid.  But, thankfully, even being a paid game, at $1.99, people were happy with what they were getting.</p>
<p><img alt="Quest of Dungeons Android" loading="lazy" src="/wp-content/uploads/2024/03/quest_of_dungeons_tablet_iphone_desktop.jpg"></p>
<h1 id="20140530---linux">2014/05/30 - Linux</h1>
<p>This one was something that I had in the back on my mind for a while, theoretically my engine could be ported to Linux, but I was scared of having too many versions at launch, handing those 4 SKUs was already a handful, so this was left for later. This actually ended up being a factor in Humble Bundle contacting me to participate in one of their bundles, back then having a game on all 3 platforms was a must.
Technically speaking it wasn&rsquo;t extremely complicated, by this time the engine was already relatively split in ways that it was easy to integrate new OS, it was just a matter of implementation.
Also, now that Steam Deck is a thing, it just worked out of the box.</p>
<h1 id="20140826---android">2014/08/26 - Android</h1>
<p>With Desktops and iOS versions being well received I started getting requests for an Android version, I had never worked on this platform, but with most of the know bugs fixed, I bought a cheap Android phone and I moved into porting the game to this platform, you can read more about that <a href="/2014/08/native-game-on-android-porting-quest-of-dungeons/">here</a>.</p>
<p><img alt="Quest of Dungeons Android" loading="lazy" src="/wp-content/uploads/2024/03/quest_of_dungeons_android_2014-05-29_00.05.50.jpg"></p>
<h1 id="2014---ouya-cancelled">2014 - OUYA (cancelled)</h1>
<p>The hot thing around the time was OUYA, games like TowerFall were born there, so since I had an Android version I started to work on that, because it would be the closest to a traditional console that I thought I could put this game on. I started working on it, but once Microsoft accepted my pitch for the Xbox One (see below), I placed this in low priority. Between the time it took me to develop the Xbox One version, OUYA had it downfall, and by that time I just cancelled it.</p>
<h1 id="201509---xbox-one">2015/09 - Xbox One</h1>
<p>In the summer of 2014, after the launch of all those versions, relatively successfully, I started talking with ID@Xbox with the possibility of bringing QoD to Xbox One. There were a couple months of paperwork and mostly the conversation about &ldquo;this is a mouse game, how will it work on consoles?&rdquo;, which was when I started seeing that all the UI needed to be remade, and even some gameplay.</p>
<p>There are several posts, <a href="/2015/07/lets-talk-about-the-new-stuff-in-quest-of-dungeons-for-xbox-one/">here</a>, <a href="/2015/04/necrodancer-is-joining/">here</a>, <a href="/2014/11/qod-xo-devlog-1/">here</a>, <a href="/2015/01/qod-xo-devlog-2/">here</a> and <a href="/2015/02/qod-xo-devlog-3/">here</a>  detailing what went into to that process, but after around 1 year the game was finally released, and all the work put into reworking the game to controller friendly interface and gameplay paid off, it was <a href="/2015/10/quest-of-dungeons-reviews-roundup/">positively received</a>. I also took the opportunity to double the content available, and also add an <a href="/2015/04/necrodancer-is-joining/">extra character</a>. I&rsquo;m sure it was this combination of an almost remade version with increased content that led to it&rsquo;s positive feedback. I&rsquo;m really happy I decided to take all those months to remake it, it was daunting at first, I&rsquo;ll tell you that, but I&rsquo;m glad I did it.</p>
<p><img alt="Quest of Dungeons Xbox One launch" loading="lazy" src="/wp-content/uploads/2024/03/quest_of_dungeons_xbox_one_launch.jpg"></p>
<h1 id="20160929---wii-u-and-nintendo-3ds">2016/09/29 - Wii U and Nintendo 3DS</h1>
<p>Around 2015 summer, before Xbox One release, and if I recall correctly, during Gamescom in Germany, I started talking with Nintendo about bringing the game to Nintendo 3DS and Wii U.</p>
<p>This was when Nintendo was a bit more restrictive in terms of third party developers, and I was fully expecting, that me, a solo developer, would not make the cut, and it took a lot of months and patience to finally be able to show the game to someone and get accepted as an official Nintendo developer.</p>
<p>At first my goal was to make Wii U port first because it would be similar to Xbox One, with some additional features for the GamePad. Nintendo 3DS would come later, it would take more work due to it&rsquo;s specifics.</p>
<p>Unfortunately, or fortunately (depending how you see it), I bricked my Wii U devKit after a couple months of work, when the game was in a good state already but before 100% finished. During the time I waited for repairs I started the Nintendo 3DS version.</p>
<p>I knew would take a LOT more work, from performance, to completely different UI for dual screen, hybrid of touch + buttons. But when the Wii U devKit arrived, I decided to launch them side-by-side, I talked with Nintendo about a cross-buy possibility, and once they gave the ok that was the goal.</p>
<p><img alt="Quest of Dungeons StreetPass" loading="lazy" src="/wp-content/uploads/2016/05/3ds_new_inventory.png"></p>
<p>The Nintendo 3DS version was one of the most complicated ones to pull off. This was also the first time that working on my own engine was the only thing making it possible. A lot of people were suggesting me to use Unity, and I had would have saved time in porting, which can be true, but Unity didn&rsquo;t supported 3DS, so it would never have happened if not for my custom framework.</p>
<p>This is hands down my favourite version, there is no other like it, mostly because of the nature of the device.</p>
<p>It was so fun to work with that I found myself <a href="/2016/05/qod-3dswii-u-port-devlog-1/">adding features</a> just because I wanted to test them, like the StreetPass, where you can get ghosts from other players you pass on the street. Nintendo had a really neat device here.</p>
<p><img alt="Quest of Dungeons StreetPass" loading="lazy" src="/wp-content/uploads/2016/05/3ds_qod_streetpass.png"></p>
<p>There was some trouble having both versions on the same day, it&rsquo;s a lot of coordination required between me, Nintendo America and Europe teams, 4 different SKUs (3DS NA+EU, Wii U NA+EU), but in the end we made it.</p>
<p>Like I suspected during my own tests, on the 3DS it was the ideal portable version, it&rsquo;s a game that suits shorts sessions on the go.</p>
<p>This was also the first time I worked with a publisher for this game, for Japan, the game was published by Flyhigh Works, they took it to Tokyo Game Show, localized to JP, and were crucial in shaping up the 3DS version into what it is. I do recall many sessions where my stubbornness almost caused some bad decisions in the game, but they were really cool in guiding me to make the best of it.</p>
<p><img alt="Quest of Dungeons on Wii U and Nintendo 3DS" loading="lazy" src="/wp-content/uploads/2024/03/qod_wiiu_3ds.jpg"></p>
<h1 id="20170120---playstation-4-and-the-vita-version-that-never-was">2017/01/20 - PlayStation 4 and the Vita version that never was.</h1>
<p>I love my PlayStation 4, in fact it&rsquo;s the console I have more physical games for.</p>
<p>So it was with great excitement that after a Skype call with my PlayStation rep I had the greenlight to get the game there. This started around the time of Nintendo too, but sadly, and at first I wanted PS4 + Vita combo, like Wii U + 3DS, but for a variety of reasons the PlayStation Vita never happened.</p>
<p>This was one of the reasons the PS4 versions was one of the latter ones, I kept hoping I could launch both simultaneously but never happened. Fun fact, this version almost had a physical edition that got cancelled by the publisher at last moment, eventually I even got someone, another publisher, to take care of the PS Vita version, but that also got cancelled later on. So a combination of things that happened that were no one&rsquo;s fault, but also made it a bit hard for me to explain why it wasn&rsquo;t happening. In certain moments it was almost, but it never did happened. It was a bit frustrating that I didn&rsquo;t had clear answers for the players regarding this, but I couldn&rsquo;t, and I tried but failed in the end. Well, that&rsquo;s game development.</p>
<p><img alt="Quest of Dungeons on PlayStation 4" loading="lazy" src="/wp-content/uploads/2017/01/qod_ps4_no_name.png"></p>
<h1 id="20170810---nintendo-switch">2017/08/10 - Nintendo Switch</h1>
<p>Around 1 month after I released on Wii U and 3DS, Nintendo announced their new hybrid console, the Nintendo Switch. I immediately started getting questions from players about a port. This complicated promoting the new Nintendo versions while everyone was excited about the upcoming console, saving money for it and the games. By coincidence I had launched both versions right at the end.</p>
<p>I can&rsquo;t recall exactly when conversations started with Nintendo about this, since it was in hot demand, both for retail and developers, but eventually Nintendo shipped me a devKit and I started porting. It was released first in the Japanese regions, again by Flyhigh Works. But a few weeks later again by me in the rest of the world. This version had the portability of 3DS, and graphics/resolution and UI of the home consoles. This was also the first time I made a demo for the game, which still exists on the eShop.</p>
<p><img alt="Quest of Dungeons on Nintendo Switch" loading="lazy" src="/wp-content/uploads/2017/08/quest_of_dungeons_switch.jpg"></p>
<h1 id="2019---dreamcast-just-having-fun">2019 - Dreamcast (just having fun)</h1>
<p>In 2019 I got my hands on a Dreamcast I decided to &ldquo;wonder if I can port it there?&rdquo;, it was never really meant for a full release, that would take months of time that I don&rsquo;t have at the moment,
I just posting it here for the record, this was under a week of work, it was fun. Maybe if I reach retirement I&rsquo;ll take some time to finish it. There&rsquo;s a lot of work left in there.</p>
<p>After a while booting the game on an emulator,</p>
<p><img alt="Quest of Dungeons running on emulator 1" loading="lazy" src="/wp-content/uploads/2024/03/qod_dreamcast_2.png"></p>
<p>and then later when I got it booting on a real Dreamcast</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/03/qod_running_on_dreamcast.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<h1 id="20210413---switch-physical-edition">2021/04/13 - Switch Physical Edition</h1>
<p>Like I mentioned before, I tried to get the game in physical format before, and I kept trying for years but it simply wasn&rsquo;t happening. Until 2021, when by random chance, someone recommended me Leoful, and they accepted right away, in fact, from initial contact to production, it was just a couple months, I&rsquo;m really happy I was able to finally get the game on an actual box, it hits differently, as I <a href="/2010/08/games-and-systems-from-childhood/">grew playing Nintendo games</a>,  and also feels like a closure to a project that started on a smaller device and made it&rsquo;s way to a real physical game.</p>
<p><img alt="Quest of Dungeons Physical Edition for Nintendo Switch" loading="lazy" src="/wp-content/uploads/2021/03/Quest-of-Dungeons-Nintendo-Switch-Physical-edition.png"></p>
<h1 id="2022---">2022 - ??</h1>
<p>Right now the game still exists in several stores (R.I.P. Nintendo 3DS and Wii U), and it&rsquo;s in maintenance mode only. The platforms patched more regularly are the mobile ones, whenever Apple or Android come up with new rules or it breaks on new devices. Windows gives nearly no problems, MacOS breaks things more often, but overall it doesn&rsquo;t give a lot of work, the last time I had to mess with it, was the Linux version to patch stuff for Steam Deck, but it was relatively easy.</p>
<p><img alt="Quest of Dungeons on Steam Deck" loading="lazy" src="/wp-content/uploads/2024/03/quest_of_dungeons_steam_deck.jpg"></p>
<p>So in the end things worked out, and I want to say a big thank you to everyone who supported this project, I read all the emails, DMs, messages everyone sent over the years, even fanart, you rock.</p>
<p><img loading="lazy" src="/wp-content/uploads/2017/03/gKx4R.gif"></p>
<h1 id="some-trivia">Some trivia</h1>
<ul>
<li>The game has 79k of code (all platforms)</li>
<li>The game engine has 130k of code (all platforms)</li>
<li>Over 63800 years of total play time on Steam alone</li>
<li>The game allowing the player to drop items anywhere and being persistent was a side effect of saving the whole world to save instead of recreating it by seed. I just turned it into a feature.</li>
<li>I was only able to finish the game in Hell mode AFTER releasing it, the math seemed to check out, but I wasn&rsquo;t good enough.</li>
<li>The game was called Quest of Dungeons from day 1 of development, as a generic codename, I just grew too attached to it.</li>
<li>There was a pet system that got dropped, taming enemies, but it was dropped in favour of Shaman unique skill of summons.</li>
<li>There was a way for enemies to travel between floors, like Resident Evil added that later on, going between rooms, but it was too aggressive and made the game frustratingly hard.</li>
<li>All the level and combat damage math falls apart around character level 40 or above, but the game was designed below that.</li>
<li>The initial skull sign, which only exists at the very start, was a way to teach the player that death meant restarting, in 2013-14 roguelikes weren&rsquo;t as popular and it was seen as a shock for that to happen (play-testers would email me &ldquo;my save is lost&rdquo;). My goal was that by potentially learning that early on, the player would not get surprised.</li>
</ul>
<p>Thank you for reading all of this.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/03/qod_characters_anniversary.png"></p>
<p>Here&rsquo;s a cool image made by <a href="https://twitter.com/LeonorParra08">Leonor</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>game5 devlog #2</title>
      <link>https://www.david-amador.com/2023/10/game5-devlog-2/</link>
      <pubDate>Sun, 15 Oct 2023 17:20:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/10/game5-devlog-2/</guid>
      <description>&lt;p&gt;I missed last week devlog, mostly because I did almost no progress but also because it was a bad week overall, personally and in terms of work, nothing too bad but you know that feeling when you barely made any progress, despite tons of work hours? So one of those weeks.&lt;/p&gt;
&lt;p&gt;But onto &lt;a href=&#34;https://www.david-amador.com/2023/10/game5-devlog-1/&#34; title=&#34;game5 devlog #1&#34;&gt;game5&lt;/a&gt; progress.&lt;/p&gt;
&lt;h2 id=&#34;importers&#34;&gt;Importers&lt;/h2&gt;
&lt;p&gt;I managed to finish some of the importers (spreadsheets -&amp;gt; ScriptableObjects + prefabs) that I was working on, right now I can just glance over values on a spreadsheet, tweak, and have it export all the Scriptable Objects, generating the prefabs with corresponding data and images and test them. I could have made the game parse the spreadsheet at boot time and create them, but I decided against it, I want to generate this process offline. One of the reasons is because I have more control over not replacing existing items GUIDs (to keep and existing links), and also I can tweak any individually generated files manually, if I need to.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I missed last week devlog, mostly because I did almost no progress but also because it was a bad week overall, personally and in terms of work, nothing too bad but you know that feeling when you barely made any progress, despite tons of work hours? So one of those weeks.</p>
<p>But onto <a href="/2023/10/game5-devlog-1/" title="game5 devlog #1">game5</a> progress.</p>
<h2 id="importers">Importers</h2>
<p>I managed to finish some of the importers (spreadsheets -&gt; ScriptableObjects + prefabs) that I was working on, right now I can just glance over values on a spreadsheet, tweak, and have it export all the Scriptable Objects, generating the prefabs with corresponding data and images and test them. I could have made the game parse the spreadsheet at boot time and create them, but I decided against it, I want to generate this process offline. One of the reasons is because I have more control over not replacing existing items GUIDs (to keep and existing links), and also I can tweak any individually generated files manually, if I need to.</p>
<h2 id="testing-amp-automation">Testing &amp; Automation</h2>
<p>As I start to get more pieces onto the game I’m hitting the time that I need to start testing what I do, obviously with beta testers etc, but also I need to find a way to test it on my own in an effective way. For bugs, balance and well, fun factor.</p>
<p>I recall for Quest of Dungeons I had several spreadsheets with the game combat formulas and it would show up curves of progression for each character stat as it levelled up, this helped me visualising pros and cons of each one of them. And even other stuff, like how many total XP points one could get by each floor, or gold, so even with the procedural nature, I knew lower and upper bounds.</p>
<p>That meant that even if I never ended up getting a really good, or bad combination of items during my tests, I could see the best and worst case, and I would tweak monsters and boss fights accordingly.</p>
<p>This leads me to this game, where given it’s nature of it’s progression, I’m still unsure of the best tools I can cook up to help me on this, before I place it on testers hands. It won’t be bullet proof but it would be best for me to get a general idea of what to expect.</p>
<p>Automation is something I had for QoD and already have it to a certain degree here, an “auto playtester”, basically a script that just does some dumb decisions and plays the game on it’s own, this doesn’t give much info but at least I can quicky test over crashes over certain periods of time, I just let it playing on it’s own. It has limitations but it’s nice.</p>
<h2 id="content">Content</h2>
<p>As I’m making importers for content I’m now starting to replace some testing placeholders with what I think will be final, in terms of mechanics and items, which is why the Testing phase will start to be important as I tweak content and also gameplay values, the fun factor of the game in a way.</p>
<p>This step is usually the one I get stuck the most, because as much as I can plan on paper, some things might not work at all when testing, also trying to keep the scope realistic for me, I’m just one person coding all this, got to be real here. I always think “oh 8 items might be too little content”, but then again sometimes less is more, as long as it’s well placed. Also being less we can always add more later if needed. Doing work unnecessarily hurts more, on Vizati and QoD locking down content amount like “7 floors max, 4 characters, 10 skills per character” really helped me early on, it was tangible and gives a sense of progression and motivation as we create each one. So that’s the sort of thing I’m trying to do here.</p>
<p>So that’s one of the reasons I’m trying to decide this stuff right now, considering the very low time and budget I have available, I’m trying to realistically get a good scope for what I can do, even if it turns out a short game (and that’s ok), match everything as close as possible to what I think I’ll need in the end, so I can decide the stage of art, where to get it, or who to hire, or even if it’s something I could do on my own (some of it anyway). Yeah I know I just described that I’m lacking a proper <a href="https://en.wikipedia.org/wiki/Game_design_document">GDD</a> 🙂</p>
<h5 id="mood">Mood</h5>
<p>So all around I feel a bit more optimistic about game5 this week, but as any game developer will tell you, this feeling goes up and down every given week xD. Sometimes I feel like I might have something here, other times “this sucks”.<br>
Until the next post!</p>
<p>post feature image from deviantArt, Halloween month! 🎃 (<a href="https://www.deviantart.com/hoshi-pan/art/witch-tea-818804167">https://www.deviantart.com/hoshi-pan/art/witch-tea-818804167</a>)</p>
]]></content:encoded>
    </item>
    <item>
      <title>game5 devlog #1</title>
      <link>https://www.david-amador.com/2023/10/game5-devlog-1/</link>
      <pubDate>Mon, 02 Oct 2023 20:40:47 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/10/game5-devlog-1/</guid>
      <description>&lt;p&gt;Nothing announced, not even a name decided, but I want to vaguely blog about it as a means of brainstorming with myself. I’ll be vague as heck until I’m sure I have something worth “here’s a new game”, if that ever turns out to be the case.&lt;/p&gt;
&lt;p&gt;So this week’s it’s progress on my “on-going not yet announced game because not ready and might be bad” game, which I decided to for now on call Game5 here, so it’s easier to know what we are talking about.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Nothing announced, not even a name decided, but I want to vaguely blog about it as a means of brainstorming with myself. I’ll be vague as heck until I’m sure I have something worth “here’s a new game”, if that ever turns out to be the case.</p>
<p>So this week’s it’s progress on my “on-going not yet announced game because not ready and might be bad” game, which I decided to for now on call Game5 here, so it’s easier to know what we are talking about.</p>
<h2 id="no-progress">No progress</h2>
<p>I haven’t been able to do make progress during the day because of contract work, so it’s mostly nights and weekends when physically possible. And I’m actually feeling a bit bad about this, so this might take a while. There’s been weeks of good productivity followed by weeks/months of just “seems to be the same”. To be honest some design decisions were also blocking me, the initial plan was enough to start but there’s always some roadblocks ahead.</p>
<h2 id="death-by-a-thousand-buttons">Death by a thousand buttons</h2>
<p>After QoD I specifically remember saying “My next game needs to have as little UI as possible”, but here we are, this game will (probably) live or die depending on how bad it is to use it. I mean the “game” part has to be fun as well obviously, but there is a lot of interconnection between both. You’ll understand what I mean by that later. No it’s not an RTS etc.</p>
<h2 id="slow-progress-is-better-than-none">Slow progress is better than none</h2>
<p>But the past 2-3 weeks I got a little lightbulb that gave me a general direction of a way to solve some stuff and it’s on a good track again I feel. And while there’s no real need for the UI to look good at this point, I already have 2 iterations of it, mostly from a functional standpoint.</p>
<p>I did a first prototype with the general idea, not all features, but turned out incredibly cumbersome to use from a UX standpoint. But this was good, I felt there was still something there in terms of “game”, just needs iteration.</p>
<p>I “quickly” remade it into a different one recently, and now I feel it’s much better, there’s still a lot to do in terms of making it coherent. But this is also the part where I feel I have to focus on the “toy” part of the game itself.</p>
<h3 id="planning">Planning</h3>
<p>A lot of my problems sometimes come from lack of planning some details more carefully, in a way it’s good to just jump in and get it rolling, but other times it comes back to bite you. With that in mind, and since I now have a general idea of functionalities and a barebones UI, I hired someone to freelance work with me on their spare time on the UI. At this point it’s compartmentalized enough that if they need to leave to other things I can carry on, and also I can focus a bit more on the gameplay components.</p>
<h3 id="iteration-and-automation">Iteration and Automation</h3>
<p>I do a lot of notes and value on spreadsheets, that end up on the game, for testing, and especially during prototype phase I found myself copying pasting values around. So I took a couple hours to write some python scripts that grab cvs, parse them and export the proper ScriptableObjects for what I need. This speeds up quick testing and changing values. I was getting tired of changing them directly on Unity inspector.</p>
<h2 id="next-steps">Next steps</h2>
<p>My next move is balancing out a initial progress/difficulty ramp. Right now I have most stuff “just there”, in a sort of chaotic way, to test out the fun of it, but I need to make a proper vertical slice. At this point I do have several mechanics in place, but a lot buggy and a bit all over the place, so I have to streamline that to make it more cohesive. I don’t have any new mechanics still missing (so far), so just cooking up a small prototype that I could just hand over to someone and have them play, and see what happens.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Unity enshittification round 2, moving on to custom tech.</title>
      <link>https://www.david-amador.com/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/</link>
      <pubDate>Sun, 24 Sep 2023 09:57:43 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/09/unity-enshittification-round-2-moving-on-to-custom-tech/</guid>
      <description>&lt;p&gt;After mostly a &lt;a href=&#34;https://www.david-amador.com/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/&#34; title=&#34;The Unity enshittification, proprietary tech dangers, and mostly not talking about what I’m doing.&#34;&gt;week of anxiety,&lt;/a&gt; for thousands and thousands of developers, Unity &lt;a href=&#34;https://blog.unity.com/news/open-letter-on-runtime-fee&#34;&gt;changed the rules again&lt;/a&gt;, and first glance, it’s better for the immediate problems it would cause for active and in-development games. They removed the retroactive aspect of the “pay-per-game-install”, so only for someone on Unity 2023 LTS+ (launching next year) will that apply, current projects will not be affected. Small relief, as long as we can keep using existing versions with current Terms of Service. This will be impossible on mobile and consoles in a short time frame due to SDKs, but for PC should be fine.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>After mostly a <a href="/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/" title="The Unity enshittification, proprietary tech dangers, and mostly not talking about what I’m doing.">week of anxiety,</a> for thousands and thousands of developers, Unity <a href="https://blog.unity.com/news/open-letter-on-runtime-fee">changed the rules again</a>, and first glance, it’s better for the immediate problems it would cause for active and in-development games. They removed the retroactive aspect of the “pay-per-game-install”, so only for someone on Unity 2023 LTS+ (launching next year) will that apply, current projects will not be affected. Small relief, as long as we can keep using existing versions with current Terms of Service. This will be impossible on mobile and consoles in a short time frame due to SDKs, but for PC should be fine.</p>
<p>So that’s good huh? Well not quite imo, because the rest pretty much maintains, more or less with some changes, Unity Plus still gone (although expected), but <a href="https://unity.com/pricing-updates">it’s a revenue/pay-per-install deal</a>, on top of the yearly license fees. I feel they fear they tainted their image so much they aren’t even forcing the Unity splash screen anymore, probably because players will now fear every Unity game will come with install tracking software.</p>
<p>I think the subscription plan, especially for mobile/consoles is needed, it’s a company and needs to make money to maintain the software, fair. However for me it’s a lot of the break of trust they did, and trying for the SECOND time (that I recall) to change the Terms of Service retroactively and only after industry-wide outrage did they backtracked slightly. So for now the new-new rules only apply to a smaller %, which I guess they expect will calm down most of the community. In a couple years they’ll pull some other stunt and we’ll recall “oh right, they did this before”.</p>
<p>Furthermore, they had deleted the transparency repo with the Terms of Service from GitHub, which raised many eyebrows, when enquired to why they deleted the answer was “low views so it was deleted”. The repo is back up meanwhile, I mean, what the heck?</p>
<p><a href="https://twitter.com/unity/status/1705317639478751611"><img loading="lazy" src="/wp-content/uploads/2023/09/image-2.png"></a></p>
<h2 id="moving-forward">Moving forward</h2>
<p>So as I mentioned in last post I have been working on a prototype for what I hope I can turn into a new game, in Unity. I decided that I’ll continue working on the prototype in Unity (actually taking a break from work right now to write this), it would be slightly silly to change now. And when I feel most of the features are done, I’ll try to move to my own tech, yes again.</p>
<p>I’ve been doing some research and tests and I’ll be dismantling <a href="/tags/quest-of-dungeons/" title="Quest of Dungeons development update">Quest of Dungeons</a> engine, which was all <a href="https://en.wikipedia.org/wiki/Object-oriented_programming">OOP</a>, to adding <a href="https://en.wikipedia.org/wiki/Entity_component_system">ECS</a>, using <a href="https://github.com/SanderMertens/flecs/">Flecs</a>, this is a major thing I’m taking with me from my time using Unity, I like that it helps solving a lot of issues sometimes, even if full ECS is not the solution for me. But having that will be nice, I can see the benefit now. Another thing might also be trying to mimick Prefabs and/or ScriptableObjects, that would be nice, but that’s just in the back of my head at the moment. I already started the process of integrating Flecs, so slowly and gradually, and hopefully, when it’s time to switch engine it will be a suitable alternative. If not well, better not update to 2023LTS I guess.</p>
<p>At least this is the plan right now, who knows, maybe I’ll reach a point where it feels too frustrating to rewrite it all in a different engine and language (c# to cpp), or ran out of budget to do so, plans do change. But at the moment at least it moves forward like this.</p>
<h2 id="list-of-mostly-open-source-game-engines-and-frameworks">List of mostly open-source game engines and frameworks</h2>
<p>Using suggestions I compiled a list of game engines and frameworks, mostly open-source and free, but there are a few with licenses, regardless, for anyone looking to test alternatives, there’s a bunch of stuff.</p>
<p><a href="https://github.com/DJLink/list-of-game-engines-and-frameworks">https://github.com/DJLink/list-of-game-engines-and-frameworks</a></p>
<p>My personal suggestion for anyone who wants to try the “make my own engine” approach, for 2D stuff (don’t get too deep the rabbit hole on 3D), will be to use SDL to bootstrap window creation, input etc. I’ve used that in a bunch of stuff in the past and can vouch for it.</p>
]]></content:encoded>
    </item>
    <item>
      <title>The Unity enshittification, proprietary tech dangers, and mostly not talking about what I&#39;m doing.</title>
      <link>https://www.david-amador.com/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/</link>
      <pubDate>Sat, 16 Sep 2023 11:14:16 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/09/the-unity-enshittification-proprietary-tech-dangers-and-mostly-not-talking-about-what-im-doing/</guid>
      <description>&lt;p&gt;So this was an “eventful” week in the game dev community. &lt;a href=&#34;https://unity.com/&#34;&gt;Unity&lt;/a&gt;, one of the most well know, and used game engines out there, after years of doing mostly good for the community, pulled a reverse card and broke years of trust the community had on them. &lt;a href=&#34;https://blog.unity.com/news/plan-pricing-and-packaging-updates&#34;&gt;Unity announced &lt;/a&gt;that they are retroactively charging (for example $0.2) for each game install, after developers hit a certain yearly revenue threshold, which sounds insane.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>So this was an “eventful” week in the game dev community. <a href="https://unity.com/">Unity</a>, one of the most well know, and used game engines out there, after years of doing mostly good for the community, pulled a reverse card and broke years of trust the community had on them. <a href="https://blog.unity.com/news/plan-pricing-and-packaging-updates">Unity announced </a>that they are retroactively charging (for example $0.2) for each game install, after developers hit a certain yearly revenue threshold, which sounds insane.</p>
<p><a href="https://blog.unity.com/news/plan-pricing-and-packaging-updates"><img loading="lazy" src="/wp-content/uploads/2023/09/unity-new-runtime-free-pricing-image.png"></a></p>
<p>Also they are removing the Plus subscription, which honestly this one I was kind of expecting for a while now. Which means a lot of people would have to jump to the nearly $2k yearly subscriptions. This on it’s own, while a big jump, at least is more understandable, building tech is expensive. The pay-per-install is crazy though.</p>
<p><a href="https://twitter.com/DJ_Link/status/1666532480646627329"><img loading="lazy" src="/wp-content/uploads/2023/09/image-1.png"></a>On top of all, the thing that breaks trust the most, is the retroactive thing, games already released on older versions will be affected. The Terms of Service for those older versions, which developers agreed on installing X version, are no longer valid, they changed them, which means it’s no longer safe to trust the rules, Unity can just flip them. What’s for tomorrow?</p>
<h2 id="proprietary-tech">Proprietary tech</h2>
<p>This is, and always be one of the downsides of depending on other people technology, if the whole company depends on it, and there’s no easy replacement, a drastic change can hurt the whole business bad. This is not to say that we must avoid it 100% of the time, but it clearly shows that if a company amasses too much power, <a href="https://en.wikipedia.org/wiki/Murphy's_law">murphy’s law</a>!</p>
<p>I usually like to discuss this subject, even before this whole thing, not because I think everyone should do custom engines (even if fun) but because we shouldn’t trick ourselves in believing “my choice of engine is forever!”, it won’t be, unless it’s our own tech that we spend tons of time supporting/improving it, everything else eventually mutates too much, fades or gets killed. So we should always try to at the very least, be mentally prepared.</p>
<p>A very large amount of developers probably entered gamedev through Unity, it was mostly the goto suggestion everyone gave, and never tried anything else (and why would they, if it worked right?), but after years of learning that tool, it might be frustrating to change, but trust me, you got this. It will be hard, but if you ever change again it will be easier.</p>
<h2 id="what-im-up-to">What I’m up to</h2>
<p>Personally I’ve been using Unity for the ~5 years maybe, mostly for contract work and porting stuff. But recently, and after years of shipping stuff on <a href="/tags/basalt/">custom framework</a> I decided to work on my current game prototype in Unity, it made sense, my day work is 80% on that tech, built in Editor, multi-platform, so I would also be learning more and prototyping in Unity is generally quite fun. But these changes now mean I’ll be changing for something else, not because these rules will affect me, I don’t see ever reaching the $200k yearly, but because I don’t know what they’ll do next. I’d rather risk elsewhere.</p>
<h4 id="what-next">What next?</h4>
<p>For the past couple days I’ve trying to decide on exactly where, but haven’t made my mind yet. But I have decided that I’ll at least try to wrap up the prototype phase in Unity, makes sense, game is still a bit barebones (why I’m not talking about it yet) but there’s a lot done, so I’d rather pass the whole “toy prototyping messy code” in Unity, and when it feels time to move to production port the whole thing elsewhere and in the process hopefully have a cleaner code base.</p>
<p>Custom or another engine I’m unsure, but atm I’m leaning more towards custom, but that would mean I’d probably either reshape my entire custom engine, or do from scratch, reason being, it’s 100% object oriented, and while working with Unity I discovered there’s tons of advantages to the Entity Component System, so I want that on my framework. Might be more initial setup, but after shipping a couple games on tons of platforms in OOP, I discovered that some of the issues would have been easier to solve with ECS, not all but several.</p>
<p>Overall I’m excited about the possibility of working on my own tech, because well, it’s fun. As for my next game, progress has been slow, because I’m still taking the approach of contract work, and working on it on my spare time until it feels like a viable project and deciding full or part-time.</p>
<p>After working on Quest of Dungeons for many years (which I’m grateful) I did several prototypes that were, to be honest, not good games, and I will never ship something that at the very least I don’t find fun, so yeah sorry it’s been a while. The hope is that if I find it fun, more people will, so until that time, work moves on, maybe I’ll have more news about something sooner than later.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Some things to consider in multi-platform gamedev</title>
      <link>https://www.david-amador.com/2023/09/some-things-to-consider-in-multi-platform-gamedev/</link>
      <pubDate>Mon, 04 Sep 2023 20:01:23 +0000</pubDate>
      <guid>https://www.david-amador.com/2023/09/some-things-to-consider-in-multi-platform-gamedev/</guid>
      <description>&lt;p&gt;Decided to write a couple things I feel can help a game in the long run when it comes to porting it to other platforms. It’s always inevitable we have to change elements in a game when targeting a new console/device we never considered, but some considerations, if done from start can save a lot of time, headaches, porting budget, and equally important, avoiding introduction of new bugs due to code changing drastically. These are based on observations I made on a couple dozen projects that crossed my desk, I don’t expect this to be news for someone who’s been in the field for a while, and might even be “too basic” for many, but hopefully it can help someone, since I’ve seen these many times.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Decided to write a couple things I feel can help a game in the long run when it comes to porting it to other platforms. It’s always inevitable we have to change elements in a game when targeting a new console/device we never considered, but some considerations, if done from start can save a lot of time, headaches, porting budget, and equally important, avoiding introduction of new bugs due to code changing drastically. These are based on observations I made on a couple dozen projects that crossed my desk, I don’t expect this to be news for someone who’s been in the field for a while, and might even be “too basic” for many, but hopefully it can help someone, since I’ve seen these many times.</p>
<p>Many of these are not specific to a certain game engine (unless noted), so they can be used anywhere, it’s just a collection of things I’ve encountered while porting games which can help.</p>
<p><strong>Don’t hard-code strings in your code.</strong></p>
<p>This is one of the most well know ones and it’s not specific to games either, any software, but there’s still a lot of games that have it. It’s not hard to happen either, a gamejam or prototype starts, even if just a couple some strings that we leave near a <em>//todo:</em>, but suddenly we’re months in development with strings all over the place. Now you need to add another language and it’s a problem. Write some get_localization(ID) function, read all text from a file as early as possible. Also never write them directly on images, even if it looks prettier, it’s going to be a problem trust me, you don’t want image variations of each language, I can tell you first hand that becomes big problem whenever small text changes are required.</p>
<p><strong>Avoid string concatenation in localizable text as much as possible.</strong></p>
<p>If we need to mix in dynamic content with text, very common but this examples poses an issue:</p>
<p><em>string label = localize(“Our score is “) + to_string(int_value) + localize(“, which is very good!”);</em></p>
<p>This is not very flexible when it comes to localization. It assumes 2 different strings being localized, and the phrase has to make sense in all languages in this order, and that’s not always the case, what if a certain language needs the value to be in a different place in the concat order? The person localising won’t have any way to do it.</p>
<p>So let’s look at this example:</p>
<p><em>string label = localize(“Our score is {0}, which is very good!”, int_value);</em></p>
<p>Many languages have string utils to allow this, the {0} will be replaced with our variable, which means that the localisation team can put the {0} wherever they want, your code only assumes there’s a {0} somewhere, doesn’t matter where.</p>
<p><strong>Separate Accept/Back button bindings in menus from other gameplay actions.</strong><br>
Let’s say our game uses the A button on a controller to Fire a bullet, it’s also the most appropriate button for the “accept” action on a menu button. We might be tempted to only query for a “fire” action everywhere, but that’s not the best idea. First of all if you later need to change that “fire” to something else you break menus, and more, on some platforms you might need a different button, for example PS4 in Japan the X button might not be “Accept” but O instead, so you’d have to flip your mapping, having them separate prevents breaking the whole code. If you want to read more about the PS4 specific case here’s a good article about the subject <a href="https://www.theverge.com/2019/3/9/18255901/ps4-x-o-cross-circle-remap-firmware-6-50-dualshock-4">https://www.theverge.com/2019/3/9/18255901/ps4-x-o-cross-circle-remap-firmware-6-50-dualshock-4</a></p>
<p><strong>Leaving unused assets/textures on scenes/projects</strong></p>
<p>This is not necessarily a porting issue on it’s own, but can hurt performance on lower spec devices and it’s something I encountered more on Unity. I get it, it’s still development phase, something gets removed, but we leave it on the scene disabled, that on it’s own might not be a problem, but let’s say the object happens to be an entire older level that we remade better, and wanna keep the old one around “just in case”. It will be imported to the final build, all the meshes, textures etc, the level might be loaded, just not used. A variety of times I’ve seen build sizes reduce a lot just be removing unused things, but this is a more complicated process after the game is done, because they might be hard to spot, my example was an obvious one, but dozens of tiny things won’t, someone looking might just think disabled stuff will be activate later in script somewhere.</p>
<p><strong>Gigantic non power of 2 textures</strong></p>
<p>This is a recurring issue I see, a couple texture asset packs etc, really big textures, works on PC, even uncompressed. Many textures that are non power of two textures, you target another lower spec device and now there’s a problem, most engines will allow NPOT textures on their pipeline, but for example Unity won’t even allow compression, because it will only happen on POT textures, this is because, textures like 256×256, 512×512, 1024×1024, to keep it short and a bit more simplistic, is a form of optimisation for images feed in to the GPU pipeline. Many years ago most devices wouldn’t even allow something like 125×125, you’d need to find the next POT value, 128×128. A game with big textures in weird sizes will use immensely more disk space than if we use POT and some compression.</p>
<p><strong>Particles</strong></p>
<p>They look pretty, it’s easy to get distracted, don’t start by high particle count and go down until it looks good. Start by 1 and go up until it looks good. I’ve seen particle systems with 100 particles look nearly the same as a 5000 one, multiple that with a couple explosions on screen and you got yourself a problem.</p>
<p><strong>Naming controller buttons in text</strong></p>
<p>“Press A to jump”<br>
But on PlayStation it might be “Press X to jump”<br>
Inject a way in your code so that strings where you use buttons are parsed in runtime, and you can query the platform for the button itself. If it’s just a button sprite on a menu, it’s relatively easier, you just need a sprite and flip it accordingly. For written text like a tutorial or a message somewhere there are several ways to accomplish that, and one way might be to put the icons directly on a font.</p>
<p>For example<br>
“Press A to jump” becomes “Press [JUMP_BUTTON] to jump”, and then in code you can search and replace [JUMP_BUTTON] with a glyph in your font that corresponds to the right controller button. That way localization team can write it in any order, and the code simply replaces it. Another advantage of this is if instead of actual glyphs you want to write it, you can also localize it.</p>
<p>Imagine “Move Left Thumbstick to walk”, in another language we might want to change the part “Left Thumbstick” to something else, probably by console certification requirements, so having “Move [Left_Thumbstick] to walk” can help here with the string find replace, you get the idea.</p>
<p><strong>Avoid constant file saving</strong></p>
<p>Disk access even if faster these days is a big bottleneck, that’s why loading something takes, well… time. A few times I saw cases where games would save something every time a certain action happened, and I’m not talking about game progress checkpoints, which is fine, but for example a game wants to save “steps taken” for some stats, and it would auto-save a certain file every time. Needless to say, while it might not be a problem on PC (SSDs etc) even if wrong, but on certain consoles that will not only be a problem, as well as a possible certification failure. So bulk up actions to save, and save them once in a while, the ones that don’t require the player to press “Save”, you can also enforce saving on application quit.</p>
<p><strong>Framerate consideration</strong></p>
<p>If you coded the game to consider 60FPS only, not considering that it might have to be locked at 30FPS due to lower hardware, using what we can call fixed delta (time since last update) this will be a big problem. If your character movement isn’t taking into account different framerate, for example Unity has FixedUpdate() and Update(), you’ll have problems later if you can’t reach the 60FPS for some reason, everything in-game will run much slower as we only get half the updates. And this is much harder to change later in development, most of the game feel &amp; calculations might be tied into those values. This is an article explaining it from a Unity perspective but you’ll get the idea. <a href="https://gamedevplanet.com/delta-time-vs-fixed-delta-time-differences-and-purposes/">https://gamedevplanet.com/delta-time-vs-fixed-delta-time-differences-and-purposes/</a></p>
<p><strong>That’s it for now</strong></p>
<p>I’ll probably update it if I think of something else, there are many other things specific for each engine but I just tried to focus mostly on engine-agnostic stuff. If all these are covered this already helps a lot most of the port work. Let me know if you find errors or have any other suggestions.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Vizati 10th anniversary and making if free.</title>
      <link>https://www.david-amador.com/2020/06/vizati-10th-anniversary-and-making-if-free/</link>
      <pubDate>Thu, 11 Jun 2020 11:00:00 +0000</pubDate>
      <guid>https://www.david-amador.com/2020/06/vizati-10th-anniversary-and-making-if-free/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://dj_link.itch.io/vizati&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://www.david-amador.com/wp-content/uploads/2011/03/vizati_letterbox.jpg&#34;&gt;&lt;/a&gt;&amp;gt; Hey everyone, wow ok so first of all it’s been a long time since my last post, I keep telling myself I need to return to do more regular posts, but &lt;a href=&#34;https://twitter.com/DJ_Link&#34;&gt;twitter&lt;/a&gt; kinda replaced it in many ways for my daily-rambles. However I’ve been trying to work on something new and gotta get back to more regular blogging, but more on that later.&lt;/p&gt;
&lt;p&gt;Second, but not least important, Vizati is turning 10 years old today (11 June 2010), feels only yesterday we (me coding and &lt;a href=&#34;http://rita-silva.com/&#34; title=&#34;rita-silva.com/&#34;&gt;Rita&lt;/a&gt; with the art) were doing the first puzzles and trying to figure out the best way for making this a fun game. Things changed a lot over the years and the original team is no longer working together, also because of OS updates, like the iOS versions etc or hardware not being around anymore the game has mostly vanished from all stores. The other day I was thinking about game preservation and thought it would be a shame to leave this only in our computers, combined with the 10th anniversary we decided to make it free to everyone, the original game can now be downloaded and played even on the newest Windows versions (thank you XNA).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="https://dj_link.itch.io/vizati"><img loading="lazy" src="/wp-content/uploads/2011/03/vizati_letterbox.jpg"></a>&gt; Hey everyone, wow ok so first of all it’s been a long time since my last post, I keep telling myself I need to return to do more regular posts, but <a href="https://twitter.com/DJ_Link">twitter</a> kinda replaced it in many ways for my daily-rambles. However I’ve been trying to work on something new and gotta get back to more regular blogging, but more on that later.</p>
<p>Second, but not least important, Vizati is turning 10 years old today (11 June 2010), feels only yesterday we (me coding and <a href="http://rita-silva.com/" title="rita-silva.com/">Rita</a> with the art) were doing the first puzzles and trying to figure out the best way for making this a fun game. Things changed a lot over the years and the original team is no longer working together, also because of OS updates, like the iOS versions etc or hardware not being around anymore the game has mostly vanished from all stores. The other day I was thinking about game preservation and thought it would be a shame to leave this only in our computers, combined with the 10th anniversary we decided to make it free to everyone, the original game can now be downloaded and played even on the newest Windows versions (thank you XNA).</p>
<p>Here’s the official <a href="https://dj_link.itch.io/vizati" title="https://dj_link.itch.io/vizati">itch.io</a> page, there you’ll find not only the original XNA version that was being sold, but also an unfinished version using a custom engine that I build when porting it to iOS, this framework ended up powering <a href="https://www.questofdungeons.com" title="https://www.questofdungeons.com">Quest of Dungeons</a>, a game I made a few years after. It’s not finished but should be mostly playable, although only works in window mode.</p>
<p>I also created a GitHub repo, which has a couple more things, like the original website code, some screenshots, the code using for creating the XNA installer, PDF manual and a couple more things. This way those things will never get lost in case my computer + backups ever go bad.</p>
<p>Download: <a href="https://dj_link.itch.io/vizati">https://dj_link.itch.io/vizati</a><br>
GitHub: <a href="https://github.com/DJLink/Vizati">https://github.com/DJLink/Vizati</a></p>
<p>Hope you have fun, either you are rediscovering the game or playing it for the first time, it’s a product of it’s time, from an inexperienced team trying to make their first indie game, but I’m proud of how it turned out.</p>
<p>See you around!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Made a small game for Ludum Dare 42</title>
      <link>https://www.david-amador.com/2018/08/made-a-small-game-for-ludum-dare-42/</link>
      <pubDate>Tue, 14 Aug 2018 15:02:38 +0000</pubDate>
      <guid>https://www.david-amador.com/2018/08/made-a-small-game-for-ludum-dare-42/</guid>
      <description>&lt;p&gt;Hey,&lt;/p&gt;
&lt;p&gt;It’s been ages since my last post, feel like things keep getting in the way, also not much exciting stuff lately.&lt;/p&gt;
&lt;p&gt;But decided to take a break from my current project to participate in Ludum Dare 42, it’s been years since the last time, also I liked the theme “Running out of Space” so I decided to hack something. To try and get out of my comfort zone I made my first game in Unity, so that was a fun experiment.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Hey,</p>
<p>It’s been ages since my last post, feel like things keep getting in the way, also not much exciting stuff lately.</p>
<p>But decided to take a break from my current project to participate in Ludum Dare 42, it’s been years since the last time, also I liked the theme “Running out of Space” so I decided to hack something. To try and get out of my comfort zone I made my first game in Unity, so that was a fun experiment.</p>
<p>The game is a small top down shooting game, but when you miss an enemy you create a block instead, so the more you miss the less area to fly around. Here’s a gif illustrating.</p>
<p><a href="https://dj_link.itch.io/dont-miss"><img loading="lazy" src="/wp-content/uploads/2018/08/Honeycam-2018-08-13-22-21-37.gif"></a></p>
<p>Made code, art and sounds, cod is c# in Unity, art was made in photoshop, the sound effects I think you’ll notice right away how they were made, and finally used <a href="https://boscaceoil.net/">Bosca Ceoil</a> for music.</p>
<p>There’s a webGl version so you an try it directly in your browser.</p>
<p><a href="https://dj_link.itch.io/dont-miss">https://dj_link.itch.io/dont-miss</a></p>
<p>Here’s the LD Jam entry: <a href="https://ldjam.com/events/ludum-dare/42/dont-miss-1">https://ldjam.com/events/ludum-dare/42/dont-miss-1</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Some thoughts about a 4 year game dev cycle</title>
      <link>https://www.david-amador.com/2016/12/some-thoughts-about-a-4-year-game-dev-cycle/</link>
      <pubDate>Thu, 29 Dec 2016 12:35:49 +0000</pubDate>
      <guid>https://www.david-amador.com/2016/12/some-thoughts-about-a-4-year-game-dev-cycle/</guid>
      <description>&lt;p&gt;As I’m starting to write this post I’m on my way to my home town for the holidays, so I may not post it in a couple days.&lt;br&gt;
It’s been a crazy year(s)(?) and I’m taking these near 4h of travel to write down some things. I’m sorry if it’s incoherent, this is mostly a dump of thoughts.&lt;/p&gt;
&lt;p&gt;For those who follow my work a bit more closely you probably know that for almost 4 years the project I dedicated more time was &lt;a href=&#34;http://www.questofdungeons.com&#34;&gt;Quest of Dungeons&lt;/a&gt;, which started development in 2013.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>As I’m starting to write this post I’m on my way to my home town for the holidays, so I may not post it in a couple days.<br>
It’s been a crazy year(s)(?) and I’m taking these near 4h of travel to write down some things. I’m sorry if it’s incoherent, this is mostly a dump of thoughts.</p>
<p>For those who follow my work a bit more closely you probably know that for almost 4 years the project I dedicated more time was <a href="http://www.questofdungeons.com">Quest of Dungeons</a>, which started development in 2013.</p>
<p><strong>Right now</strong> I still have one more platform to release, on Playstation 4, 17 January 2017, it passed certification, ready to be released, so for the first time in years it feels that my QoD journey is finally completing. I still intend to patch the Android port with all last updates and sure, there will always be patches and things to take care of, but it will be in a whole different way now. Until now it always felt incomplete and a never ending task that extended for months, years.</p>
<p><strong>Working for so much time</strong> on the same project can be incredibly frustrating, especially if working alone, so one thing that I’m proud of myself is that I actually finished it. You wouldn’t believe the amount of times that I said “F** it, is not worth it”. Things went good with the game, in a sense that I was able to put it on a lot of platforms and it was well received for the most part.<br>
I think I was able to find a good “niche” of players that understood what QoD was all about, with all its flaws and good things.</p>
<p>The game was never meant to be released outside of PC, heck, during the first month of development it was a Tablet only game. That led to decisions that I regretted later when porting to consoles, but also allowed me to cut corners and not caring about things that weren’t meant for a PC game early on, thus speeding up development time. I spent a lot of time just rethinking the whole interface for each new platform (except PS4 which is identical to Xbox One) and that is time consuming, not to mention specific console features, on the other hand players do feel like it was hand-crafted for their device, so there’s that. Each new platform was made possible with the previous one, so it’s not something that I can say it was a total mistake.</p>
<p><strong>Technology wise</strong>, I’ve kept using my own tech for all releases, stubbornness perhaps? And that is not without it’s caveats. With engines like Unreal 4, Unity and Gamemaker these days if feels almost ridiculous to consider building your own tech for many, but not for me, not yet anyway. I used other engines in the past, I did release my first 2 games on XNA, and after that I decided that it was time to build my own tech, so I could be more flexible and not caring if an engine is discontinued or not, that was the goal. And on that part it succeeded, the same code runs on all platforms, except for specific render, input, etc. It took work, a lot, and after so many platforms I have a better idea of things that need better abstraction, in fact for the past week I’ve been just cleaning up code for future projects, feels more robust now. But I have a bit of regret of platforms that I ported the engine and possibly will never use it again, like Wii U, maybe even Nintendo 3DS. While the others, now that the work is done I can reuse for future games, it’s possible that I’ll never use for some again, so it was an effort for a one time only, and that is a problem, one that could have been prevented by using an existent engine.<br>
I tried using Unity for 3 weeks, did some tests with GameMaker, and it was a cool experience, knowledge doesn’t hurt right? But haven’t made my mind yet about switching away from my own tech, mostly because I know it well, I can quickly changes things around for each project and mostly because I love working on that part as well, it’s fun, even if it’s just for me. I’ll revisit this if/when I need to switch to a “full 3d” game.</p>
<p><strong>So many platforms!!</strong><br>
It’s a game that’s on a lot of devices now, and there are several reasons to do so, more audience, chance to make more money, get the game more known, etc, brand recognition and proving the studio is capable of delivering. I also made it because I had the chance right now, I don’t know the future, may not be able to pull that again, also it was a chance to establish a relation with Steam, Xbox, Nintendo and Sony. My idea is to keep making games for platforms that each makes sense, but trying to cut down time between each release. It was too sparse now, because of the reasons mentioned above.</p>
<p><strong>Marketing</strong> is still something I suck at, I do have a twitter account where I talk about my games, but also about tons of other stuff, mostly movies and general day things, is that even called marketing? Too late I decided to setup a newsletter list and put it on Upfall Studios website, should have done it earlier, I got 100 people to subscribe in the last year and half, I could have way more in these nearly 7 years as indie dev.<br>
I also created a twitter account for <a href="http://www.twitter.com/UpfallStudios">Upfall Studios</a>, so it’s basically a cleaned up version of my own, just news about the games and launches, a more “professional” account I call it. Taking care of so many social stuff, twitter, facebook, etc is time consuming and doesn’t come to me as naturally as using my personal account, so that is still a problem probably. For the most part I follow devs and not “companies” even when they are indies, so that’s mostly what I like to do, chances are there are more people like me.</p>
<p><strong>Community</strong> (love you guys)<br>
I like responding to people, I don’t mind getting asked questions and I’ve answered to 100% of emails I got, either about the game or gamedev in general. I’ve taken time to meet other developers in person when they wanna ask me questions. Treat others the way you wanna be treated, easy right?<br>
I’ve been extremely luck with the players and community surrounding QoD, they are nice, active in recommending the game to friends and I couldn’t have wished for a better community. Goal is to keep incrementing the amount of course =)<br>
Never lie or go on radio silence regarding customers. There are tons of Early access games that suddenly stop and not even a goodbye post, that’s the worse part, the waiting for months to see if project is alive. They won’t trust you again, even if you switch to a different studio, they won’t forget. So if project fails explain it, if you are delayed on a patch say so. Almost all the time players will understand and be supportive. When I was making the Xbox One and Nintendo ports I had to delay the PC updates for a couple months and players were really supportive, as long as they know why you are late on some promise.</p>
<p><strong>It’s never just “X more months of dev”</strong><br>
NEVER, ever, if you think it’s just 2 more months, odds are that it’s 4 more. We suck at calculating time for the most part (or at least I do), because we conceive the game in your minds and you can see it, mostly complete, but making that happen takes much more time. PC version was delayed, both Xbox and Nintendo ports took much longer than I expected, the PS4 one was shorted, because I counted with worst case scenario but things went well at first try. In my experience completing the game 1-2 months before the release can have a positive effect, especially for a 1 man team. I finished the Xbox One version 2 months before, full approved on certification, and spent that time just trying to promote it, and was able to gather some awareness for the game. I finished the Nintendo versions just 10 days before, and even had to delay the game once, I regret now that I didn’t calculated/handled things better. Lesson learned, let’s see if I don’t make that mistake again.</p>
<p><strong>Everything else</strong><br>
I made that mistake in the past and I still do, I can’t separate well development time and actual life time, so I end up working too many hours, and it’s addicting.<br>
QoD was made partially at night when I still had a day job, and the last 1 and a half year in full time, but that doesn’t mean I was able to do twice as much work unfortunately.<br>
When you work for someone else you have a schedule, but if you work on your own time, it’s harder. Most people tell me it’s hard to stay focused working, and I have that problem too, but not in a way that I can’t work, but mostly because I blend in leisure time with work, and working from home doesn’t help. It’s easy to get distracted, then you feel guilty and spend a couple more hours working. And while I don’t think I’m super slow, I could be using my time better. That’s something I want to change, I don’t thing strict work schedules work well, but not having clear boundaries doesn’t either. If anyone is managing this well please let me know. Open to suggestions 🙂<br>
It’s easy to find people saying this, but I’ve now experienced it myself, when you have a problem that you can’t solve don’t spend hours on the PC, take a walk, go do something else, the solution will come to mind, seriously, it works very often. You trick your mind into something else and the other problem keeps getting solved in the background.</p>
<p><strong>What now?</strong><br>
In approximately 3 weeks the PS4 version will be released, I don’t any plans for more ports so I intend to move to a new game, and honestly I’m scared, I don’t have a solid idea yet, been mostly sketching ideas or trying some prototypes, and the thought of deciding “let me spend 1-2 years” in this new game is a bit scary, “can I come up with all the money?”, “will it be good?”.<br>
I wish I had a small cool idea to try for a couple months instead of a bigger one, but as I mentioned before, QoD was also supposed to be a 6 months project that turned out into 4 years so better not force anything. I’m trying not to think of “this is gonna be a cool idea that everyone will like” and instead trying to come up again with something that I would like to play, even if others don’t like it, development flows more naturally like that.<br>
Oh and I want to take 2 weeks of proper vacations after the PS4 release, haven’t had vacations in over two years, thinking of backpacking a couple countries, it’s cheaper and it’s good “mind food”-</p>
<p>Still there? thanks for reading – David</p>
]]></content:encoded>
    </item>
    <item>
      <title>My first ever console game is out</title>
      <link>https://www.david-amador.com/2015/09/my-first-ever-console-game-is-out/</link>
      <pubDate>Sun, 13 Sep 2015 18:26:14 +0000</pubDate>
      <guid>https://www.david-amador.com/2015/09/my-first-ever-console-game-is-out/</guid>
      <description>&lt;p&gt;Hey, it’s been a while.&lt;/p&gt;
&lt;p&gt;For the past few months I’ve been working on porting Quest of Dungeons to Xbox One, and I’m super happy that it’s finally out. It was released around a week ago, on &lt;a href=&#34;https://www.david-amador.com/2015/09/quest-of-dungeons-is-now-available-on-xbox-one/&#34;&gt;September 4&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This took some time but I’m happy of the way the game is played with a gamepad, after a lot of changes to the UI I really feel like it was worth all the effort I put into it. If you wanna read more about the new stuff on the XO version you can find the article &lt;a href=&#34;https://www.david-amador.com/2015/07/lets-talk-about-the-new-stuff-in-quest-of-dungeons-for-xbox-one/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Hey, it’s been a while.</p>
<p>For the past few months I’ve been working on porting Quest of Dungeons to Xbox One, and I’m super happy that it’s finally out. It was released around a week ago, on <a href="/2015/09/quest-of-dungeons-is-now-available-on-xbox-one/">September 4</a>.</p>
<p>This took some time but I’m happy of the way the game is played with a gamepad, after a lot of changes to the UI I really feel like it was worth all the effort I put into it. If you wanna read more about the new stuff on the XO version you can find the article <a href="/2015/07/lets-talk-about-the-new-stuff-in-quest-of-dungeons-for-xbox-one/">here</a>.</p>
<p>The players feedback and reviews were very positive as well. Here are some examples:</p>
<p>8/10 – <a href="https://web.archive.org/web/20170611171806/http://www.icxm.net/x/quest-of-dungeon-review.html">http://www.icxm.net/x/quest-of-dungeon-review.html</a><br>
8/10 – <a href="http://www.entertainment-focus.com/game-review/quest-of-dungeons-review/">http://www.entertainment-focus.com/game-review/quest-of-dungeons-review/</a><br>
4/5 – <a href="http://wegotthiscovered.com/gaming/quest-dungeons-review/">http://wegotthiscovered.com/gaming/quest-dungeons-review/</a><br>
9/10 – <a href="http://dkplaysgames.blogspot.co.uk/2015/09/quest-of-dungeons-xbox-one-review.html">http://dkplaysgames.blogspot.co.uk/2015/09/quest-of-dungeons-xbox-one-review.html</a></p>
<p>I also want to thank everyone who emailed and tweeted me, watching everyone having fun with the game warms the hearth 🙂</p>
<p><strong>So what is next?</strong></p>
<p>I’ve been getting that question a lot. “Are you making more games?” “Are you working on something new already?”<br>
QoD has kept me pretty busy until now, so while I have some ideas in my mind I haven’t really started anything new, my ideas may very well not be even good at all, I need to test and prototype to see what I wanna do next. I still need to do a patch to QoD to fix some stuff, that is the priority now, but that should only keep me busy until the end of the month. After that it’s time to jump into something new, which is kind of scary, but exciting at the same time. I have no idea if I can ever make a game that people will like, like they did with QoD, but I’ll do my best.</p>
<p>As always, you can find me on <a href="https://twitter.com/DJ_Link">twitter</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Suggestion for where to store save games</title>
      <link>https://www.david-amador.com/2015/04/suggestion-for-where-to-store-save-games/</link>
      <pubDate>Thu, 09 Apr 2015 09:27:58 +0000</pubDate>
      <guid>https://www.david-amador.com/2015/04/suggestion-for-where-to-store-save-games/</guid>
      <description>&lt;p&gt;Standards are a lovely thing, but hard to achieve, it depends on one thing, everyone actually using it, otherwise it’s just a rule no one cares about.&lt;/p&gt;
&lt;p&gt;There is one thing that is very common to see in the “game sphere”:&lt;br&gt;
&lt;strong&gt;Where are [X] save games located?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are a couple of common directories used but I think as game developers we could do a bit better and using a common location.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Standards are a lovely thing, but hard to achieve, it depends on one thing, everyone actually using it, otherwise it’s just a rule no one cares about.</p>
<p>There is one thing that is very common to see in the “game sphere”:<br>
<strong>Where are [X] save games located?</strong></p>
<p>There are a couple of common directories used but I think as game developers we could do a bit better and using a common location.</p>
<p>Some games create a folder on My Documents:<br>
<a href="/wp-content/uploads/2015/04/my_documents.png"><img alt="my_documents" loading="lazy" src="/wp-content/uploads/2015/04/my_documents.png"></a></p>
<p>This is a bit messy, you have your games mixed with other software, if you have 5-10 games it’s hard to manage since it gets in the way of your work files.</p>
<p>Other games save them on obscure locations like</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="nl">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="p">[</span><span class="n">USER</span><span class="p">]</span><span class="err">\</span><span class="n">AppData</span><span class="err">\</span><span class="n">Game</span>
</span></span></code></pre></div><p>that can lead to lost save files as some cleaning software might erase them, also it’s hard to find. And lately I’ve been noticing that some Steam games store them directly on the Game Directory itself, that’s not very intuitive as well.</p>
<p>Windows introduced a system folder some time ago called “Saved Games”</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="nl">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">David</span><span class="err">\</span><span class="n">Saved</span> <span class="n">Games</span>
</span></span></code></pre></div><p><img alt="windows_save_games_folder" loading="lazy" src="/wp-content/uploads/2015/04/windows_save_games_folder.png"></p>
<p>But from my research it’s not very used, I think one of the reasons is that older Windows versions didn’t had them, like Windows XP and it wasn’t very adopted. I also noticed some games creating their own versions of “common” folders inside Documents, like “SaveGames” or “SavedGames”.</p>
<p><strong>What can we do?</strong></p>
<p>I did noticed that more devs are using a solution that I personally like, and I adopted it for my last game.</p>
<p>So my suggestion for all game developers for a save game directory is</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="p">[</span><span class="n">User</span> <span class="n">Documents</span> <span class="n">Folder</span><span class="p">]</span><span class="err">\</span><span class="n">My</span> <span class="n">Games</span><span class="err">\</span><span class="p">[</span><span class="n">Game</span><span class="p">]</span>\
</span></span></code></pre></div><p>For example</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="nl">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">David</span><span class="err">\</span><span class="n">Documents</span><span class="err">\</span><span class="n">My</span> <span class="n">Games</span><span class="err">\</span><span class="n">AwesomeGame</span>\
</span></span></code></pre></div><p>Here’s that folder on my computer right now<br>
<img alt="common_save_game_folder" loading="lazy" src="/wp-content/uploads/2015/04/common_save_game_folder.png"></p>
<p>As you can see some developers already use it, from indie developers to AAA studios.<br>
This way, everything is inside your Documents, the user can easily access, backup, restore, everything is inside that folder.<br>
Even if a studio were to create a folder for its own brand, that would be ok too.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="nl">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">David</span><span class="err">\</span><span class="n">Documents</span><span class="err">\</span><span class="n">My</span> <span class="n">Games</span><span class="err">\</span><span class="n">CAPCOM</span>\
</span></span><span class="line"><span class="cl"><span class="nl">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">David</span><span class="err">\</span><span class="n">Documents</span><span class="err">\</span><span class="n">My</span> <span class="n">Games</span><span class="err">\</span><span class="n">CAPCOM</span><span class="err">\</span><span class="n">Resident</span> <span class="n">Evil</span>
</span></span><span class="line"><span class="cl"><span class="nl">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">David</span><span class="err">\</span><span class="n">Documents</span><span class="err">\</span><span class="n">My</span> <span class="n">Games</span><span class="err">\</span><span class="n">CAPCOM</span><span class="err">\</span><span class="n">Resident</span> <span class="n">Evil</span> <span class="mi">2</span>
</span></span></code></pre></div><p>How can you get the current user documents location you ask?</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="n">CHAR</span> <span class="n">my_documents</span><span class="p">[</span><span class="n">MAX_PATH</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="n">HRESULT</span> <span class="n">result</span> <span class="o">=</span> <span class="n">SHGetFolderPath</span><span class="p">(</span><span class="nb">NULL</span><span class="p">,</span> <span class="n">CSIDL_PERSONAL</span><span class="p">,</span> <span class="nb">NULL</span><span class="p">,</span> <span class="n">SHGFP_TYPE_CURRENT</span><span class="p">,</span> <span class="n">my_documents</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">result</span> <span class="o">!=</span> <span class="n">S_OK</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="c1">//Handle no save permissions
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="k">else</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">     <span class="c1">//Append \My Games\[Your Game] to my_documents and there&#39;s your final save location
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span></code></pre></div><p>So my vote is for this solution.<br>
What do you think?</p>
]]></content:encoded>
    </item>
    <item>
      <title>I&#39;m a Xbox One developer now, QoD getting a port</title>
      <link>https://www.david-amador.com/2014/12/im-a-xbox-one-developer-now-qod-getting-a-port/</link>
      <pubDate>Sun, 14 Dec 2014 12:19:07 +0000</pubDate>
      <guid>https://www.david-amador.com/2014/12/im-a-xbox-one-developer-now-qod-getting-a-port/</guid>
      <description>&lt;p&gt;So a lot has happened since my last post. Even before &lt;a href=&#34;https://www.david-amador.com/2014/10/egx-2014/&#34; title=&#34;EGX 2014&#34;&gt;EGX&lt;/a&gt; I was already in talks with Microsoft for becoming a Xbox One developer and maybe get Quest of Dungeons to XO. I was extremely happy when they accepted both, so right now I’m working on porting the game to Xbox One.&lt;br&gt;
I don’t think this would have been possible without all the gamers that have played and are still playing the game, that’s what brought all the positive vibe surrounding the game, so a big thank you.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>So a lot has happened since my last post. Even before <a href="/2014/10/egx-2014/" title="EGX 2014">EGX</a> I was already in talks with Microsoft for becoming a Xbox One developer and maybe get Quest of Dungeons to XO. I was extremely happy when they accepted both, so right now I’m working on porting the game to Xbox One.<br>
I don’t think this would have been possible without all the gamers that have played and are still playing the game, that’s what brought all the positive vibe surrounding the game, so a big thank you.</p>
<p>Since pushing on making games with just displaying my name felt a bit weird I decided (a couple months ago) to give a brand to my indie games, called <a href="http://www.upfallstudios.com">Upfall Studios</a>. Looks a bit more professional and it’s easier to approach other people, because either we like it or not, this is a business and people always ask “what’s the studio name?”.</p>
<p><del>I also created a blog (<a href="http://www.upfallstudios.com/">http://www.upfallstudios.com/</a>) where I’ll be talking about the games and development, which is something I usually don’t do here in much dept, is mostly “new game”, “game is out”, so if you want to keep track of that feel free.</del></p>
<p>Edit 2024: I&rsquo;ve since <a href="/2022/11/merged-personal-and-studio-blogs-into-one/">merged the upfallstudios blog onto this one</a>.</p>
<p>I’m forcing myself to do a year summary post soon so see you soon.</p>
<p><img alt="xbox_one_console" loading="lazy" src="/wp-content/uploads/2014/12/xbox_one_console.jpg"></p>
]]></content:encoded>
    </item>
    <item>
      <title>Indie Dev &amp; Day Job, Making it work / Building Quest of Dungeons</title>
      <link>https://www.david-amador.com/2014/10/indie-dev-day-job-making-it-work-building-quest-of-dungeons/</link>
      <pubDate>Fri, 03 Oct 2014 11:36:36 +0000</pubDate>
      <guid>https://www.david-amador.com/2014/10/indie-dev-day-job-making-it-work-building-quest-of-dungeons/</guid>
      <description>&lt;p&gt;During Gamedev Camp 2014 in Lisbon I got to talk a bit about the development of Quest of Dungeons, and some of the problems that I had making it while still having a day job.&lt;br&gt;
Most indie developers don’t have enough money to work on their game full-time so they have to keep a day job in order to support it, so this is a bit of my own personal experience doing it, some of the problems that came with it and mistakes I did during the development and launch of the game.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>During Gamedev Camp 2014 in Lisbon I got to talk a bit about the development of Quest of Dungeons, and some of the problems that I had making it while still having a day job.<br>
Most indie developers don’t have enough money to work on their game full-time so they have to keep a day job in order to support it, so this is a bit of my own personal experience doing it, some of the problems that came with it and mistakes I did during the development and launch of the game.</p>
<p>I decided to post it here because maybe someone finds it interesting, also, I’m sorry for the bad english but it’s not my mother language.</p>


    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/M2EFJRviOpU?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

]]></content:encoded>
    </item>
  </channel>
</rss>
