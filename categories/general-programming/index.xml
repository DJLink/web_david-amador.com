<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>General Programming on David Amador</title>
    <link>https://www.david-amador.com/categories/general-programming/</link>
    <description>Recent content in General Programming on David Amador</description>
    <image>
      <title>David Amador</title>
      <url>https://www.david-amador.com/david-amador-pixel.png</url>
      <link>https://www.david-amador.com/david-amador-pixel.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Nov 2024 14:39:55 +0000</lastBuildDate>
    <atom:link href="https://www.david-amador.com/categories/general-programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gamedev tricks used by developers</title>
      <link>https://www.david-amador.com/2024/11/gamedev-tricks-used-by-developers/</link>
      <pubDate>Fri, 15 Nov 2024 14:39:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2024/11/gamedev-tricks-used-by-developers/</guid>
      <description>🧵 origin thread In 2018 I started a thread on Twitter (later renamed X 🙄) where I shared some game development tricks devs used to get around get around bugs, software, hardware or time constraints. Over time I added more stuff to that thread, and there&amp;rsquo;s some cool information there. Since I now replicated that thread on both Mastodon and Bluesky; it got me thinking I should probably put this on my own blog, a single post, which is easier to read, also in case those websites are ever taken down.</description>
      <content:encoded><![CDATA[<h2 id="-origin-thread">🧵 origin thread</h2>
<blockquote>
<p>In 2018 I started a thread on Twitter (later renamed X 🙄) where <a href="https://x.com/DJ_Link/status/964124424969637888">I shared some game development tricks</a> devs used to get around get around bugs, software, hardware or time constraints. Over time I added more stuff to that thread, and there&rsquo;s some cool information there. Since I now replicated that thread on both <a href="https://mastodon.gamedev.place/deck/@djlink/109313319839796759">Mastodon</a> and <a href="https://bsky.app/profile/djlink.bsky.social/post/3l6ubkivh5o2t">Bluesky</a>; it got me thinking I should probably put this on my own blog, a single post, which is easier to read, also in case those websites are ever taken down. If I find more I&rsquo;ll add them later. Also this page may take a bit to load due to images, gifs videos etc.</p>
</blockquote>
<hr>
<h3 id="-skyrim-shelves">👾 Skyrim shelves</h3>
<p>Skyrim small tables are actually shelves buried. If you can&rsquo;t see it &hellip;</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_1.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_1.jpg" alt="Skyrim buried shelves 1"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_2.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_2.jpg" alt="Skyrim buried shelves 2"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-jak-and-daxter-loading">👾 Jak and Daxter loading</h3>
<p>In Jak and Daxter if by any chance the Area/assets ahead aren&rsquo;t fully loaded the game will make you trip to give it more time to load in background.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/jak_dexter_tripping_loading.gif" alt="Jak and Daxter tripping loading"  />
</p>
<hr>
<h3 id="-super-mario-64-infinite-stairs">👾 Super Mario 64 infinite stairs</h3>
<p>In Super Mario 64 this is how Nintendo got the infinite stairs effect working, teleport. Mario keeps getting teleported to a prior point on the stairs which makes it impossible to progress in a normal way. But this is also the reason why Speedrunners can glitch the effect and skip it using the backwards jump trick.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/super_mario_64_infinite_stairs.gif" alt="Super Mario 64 infinite stairs"  />
</p>
<hr>
<h3 id="-wing-commander-memory-exception">👾 Wing Commander memory exception</h3>
<p>There was a memory exception in Wing Commander on exit, because of the deadline they left it but change the error message to &ldquo;Thank you for playing Wing Commander!&rdquo;</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/wing_commander_exit_message.jpg" alt="Wing Commander exit message"  />
</p>
<hr>
<h3 id="-undertale-npc-pathfinding">👾 Undertale NPC pathfinding</h3>
<p>This one is from Undertale, to prevent NPCs to walk on pits, developer added Magic glass so that way &ldquo;it works&rdquo;.</p>
<table>
<thead>
<tr>
<th><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/undertale_magic_glass_1.jpg" alt="Undertale magic glass 1"  />
</th>
<th><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/undertale_magic_glass_2.jpg" alt="Undertale magic glass 2"  />
</th>
</tr>
</thead>
</table>
<hr>
<h3 id="-fallout-3-trains-are-hats">👾 Fallout 3 trains are hats</h3>
<p>In Fallout 3 all the trains are actually a character wearing a train model as a hat. <a href="https://www.pcgamer.com/heres-whats-happening-inside-fallout-3s-metro-train/">Source</a>.</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_1.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_1.jpg" alt="Fallout 3 Trains"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_2.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/fallout3_train_2.jpg" alt="Fallout 3 Trains"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-donkey-kong-64-memory-crash-myth">👾 Donkey Kong 64 memory crash (myth)</h3>
<p>This one was later proved as a myth by developers on my thread, but I&rsquo;m leaving it here since you can still find it in tons of places, so this way here it has a correction that it was in fact a myth.</p>
<p>Internet theories says that Donkey Kong 64 had a memory crash/limit bug on standard N64. Unable to identify the cause of the crash they decided to ship the game with the memory expansion bundled with game.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/donkey_kong_64.jpg" alt="Donkey Kong 64"  />
</p>
<hr>
<h3 id="-super-mario-bros-reuse-of-grassclouds">👾 Super Mario Bros. reuse of grass/clouds</h3>
<p>In Super Mario Bros. because of memory limitations clouds and bushes are the same sprite but using a different color palette.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/super_mario_bros_grass_clouds.jpg" alt="Super Mario Bros. reuse of grass and clouds"  />
</p>
<hr>
<h3 id="-kirby-dream-land-memory-saving">👾 Kirby Dream Land memory saving</h3>
<p>In Kirby Dream Land for Gameboy, to save memory some enemies have the same &ldquo;back&rdquo; part of the sprite and only change the face.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/kirby_gameboy_reuse_assets.jpg" alt="Kirby Dream Land memory saving"  />
</p>
<hr>
<h3 id="-zelda-a-link-between-worlds-fake-perspective">👾 Zelda A Link Between Worlds fake perspective</h3>
<p>This is one of my fav, in Zelda: A Link Between Worlds because a true top down view in 3D had some issues, they purposely tilt the objects so the perspective looks good to the player.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/zelda_link_between_worlds_skewed_view.jpg" alt="Zelda A Link Between Worlds fake perspective"  />
</p>
<hr>
<h3 id="-duke-nukem-mirrors">👾 Duke Nukem mirrors</h3>
<p>Duke Nukem 3D mirrors reflection were achieved by duplicating the room on the other side. If you deactivate clipping you can go to the other side. True reflections are computational intensive even today.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/duke_nukem_mirrors.gif" alt="Duke Nukem mirrors"  />
</p>
<hr>
<h3 id="-nba-jam-te-cartridge-day-one-patch">👾 NBA Jam: T.E. cartridge day one &ldquo;patch&rdquo;</h3>
<p>In NBA Jam: T.E. for Genesis/Mega Drive devs only found out after making the 250k cartridges there was a save bug. Playing game in a certain order fixed it so it got a day one patch in the manual saying how to initialize memory.</p>
<p><a href="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_1.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_1.jpg" alt="NBA Jam T.E"  />
</a></p>
<p><a href="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_2.png"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/nba_jam_2.png" alt="NBA Jam T.E"  />
</a></p>
<hr>
<h3 id="-mario-galaxy-drown-animation">👾 Mario Galaxy drown animation</h3>
<p>In Super Mario Galaxy when Mario drowns in a swap his hand reaches out, because of the size of the head they have to shrink it so only the hand is visible to the player.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/mario_galaxy_drown_animation.gif" alt="Mario Galaxy drown animation"  />
</p>
<hr>
<h3 id="-world-of-warcraft-rest-bonus">👾 World of Warcraft rest bonus</h3>
<p>World of Warcraft rest bonus was made to encourage breaks, half XP gained after a few hours. Players hated, so they made everything take 2x as much XP to achieve but you start at 200% XP and gradually back to 100%. Same thing &amp; players are happy. <a href="https://www.psychologyofgames.com/2010/03/framing-and-world-of-warcrafts-rest-system/">source</a></p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/world_of_warcraft_rest_bonus.jpg" alt="World of Warcraft rest bonus"  />
</p>
<hr>
<h3 id="-resident-evil-4-radio-billboards">👾 Resident Evil 4 radio billboards</h3>
<p>This one is not as unknown or hard to imagine but in Resident Evil 4 during the radio chat cutscenes it&rsquo;s actually a 2D panel with the 3D models behind. Many other games do this too.</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_1.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_1.jpg" alt="Resident Evil 4"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_2.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/resident_evil_4_cutscene_behind_2.jpg" alt="Fallout 3 Trains"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-duck-hunt-zapper">👾 Duck Hunt Zapper</h3>
<p>In Duck Hunt the NES Zapper worked by blacking out screen &amp; drawing white blocks around targets when you fire, for a couple frames. The diode in the Zapper detects the change in light intensity and tells the computer if it’s pointed at a lit target.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/duck_hunt_zapper.gif" alt="Duck Hunt Zapper"  />
</p>
<hr>
<h3 id="-metal-gear-solid-ps1-reflections">👾 Metal Gear Solid PS1 reflections</h3>
<p>In Metal Gear Solid 1, another reflection trick. Water puddle in 1st mission map is just a transparent texture with the geometry of ceiling and walls duplicated below the ground. That&rsquo;s why you can&rsquo;t see Snake reflection.</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_1.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_1.jpg" alt="Metal Gear Solid"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_2.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/metal_gear_solid_reflections_2.jpg" alt="Metal Gear Solid"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-prince-of-persia-animations">👾 Prince of Persia animations</h3>
<p>In Prince of Persia (1989) animations looked fluid &amp; realistic because Jordan Mechner used Rotoscope, he filmed his brother doing the stunts, took pictures with camera, had them developed at Fotomat and then traced them, frame by frame.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/prince_of_persia_rotoscope.gif" alt="Prince of Persia Rotoscope"  />
</p>
<hr>
<h3 id="-tomb-raider-sega-saturn">👾 Tomb Raider Sega Saturn</h3>
<p>Sega Saturn used Quads instead of triangles (the industry norm) for rendering, which is good for 2D but not as practical for 3D, devs had to work around that, so games like Tomb Raider had to be built to support quads on Saturn and triangles on PlayStation.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/tomb_raider_saturn_quads.gif" alt="Tomb Raider Sega Saturn quads"  />
</p>
<hr>
<h3 id="-pong">👾 Pong</h3>
<p>Original Pong had 0 lines of code.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/pong_0_lines_code.jpg" alt="Pong"  />
</p>
<hr>
<h3 id="-paper-mario-shadows">👾 Paper Mario shadows</h3>
<p>Paper Mario uses a transparent mesh to simulate door shadows.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/paper_mario_shadows.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-dead-space-ui">👾 Dead Space UI</h3>
<p>Dead Space UI is all made with particles so it can sort in render, glow and be more immersive. <a href="https://x.com/Worthless_Bums/status/1271139746551599112">source</a></p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/dead_space_particles_ui.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-katamari-damacy-spawns">👾 Katamari Damacy spawns</h3>
<p>Katamari Damacy only has support for closed, circular paths, so how they make boulders travel beneath the ground, back to the original place, so that it seems like they are spawning and despawning!</p>
<p><a href="https://x.com/JasperRLZ/status/1289960052250435584">source</a></p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/katamari_spawns.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-elders-scroll-morrowind-xbox-memory-management">👾 Elder&rsquo;s Scroll Morrowind Xbox memory management</h3>
<p>This is easily one of the best, on OG Xbox, Elder Scrolls III would occasionally reboot the Xbox if they ran out of memory. The user would just see a longer then usual loading screen.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/xbox_elders_scroll_reboot_when_low_memory.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-grand-theft-auto-tanks">👾 Grand Theft Auto tanks</h3>
<p>In GTA the tanks were made with pedestrians that were on top of a car to use the existing shooting mechanics and also the driving code.</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_1.png"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_1.png" alt="Grand Theft Auto Tanks"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_2.png"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/gta_tanks_2.png" alt="Grand Theft Auto Tanks"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-kirby-and-the-forgotten-land-game-feel">👾 Kirby and the Forgotten Land game feel</h3>
<p>Kirby and the Forgotten Land is a 3D game, but will fake the hit collisions for better game feel depending where the camera is, in certain angles as long as in camera it &ldquo;looks&rdquo; like it hits it will consider it a collision even if it&rsquo;s not.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/kirby_forgotten_land_game_feel.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-skyrim-npcs-inventory-system">👾 Skyrim NPCs inventory system</h3>
<p>Skyrim handles each NPCs inventory by having it on a unique chest hidden under the map. Most are impossible to get unless clipping is used, but sometimes you can find them.</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_1.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_1.jpg" alt="Skyrim NPC inventory"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_2.jpg"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/skyrim_npc_chests_2.jpg" alt="Skyrim NPC inventory"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-doom-3-volumetric-glow">👾 Doom 3 volumetric glow</h3>
<p>Doom 3 fakes volumetric glow by folding vertexes with camera movement. <a href="https://simonschreibt.de/gat/doom-3-volumetric-glow/">source</a></p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/doom3_volumetric_glow.gif" alt="Doom 3 volumetric glow"  />
</p>
<hr>
<h3 id="-lord-of-the-rings-engine-reuse">👾 Lord of the Rings engine reuse</h3>
<p>Lord of the Rings game was made by reusing Tiger Woods golf game because they needed large areas with a goal/castle at the end, a golf game is just that. I think it’s quite funny how far apart they are but it works.</p>
<video width="100%" controls>
    <source src="/wp-content/uploads/2024/11/gamedev-tricks/lord_of_the_rings_tiger_woods_engine.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>

<hr>
<h3 id="-metroid-prime-noise-texture">👾 Metroid Prime noise texture</h3>
<p>In order to save memory, Metroid Prime fullscreen static texture effect is generated using random live RAM data, which is just the game itself running, GameCube only had 24MB. <a href="https://x.com/ZoidCTF/status/1590012338421518337">source</a></p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/metroid_prime_noise_texture.jpg" alt="Metroid Prime"  />
</p>
<hr>
<h3 id="-titan-quest-action-delays">👾 Titan Quest action delays</h3>
<p>On Titan Quest, because there was no way to script timed delays actions, developers created ambient creatures like Squirrels and used their animations as a way to count time to trigger the events.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/titan_quest_timed_delays.png" alt="Titan Quest action delays"  />
</p>
<hr>
<h3 id="-journey-shadows">👾 Journey shadows</h3>
<p>Journey doesn&rsquo;t have a real-time shadow system so they are hand painted and baked later. The results are impressive but the amount of work involved wow. <a href="https://x.com/matt_nava/status/1503152810078052355">source</a></p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_1.png" alt="Journey Shadows"  />
</p>
<table>
<thead>
<tr>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_2.png"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_2.png" alt="Journey Shadows"  />
</a></th>
<th><a href="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_3.png"><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/journey_shadows_3.png" alt="Journey Shadows"  />
</a></th>
</tr>
</thead>
</table>
<hr>
<h3 id="-silent-hill-2-mirror">👾 Silent Hill 2 mirror</h3>
<p>Another duplicate room mirror trick, this time Silent Hill 2, in the beginning of the game, the mirror reflection is just the entire bathroom duplicated.</p>
<p><img loading="lazy" src="/wp-content/uploads/2024/11/gamedev-tricks/silent_hill_2_mirror_duplicate_room.jpg" alt="Silent Hill 2 mirror"  />
</p>
<hr>
<p>(to be continued &hellip;. maybe)</p>
]]></content:encoded>
    </item>
    <item>
      <title>Detecting C&#43;&#43; memory leaks in Visual Studio - again</title>
      <link>https://www.david-amador.com/2012/06/detecting-c-memory-leaks-in-visual-studio-again/</link>
      <pubDate>Sun, 03 Jun 2012 20:00:01 +0000</pubDate>
      <guid>https://www.david-amador.com/2012/06/detecting-c-memory-leaks-in-visual-studio-again/</guid>
      <description>I made a small post about detecting C++ memory leaks in Visual Studio in 2010. At the time that seemed to suffice, but some months ago someone told me about Visual Leak Detector and boy does it work.
According to the website itself
Visual Leak Detector is a free, robust, open-source memory leak detection system for Visual C++.
It’s pretty easy to use. After installing it, you just need to tell Visual C++ where to find the included header and library file.</description>
      <content:encoded><![CDATA[<p>I made a small post about detecting C++ <a href="/2010/10/tracking-memory-leaks-in-visual-studio/" title="Tracking memory leaks in Visual Studio">memory leaks in Visual Studio</a> in 2010. At the time that seemed to suffice, but some months ago someone told me about <a href="https://oneiric.github.io/vld/">Visual Leak Detector</a> and boy does it work.</p>
<p>According to the website itself</p>
<blockquote>
<p>Visual Leak Detector is a free, robust, open-source memory leak detection system for Visual C++.</p>
<p>It’s pretty easy to use. After installing it, you just need to tell Visual C++ where to find the included header and library file.</p>
<p>Then it can be used with any C/C++ project simply by adding the following line to your code:</p>
<pre tabindex="0"><code>&lt;pre lang=&#34;cpp&#34;&gt;#include &#34;vld.h&#34;
</code></pre></blockquote>
<p>It’s very easy to use and I tracked down a bunch of memory leaks hidden inside my code since the time I released Vizati.</p>
<p>As expected this is a heavy beast and debbuding while using VLD required much more memory, but totally worth it. You can even output to a file</p>
<p><a href="/wp-content/uploads/2012/06/vld.png"><img loading="lazy" src="/wp-content/uploads/2012/06/vld.png" alt=""  title="vld"  />
</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Find/Replace in Visual Studio using regular expressions</title>
      <link>https://www.david-amador.com/2012/01/findreplace-in-visual-studio-using-regular-expressions/</link>
      <pubDate>Sat, 14 Jan 2012 21:27:55 +0000</pubDate>
      <guid>https://www.david-amador.com/2012/01/findreplace-in-visual-studio-using-regular-expressions/</guid>
      <description>Usually Find/Replace gets the job done for what I need, although sometimes using “Replace All” can break more stuff that it fixes.
But today I had this function I wanted to get rid of and simple change it with a public variable.
So I had something like this.
object-&amp;gt;setLayer(/*BLABAL BLA CODE, */); I want to replace it with something more simple
object-&amp;gt;Z = /*BLABAL BLA CODE, */; So using Visual Studio Find/Replace in regular expressions mode I used this as a search string</description>
      <content:encoded><![CDATA[<p>Usually Find/Replace gets the job done for what I need, although sometimes using “Replace All” can break more stuff that it fixes.</p>
<p>But today I had this function I wanted to get rid of and simple change it with a public variable.</p>
<p>So I had something like this.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="n">object</span><span class="o">-&gt;</span><span class="n">setLayer</span><span class="p">(</span><span class="cm">/*BLABAL BLA CODE, */</span><span class="p">);</span>
</span></span></code></pre></div><p>I want to replace it with something more simple</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="n">object</span><span class="o">-&gt;</span><span class="n">Z</span> <span class="o">=</span> <span class="cm">/*BLABAL BLA CODE, */</span><span class="p">;</span>
</span></span></code></pre></div><p>So using Visual Studio Find/Replace in regular expressions mode I used this as a search string</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="n">setLayer</span><span class="err">\</span><span class="p">({.</span><span class="o">+</span><span class="p">}</span><span class="err">\</span><span class="p">);</span>
</span></span></code></pre></div><p>And this as a Replace with string</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="n">Z</span><span class="o">=</span><span class="err">\</span><span class="mi">1</span><span class="p">;</span>
</span></span></code></pre></div><p><img loading="lazy" src="/wp-content/uploads/2012/01/regular-expression.jpg" alt=""  title="regular expression"  />
</p>
<p>Now, notice the first one, it’s actually simple, you have “setLayer”, followed by “\(” to tell the expression we really need to be that character, after than we have “.+”, which means match any single character except a line break and at least one occurrence. Followed by “\);”</p>
<p>Now if you notice we have curly brackets around the inside of what the function receives as parameter, that’s because we are tagging that string to use it later.</p>
<p>This way on the replace we simply need “Z=” followed by the first tagged string we have “\1”. if we have more curly brackets it would be “\2”, “\3” etc.</p>
<p>Check the full list for more options: <a href="http://msdn.microsoft.com/en-us/library/2k3te2cs%28v=vs.80%29.aspx">http://msdn.microsoft.com/en-us/library/2k3te2cs%28v=vs.80%29.aspx</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Basalt code swarm</title>
      <link>https://www.david-amador.com/2011/12/basalt-code-swarm/</link>
      <pubDate>Fri, 23 Dec 2011 16:48:01 +0000</pubDate>
      <guid>https://www.david-amador.com/2011/12/basalt-code-swarm/</guid>
      <description>I discovered code swarm a while ago and decided to test on my own repositories.
This is a test on Basalt, and although I’ve been working on the engine since January 2010, only in 2011 did I placed in on a repository so a bunch of stuff is added right on the beginning.
This is the result.</description>
      <content:encoded><![CDATA[<p>I discovered <a href="http://code.google.com/p/codeswarm/">code swarm</a> a while ago and decided to test on my own repositories.</p>
<p>This is a test on Basalt, and although I’ve been working on the engine since January 2010, only in 2011 did I placed in on a repository so a bunch of stuff is added right on the beginning.</p>
<p>This is the result.</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
  <iframe src="https://www.youtube.com/embed/sOpYY2PhIb4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video"></iframe>
</div>

]]></content:encoded>
    </item>
    <item>
      <title>Blog new look</title>
      <link>https://www.david-amador.com/2011/03/blog-new-look/</link>
      <pubDate>Tue, 22 Mar 2011 10:56:50 +0000</pubDate>
      <guid>https://www.david-amador.com/2011/03/blog-new-look/</guid>
      <description>Spent a little time giving my blog a new look. It’s not that I didn’t like the old one but sometimes it was a bit of a mess, I’ve been getting many new readers so it was time for a cleaner look.
My main concern was getting all code posts to be readable but I think they are
class XPTO { public: XPTO(); }; Let me know if you find any errors, since I’m not going to dig up the whole blog finding errors =P</description>
      <content:encoded><![CDATA[<p>Spent a little time giving my blog a new look. It’s not that I didn’t like the old one but sometimes it was a bit of a mess, I’ve been getting many new readers so it was time for a cleaner look.</p>
<p>My main concern was getting all code posts to be readable but I think they are</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">XPTO</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">public</span><span class="o">:</span> <span class="n">XPTO</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">};</span>
</span></span></code></pre></div><p>Let me know if you find any errors, since I’m not going to dig up the whole blog finding errors =P<br>
Also feedback on the new layout is most appreciated.</p>
<p>Here’s how it looked before</p>
<p><a href="/wp-content/uploads/2011/03/david_amador_old_layout.jpg"><img loading="lazy" src="/wp-content/uploads/2011/03/david_amador_old_layout.jpg" alt=""  title="david_amador_old_layout"  />
</a></p>
<p>Another thing that’s been bothering me, which you may have noticed is that on the sidebar I have a small ad. It’s Google AdSense. I’ve been keeping it for almost 2 years now and I’m getting tired of it.<br>
Why don’t I remove it? Well because I managed to sum up $84 in these last 2 years. And google only pays when we reach $100. It’s a small amount but well it’s mine, so I can either forget it or keep with it.<br>
If I ever reach $100 and get paid I’m obviously removing it. I was hoping to use that money to pay for this blog hosting for another 1-2 years.</p>
<p>For those wondering those $84 where gathered from around 59k visitors. Some click it, others don’t and I get money each time someone clicks it. Simple as that.<br>
So until I reach those $100 I’m keeping it around.</p>
]]></content:encoded>
    </item>
    <item>
      <title>So where is that motivation?</title>
      <link>https://www.david-amador.com/2011/03/so-where-is-that-motivation/</link>
      <pubDate>Wed, 09 Mar 2011 22:27:26 +0000</pubDate>
      <guid>https://www.david-amador.com/2011/03/so-where-is-that-motivation/</guid>
      <description>I follow a couple of dev blogs, some are game developers, others make websites or software.
In the last couple of months I’ve been reading a lot of them complaining about lack of motivation to develop their idea of the lack of motivation for development in general.
Happens to me too, heck it happens to everyone once in a while…
It’s something that happens usually half way though or after you get the initial prototype running.</description>
      <content:encoded><![CDATA[<p>I follow a couple of dev blogs, some are game developers, others make websites or software.<br>
In the last couple of months I’ve been reading a lot of them complaining about lack of motivation to develop their idea of the lack of motivation for development in general.</p>
<blockquote>
<p><strong>Happens to me too, heck it happens to everyone once in a while…</strong></p>
</blockquote>
<p>It’s something that happens usually half way though or after you get the initial prototype running.<br>
Around one year ago (Feb 2010) when I started developing our first game it was all great, new stuff every day, things starting to work, replacing my crappy programmer art by Rita’s drawings.<br>
The real endurance was after we had a working demo, and the decision of actually finishing the game.</p>
<blockquote>
<p>Should be 2-3 weeks, it’s just making more levels</p>
</blockquote>
<p>I really said that, worst, I was convinced that would be the case. But it wasn’t, and fine tuning stuff is the worst part, when the game mechanics are there and you are lacking the patient to add that one more feature that will probably induce 5 bugs.</p>
<blockquote>
<p><strong>Finish you game</strong></p>
</blockquote>
<p>Many indie devs never finish their game due to time constrains and/or their real job, but there’s a bunch that never finish anything because half-way though they loose interest and move to another project.</p>
<p>Moving to another project can sometimes be forced, you don’t have the money to pull it off, you don’t have the time to make such a big project or the game simply sucks, these are all valid. I have some projects on the back-burner that are not possible at this moment.</p>
<blockquote>
<p>New ideas can be a bitch…</p>
</blockquote>
<p>But how to deal with the fact that you are tired of making the game, even though it has potential?<br>
When first starting I always think, nah, that’s not going to happen, it’s a great idea. But how many times are you making one game and thinking on the next idea, and damn, that new idea is even greater, why not drop everything and make that one instead?</p>
<p>That’s when problems start, because even though you won’t switch when bugs/problems for the current project start popping you won’t have as much patient as you should, because in your mind you should be doing something else.</p>
<blockquote>
<p>Working with someone or showing you game to friends helps.</p>
</blockquote>
<p>If you are working with someone else it’s a bit easier to work this out. 2 people working for the same goal gives a sense of “this is it” to the whole thing.<br>
Working alone sucks a bit more, but you just have to set some goals.<br>
Make a working prototype, give it to some friends, collect feedback, they will probably make tons of suggestions, and you’ll get more excited with it.</p>
<blockquote>
<p>Easy to say, hard to to so.</p>
</blockquote>
<p>I still find it hard to do so, especially the whole “I shouldn’t have any more ideas while working on this”.<br>
But it happens, the other night I woke up at 6AM, had an idea for something so instead I wrote it down on a notepad, and I’ll grab it when I’m out of ideas.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Viewing Windows Phone 7 Marketplace on the simulator</title>
      <link>https://www.david-amador.com/2010/11/viewing-windows-phone-7-marketplace-on-the-simulator/</link>
      <pubDate>Wed, 17 Nov 2010 23:27:04 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/11/viewing-windows-phone-7-marketplace-on-the-simulator/</guid>
      <description>Since I’m out of the countries where WP7 Marketplace is available it’s been a real pain to check out new games and most of all if Vizati was already available.
Btw it’s out there, go give it a try, there’s a trial mode. It’s great fun 🙂
So searching some forums I found a neat code to check this on the simulator.
Basically create a new WP7 Silverlight App and write this main page code</description>
      <content:encoded><![CDATA[<p>Since I’m out of the countries where WP7 Marketplace is available it’s been a real pain to check out new games and most of all if Vizati was already available.<br>
Btw it’s out there, go give it a try, there’s a trial mode. It’s great fun 🙂</p>
<p>So searching some forums I found a neat code to check this on the simulator.</p>
<p>Basically create a new WP7 Silverlight App and write this main page code</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">public</span> <span class="kd">partial</span> <span class="k">class</span> <span class="nc">MainPage</span> <span class="p">:</span> <span class="n">PhoneApplicationPage</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="c1">// Constructor</span>
</span></span><span class="line"><span class="cl">        <span class="kd">public</span> <span class="n">MainPage</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="n">InitializeComponent</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="kt">var</span> <span class="n">task</span> <span class="p">=</span> <span class="k">new</span> <span class="n">MarketplaceHubTask</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">task</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="n">MarketplaceContentType</span><span class="p">.</span><span class="n">Applications</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="n">task</span><span class="p">.</span><span class="n">Show</span><span class="p">();</span> 
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span></code></pre></div><p>Run it and you’ll get this<br>
<a href="/wp-content/uploads/2010/11/wp7_marketplace.jpg"><img loading="lazy" src="/wp-content/uploads/2010/11/wp7_marketplace.jpg" alt=""  title="wp7_marketplace"  />
</a></p>
<p>Oh, the first time you launch the simulator you’ll get a connection error, usually if the simulator just booted. Just launch the app again</p>
]]></content:encoded>
    </item>
    <item>
      <title>Tracking memory leaks in Visual Studio</title>
      <link>https://www.david-amador.com/2010/10/tracking-memory-leaks-in-visual-studio/</link>
      <pubDate>Tue, 19 Oct 2010 14:09:01 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/10/tracking-memory-leaks-in-visual-studio/</guid>
      <description>I just discovered this useful piece of code for all who don’t have (including me) any memory leaks tracking code or software.
I know there are other and better solution but this can be handy for quick findings without much hassle.
First place this code in your entry point file, generally main.cpp inside your main() function
#ifdef _DEBUG int flag = _CrtSetDbgFlag(_CRTDBG_REPORT_FLAG); flag |= _CRTDBG_LEAK_CHECK_DF; // Turn on leak-checking bit _CrtSetDbgFlag(flag); #endif Now just run you game/program as you would normally, in debug mode of course.</description>
      <content:encoded><![CDATA[<p>I just discovered this useful piece of code for all who don’t have (including me) any memory leaks tracking code or software.<br>
I know there are other and better solution but this can be handy for quick findings without much hassle.</p>
<p>First place this code in your entry point file, generally main.cpp inside your main() function</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="cp">#ifdef _DEBUG
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>	<span class="kt">int</span> <span class="n">flag</span> <span class="o">=</span> <span class="n">_CrtSetDbgFlag</span><span class="p">(</span><span class="n">_CRTDBG_REPORT_FLAG</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="n">flag</span> <span class="o">|=</span> <span class="n">_CRTDBG_LEAK_CHECK_DF</span><span class="p">;</span> <span class="c1">// Turn on leak-checking bit
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="n">_CrtSetDbgFlag</span><span class="p">(</span><span class="n">flag</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="cp">#endif
</span></span></span></code></pre></div><p>Now just run you game/program as you would normally, in debug mode of course.</p>
<p>After you close it you’ll get a nice log in the output window like this one:</p>
<p><a href="/wp-content/uploads/2010/10/memory_leaks_output.jpg"><img loading="lazy" src="/wp-content/uploads/2010/10/memory_leaks_output.jpg" alt=""  title="memory_leaks_output"  />
</a></p>
<p>See those numbers before each memory leak between brackets? Grab one of those and add this line right before the #endif</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">...</span>
</span></span><span class="line"><span class="cl">      <span class="n">_CrtSetDbgFlag</span><span class="p">(</span><span class="n">flag</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">      <span class="n">_CrtSetBreakAlloc</span><span class="p">(</span><span class="mi">689</span><span class="p">);</span> <span class="c1">// Comment or un-comment on need basis
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="cp">#endif
</span></span></span></code></pre></div><p>Now run the game again, you shall get a break-point where the {689} memory leak happened.</p>
<p>I hope this is the correct way to use it, if not, let me know.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Using Isolated Storage to save/load files on Windows Phone 7</title>
      <link>https://www.david-amador.com/2010/10/using-isolatedstorage-to-saveload-files-on-windows-phone-7/</link>
      <pubDate>Sun, 10 Oct 2010 23:37:04 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/10/using-isolatedstorage-to-saveload-files-on-windows-phone-7/</guid>
      <description>I’m seeing a lot of forum threads with people asking how to save/load files on Windows Phone 7, well for XNA 4 in general.
You can use IsolatedStorage for that
using System.IO.IsolatedStorage; Both save and load can be done by creating a IsolatedStorageFile, I then use a Filestream and write with a binaryWriter
IsolatedStorageFile store = IsolatedStorageFile.GetUserStoreForApplication(); // grab the storage FileStream stream = store.OpenFile(&amp;#34;test.txt&amp;#34;, FileMode.Create); // Open a file in Create mode BinaryWriter writer = new BinaryWriter(stream); float myvar = 5.</description>
      <content:encoded><![CDATA[<p>I’m seeing a lot of forum threads with people asking how to save/load files on Windows Phone 7, well for XNA 4 in general.<br>
You can use <strong>IsolatedStorage</strong> for that</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">using</span> <span class="nn">System.IO.IsolatedStorage</span><span class="p">;</span>
</span></span></code></pre></div><p>Both save and load can be done by creating a IsolatedStorageFile, I then use a Filestream and write with a binaryWriter</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">IsolatedStorageFile</span> <span class="n">store</span> <span class="p">=</span> <span class="n">IsolatedStorageFile</span><span class="p">.</span><span class="n">GetUserStoreForApplication</span><span class="p">();</span> <span class="c1">// grab the storage</span>
</span></span><span class="line"><span class="cl"><span class="n">FileStream</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">store</span><span class="p">.</span><span class="n">OpenFile</span><span class="p">(</span><span class="s">&#34;test.txt&#34;</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Create</span><span class="p">);</span> <span class="c1">// Open a file in Create mode</span>
</span></span><span class="line"><span class="cl"><span class="n">BinaryWriter</span> <span class="n">writer</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BinaryWriter</span><span class="p">(</span><span class="n">stream</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kt">float</span> <span class="n">myvar</span> <span class="p">=</span> <span class="m">5.0f</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="s">&#34;something&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">writer</span><span class="p">.</span><span class="n">Write</span><span class="p">(</span><span class="n">myvar</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="n">writer</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></span></code></pre></div><p>For loading is pretty much the same thing:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">IsolatedStorageFile</span> <span class="n">store</span> <span class="p">=</span> <span class="n">IsolatedStorageFile</span><span class="p">.</span><span class="n">GetUserStoreForApplication</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="p">(</span><span class="n">store</span><span class="p">.</span><span class="n">FileExists</span><span class="p">(</span><span class="s">&#34;test.txt&#34;</span><span class="p">))</span> <span class="c1">// Check if file exists</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">       <span class="n">IsolatedStorageFileStream</span> <span class="n">save</span> <span class="p">=</span> <span class="k">new</span> <span class="n">IsolatedStorageFileStream</span><span class="p">(</span><span class="s">&#34;test.txt&#34;</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">,</span> <span class="n">store</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">       <span class="n">BinaryReader</span> <span class="n">reader</span> <span class="p">=</span> <span class="k">new</span> <span class="n">BinaryReader</span><span class="p">(</span><span class="n">save</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">       <span class="kt">string</span> <span class="n">mystring</span> <span class="p">=</span> <span class="n">reader</span><span class="p">.</span><span class="n">ReadString</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="kt">float</span> <span class="n">myfloat</span>  <span class="p">=</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span><span class="n">reader</span><span class="p">.</span><span class="n">ReadSingle</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">       <span class="n">reader</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">     
</span></span></code></pre></div><p>Simple right? I really don’t know if this is the best way but I’ve tested on both the emulator and a real device and it works.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Instance based Callbacks in C&#43;&#43;</title>
      <link>https://www.david-amador.com/2010/07/instance-based-callbacks-in-cpp/</link>
      <pubDate>Wed, 14 Jul 2010 15:18:21 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/07/instance-based-callbacks-in-cpp/</guid>
      <description>One of the things that was probably forgotten but the dudes who made C++ standard were callbacks, there’s no out of the box solution for Instance based Callbacks, just for functions.
When I moved to C# I was really happy with the way delegates work, it’s simple, easy and most of all, it works.
On game development one of the things callbacks are usually used is for Buttons, you have a menu and want to attribute a function to each button.</description>
      <content:encoded><![CDATA[<p>One of the things that was probably forgotten but the dudes who made C++ standard were callbacks, there’s no out of the box solution for Instance based Callbacks, just for functions.<br>
When I moved to C# I was really happy with the way delegates work, it’s simple, easy and most of all, it works.</p>
<p>On game development one of the things callbacks are usually used is for Buttons, you have a menu and want to attribute a function to each button. Sure you can point it to the same one and make a bunch of if’s and then point to a Global var which does the correct action, but this is not elegant and sure as hell not easy to add/modify stuff.</p>
<p>I came across a couple of solutions for having an instance based callback:<br>
1- Do your own – I’ve made one that worked but couldn’t get around to add parameters. I think we might skip this one since you are probably looking for a quick solution.<br>
2 – Use <a href="http://www.boost.org/">boost</a> – If you don’t know this have a look, even for other stuff, Boost has tons of awesome apis for helping C++ development. Including smart pointers that basically delete themselves automatically.<br>
3 – Use <a href="http://codeplea.com/pluscallback/">PlusCallback</a> – I decided to use this one.</p>
<p><a href="/wp-content/uploads/2010/07/cpp_callback_benchmark.png"><img loading="lazy" src="/wp-content/uploads/2010/07/cpp_callback_benchmark.png" alt=""  title="cpp_callback_benchmark"  />
</a></p>
<p>And it’s simple to use</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-cpp" data-lang="cpp"><span class="line"><span class="cl"><span class="c1">// Callback without parameters
</span></span></span><span class="line"><span class="cl"><span class="c1"></span> 
</span></span><span class="line"><span class="cl"><span class="c1">// My example class
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">Sprite</span><span class="o">*</span> <span class="n">sprite</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Sprite</span><span class="p">();</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="n">cb</span><span class="o">::</span><span class="n">Callback0</span><span class="o">&lt;</span><span class="kt">void</span><span class="o">&gt;</span> <span class="n">call1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="c1">// Bind callback
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">call1</span><span class="p">.</span><span class="n">Reset</span><span class="p">(</span><span class="n">sprite</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">Sprite</span><span class="o">::</span><span class="n">SomeFunction</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="c1">// Call callback
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">call1</span><span class="p">();.</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="c1">// Example with parameter
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">cb</span><span class="o">::</span><span class="n">Callback1</span><span class="o">&lt;</span><span class="kt">void</span><span class="p">,</span> <span class="n">Sprite</span><span class="o">*&gt;</span> <span class="n">call2</span><span class="p">;</span> 
</span></span><span class="line"><span class="cl"><span class="c1">// Bind callback
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">call2</span><span class="p">.</span><span class="n">Reset</span><span class="p">(</span><span class="n">sprite</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">Sprite</span><span class="o">::</span><span class="n">SomeFunctionWithParameterSprite</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"> 
</span></span><span class="line"><span class="cl"><span class="c1">// Your function should be something like 
</span></span></span><span class="line"><span class="cl"><span class="c1">// Sprite::SomeFunctionWithParameterSprite(Sprite* sprite);
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">call2</span><span class="p">(</span><span class="n">sprite</span><span class="p">);</span>
</span></span></code></pre></div><p>Easy right? It even work with return, just switch that void to something else. Let me know if you find a better solution. For now I’m sticking with this one.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Testing the new Visual Studio 2010 features</title>
      <link>https://www.david-amador.com/2010/04/testing-the-new-visual-studio-2010-features/</link>
      <pubDate>Tue, 13 Apr 2010 16:30:15 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/04/testing-the-new-visual-studio-2010-features/</guid>
      <description>Yesterday was an exciting one for all sorts of developers around the world. Visual Studio 2010 got available for both MSDN and DreamSpark subscribers.
First time I installed VS2010 was in the RC form mainly because of WP7 Developer’s Tools and XNA4.0 but haven’t made many investment in searching for new features.
But being available at Dreamspark I downloaded the Professional version and decided to try it out a bit.</description>
      <content:encoded><![CDATA[<p>Yesterday was an exciting one for all sorts of developers around the world. Visual Studio 2010 got available for both MSDN and DreamSpark subscribers.</p>
<p>First time I installed VS2010 was in the RC form mainly because of <a href="/2010/03/xna-4-0-ctp-and-windows-phone-developer-tools-ctp-now-available-for-download/">WP7 Developer’s Tools and XNA4.0</a> but haven’t made many investment in searching for new features.</p>
<p>But being available at Dreamspark I downloaded the Professional version and decided to try it out a bit.</p>
<p>On a side note to WP7 developers, if you are using VS RC to develop application to the phone don’t install the <a href="https://web.archive.org/web/20100623130306/http://klucher.com:80/blog/visual-studio-2010-and-windows-phone-developer-toolsxna-game-studio-4-0/">RTM version of VS2010 since it’s not compatible with WP7 developer tools</a> yet. You have to stick with the RC for now.</p>
<p>Booting the new VS we get a nice splash screen</p>
<p><a href="/wp-content/uploads/2010/04/vs_splash_logo.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_splash_logo-300x210.jpg" alt=""  title="vs_splash_logo"  />
</a></p>
<p>The new UI looks really clean and pretty.</p>
<p><a href="/wp-content/uploads/2010/04/vs_entry.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_entry-300x162.jpg" alt=""  title="vs_entry"  />
</a></p>
<p>The new Code Editor allows zooming in and out of code. For those days were your eyes are already red from trying to read so much tiny code. Sure you can always change the font size but doing this on the fly is way better.</p>
<p><a href="/wp-content/uploads/2010/04/vs_zoom_feature.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_zoom_feature-300x178.jpg" alt=""  title="vs_zoom_feature"  />
</a></p>
<p>One feature that I would never remember on asking but it’s really handy is Code Selection Block, basically by pressing the Alt Key and making a selection around a block of code, like this:</p>
<p><a href="/wp-content/uploads/2010/04/vs_code_block_selection_01.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_code_block_selection_01-300x144.jpg" alt=""  title="vs_code_block_selection_01"  />
</a></p>
<p>See how just Vector3 is selected?</p>
<p>Now start changing that block to something else</p>
<p><a href="/wp-content/uploads/2010/04/vs_code_block_selection_02.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_code_block_selection_02-300x144.jpg" alt=""  title="vs_code_block_selection_02"  />
</a></p>
<p>And voila, you are changing that block of code on the fly 😀 This works for copy paste as well. I’m pretty convinced this allows other stuff too but can’t figure out more usages.</p>
<p>Now, for the new intellisense. It’s not just plain dumb anymore, It won’t search just Classes/Members starting with the letters you typed, it will actively search patterns as well.</p>
<p><a href="/wp-content/uploads/2010/04/vs_intelissense.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_intelissense-300x144.jpg" alt=""  title="vs_intelissense"  />
</a></p>
<p>Multi Monitor FTW</p>
<p><a href="/wp-content/uploads/2010/04/vs_dual_monitor.jpg"><img loading="lazy" src="/wp-content/uploads/2010/04/vs_dual_monitor-300x101.jpg" alt=""  title="vs_dual_monitor"  />
</a></p>
<p>Just drag and drop your files to another screen and there you go, multi monitor support. No more opening another instance of Visual Studio to do this 😀</p>
<p>I know there’s tons of other stuff but that’s what I uncovered so far. Know any more stuff? Please do tell.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Write better code using FxCop</title>
      <link>https://www.david-amador.com/2010/03/write-better-code-using-fxcop/</link>
      <pubDate>Thu, 18 Mar 2010 10:32:52 +0000</pubDate>
      <guid>https://www.david-amador.com/2010/03/write-better-code-using-fxcop/</guid>
      <description>Microsoft FxCop, know what this is all about? Good for you, keep using it, It’s a valuable tool.
For those who don’t know you can download it here and read the MSDN documentation here.
FxCop is a is an application that analyzes managed code assemblies and reports information about the assemblies, such as possible design, localization, performance, and security improvements. I decided to make a profile of my current working project and it reported tons of stuff.</description>
      <content:encoded><![CDATA[<p>Microsoft FxCop, know what this is all about? Good for you, keep using it, It’s a valuable tool.</p>
<p>For those who don’t know you can download it <a href="http://www.microsoft.com/downloads/details.aspx?familyid=3389F7E4-0E55-4A4D-BC74-4AEABB17997B&amp;displaylang=en">here</a> and read the MSDN documentation <a href="http://msdn.microsoft.com/en-us/library/bb429476%28VS.80%29.aspx">here</a>.</p>
<p>FxCop is a is an application that analyzes managed code assemblies and reports information about the assemblies, such as possible design, localization, performance, and security improvements. I decided to make a profile of my current working project and it reported tons of stuff.</p>
<p>Basically it suggests you better name conventions, members that could be static, using arrays where you are using multidimensional ones, It even reported an incorrect way I used Garbage Collector.</p>
<p><img loading="lazy" src="/wp-content/uploads/2010/03/fxcop_01.png" alt=""  title="fxcop_01"  />
</p>
<p><img loading="lazy" src="/wp-content/uploads/2010/03/fxcop_02.png" alt=""  title="fxcop_02"  />
</p>
]]></content:encoded>
    </item>
    <item>
      <title>C# foreach VS for loop</title>
      <link>https://www.david-amador.com/2009/12/csharp-foreach-vs-for-loop/</link>
      <pubDate>Sat, 12 Dec 2009 18:38:33 +0000</pubDate>
      <guid>https://www.david-amador.com/2009/12/csharp-foreach-vs-for-loop/</guid>
      <description>When I started using C#, mainly because of XNA one of the things I got used to write is foreach loops instead of for, seemed easier and it’s a much cleaner code. Doing almost the same thing as a for loop I never really bother to see the differences, almost everyone in their XNA examples used it instead.
Today I decided to see the differences between them:
FOR
int[] values = new int[1]; int total = 0; for(int i = 0; i &amp;lt; values.</description>
      <content:encoded><![CDATA[<p>When I started using C#, mainly because of XNA one of the things I got used to write is foreach loops instead of for, seemed easier and it’s a much cleaner code. Doing almost the same thing as a for loop I never really bother to see the differences, almost everyone in their XNA examples used it instead.</p>
<p>Today I decided to see the differences between them:</p>
<p>FOR</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="kt">int</span><span class="p">[]</span> <span class="n">values</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">total</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">values</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="p">+=</span> <span class="n">values</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>FOREACH</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="kt">int</span><span class="p">[]</span> <span class="n">values</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="m">1</span><span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="kt">int</span> <span class="n">total</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">foreach</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="k">in</span> <span class="n">values</span> <span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">total</span> <span class="p">+=</span> <span class="n">i</span><span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><blockquote>
<p>In variable declaration, foreach has five variable declarations (three Int32 integers and two arrays of Int32) while for has only three (two Int32 integers and one Int32 array). When it goes to loop through, foreach copies the current array to a new one for the operation. While for doesn’t care of that part.</p>
</blockquote>
<p>After the compiler interpretation to Assembly we get this:</p>
<p>FOR</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="n">cmp</span>     <span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">eax</span><span class="p">+</span><span class="m">4</span><span class="p">],</span><span class="m">0</span>           <span class="n">i</span>
</span></span><span class="line"><span class="cl"><span class="n">jle</span>     <span class="m">0000000F</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span>     <span class="n">ecx</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">eax</span><span class="p">+</span><span class="n">edx</span><span class="p">*</span><span class="m">4</span><span class="p">+</span><span class="m">8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">inc</span>     <span class="n">edx</span>
</span></span><span class="line"><span class="cl"><span class="n">cmp</span>     <span class="n">esi</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">eax</span><span class="p">+</span><span class="m">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">jl</span>      <span class="n">FFFFFFF8</span>
</span></span></code></pre></div><p>FOREACH</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-csharp" data-lang="csharp"><span class="line"><span class="cl"><span class="n">cmp</span>     <span class="n">esi</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebx</span><span class="p">+</span><span class="m">4</span><span class="p">]</span>          <span class="n">i</span>
</span></span><span class="line"><span class="cl"><span class="n">jl</span>      <span class="n">FFFFFFE3</span>
</span></span><span class="line"><span class="cl"><span class="n">cmp</span>     <span class="n">esi</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebx</span><span class="p">+</span><span class="m">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">jb</span>      <span class="m">00000009</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span>     <span class="n">eax</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebx</span><span class="p">+</span><span class="n">esi</span><span class="p">*</span><span class="m">4</span><span class="p">+</span><span class="m">8</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span>     <span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebp</span><span class="p">-</span><span class="m">0</span><span class="n">Ch</span><span class="p">],</span><span class="n">eax</span>
</span></span><span class="line"><span class="cl"><span class="n">mov</span>     <span class="n">eax</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebp</span><span class="p">-</span><span class="m">0</span><span class="n">Ch</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="k">add</span>     <span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebp</span><span class="p">-</span><span class="m">8</span><span class="p">],</span><span class="n">eax</span>
</span></span><span class="line"><span class="cl"><span class="n">inc</span>     <span class="n">esi</span>
</span></span><span class="line"><span class="cl"><span class="n">cmp</span>     <span class="n">esi</span><span class="p">,</span><span class="n">dword</span> <span class="n">ptr</span> <span class="p">[</span><span class="n">ebx</span><span class="p">+</span><span class="m">4</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="n">jl</span>      <span class="n">FFFFFFE3</span>
</span></span></code></pre></div><p>As you can see we end up with much more instructions.<br>
Some simple tests gives these results:</p>
<table>
<thead>
<tr>
<th></th>
<th style="text-align:center">Using Objects</th>
<th style="text-align:center">Using Integers</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td style="text-align:center">FOR</td>
<td style="text-align:center">FOREACH</td>
</tr>
<tr>
<td>ArrayList – 2147483 items</td>
<td style="text-align:center">88.6</td>
<td style="text-align:center">115.9</td>
</tr>
<tr>
<td>generic collection – 2147483 items</td>
<td style="text-align:center">84.4</td>
<td style="text-align:center">87.1</td>
</tr>
<tr>
<td>Array – 2147483 items</td>
<td style="text-align:center">48.1</td>
<td style="text-align:center">49.8</td>
</tr>
</tbody>
</table>
<p>*Time is in milliseconds.</p>
<p>So what I’ve done after this was to replace some heavy foreach code on my engine by for loops. I guess small things can be neglected but it’s always nice to know where bottlenecks may happen.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Force a wmv to download instead of opening in browser</title>
      <link>https://www.david-amador.com/2009/10/force-a-wmv-to-download-instead-of-opening-in-browser/</link>
      <pubDate>Fri, 30 Oct 2009 11:09:38 +0000</pubDate>
      <guid>https://www.david-amador.com/2009/10/force-a-wmv-to-download-instead-of-opening-in-browser/</guid>
      <description>I recently needed to force a WMV to download using Apache. The default behaviour for most browsers is to try to open the movie inside the browser itself. This works fine if the person has the plugin otherwise we just gonna have a blank page. Also for huge WMV is easier to download the file for later viewing.
So just place this on your .htaccess on the root of your website.</description>
      <content:encoded><![CDATA[<p>I recently needed to force a WMV to download using Apache. The default behaviour for most browsers is to try to open the movie inside the browser itself. This works fine if the person has the plugin otherwise we just gonna have a blank page. Also for huge WMV is easier to download the file for later viewing.</p>
<p>So just place this on your .htaccess on the root of your website.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-apache" data-lang="apache"><span class="line"><span class="cl">      <span class="nt">&lt;filesmatch&gt;</span>
</span></span><span class="line"><span class="cl">      <span class="nb">ForceType</span> application/octet-stream
</span></span><span class="line"><span class="cl">      <span class="nb">Header</span> set Content-Disposition attachment
</span></span><span class="line"><span class="cl">      <span class="nt">&lt;/filesmatch&gt;</span>
</span></span></code></pre></div><p>This will consider any files and it’s not case sensitive, WMV, wmv, WmV are all acceptable.</p>
]]></content:encoded>
    </item>
    <item>
      <title>How to make a clickable div</title>
      <link>https://www.david-amador.com/2009/10/how-to-make-a-clickable-div/</link>
      <pubDate>Sun, 25 Oct 2009 19:16:12 +0000</pubDate>
      <guid>https://www.david-amador.com/2009/10/how-to-make-a-clickable-div/</guid>
      <description>Making a clickable text or image is easy, just add the &amp;lt;a&amp;gt; tag surrounding it. But this doesn’t work with divs and sometimes we need a whole div to be clickable and not just text.
The following code is for JQuery but switching it to your favorite JS framework should be very easy.
First start by adding this to your div
&amp;lt;div class=&amp;#34;clickable&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; Now a little css to simulate the pointer on that div</description>
      <content:encoded><![CDATA[<p>Making a clickable text or image is easy, just add the &lt;a&gt; tag surrounding it. But this doesn’t work with divs and sometimes we need a whole div to be clickable and not just text.<br>
The following code is for JQuery but switching it to your favorite JS framework should be very easy.</p>
<p>First start by adding this to your div</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-xml" data-lang="xml"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#34;clickable&#34;</span><span class="nt">&gt;</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&lt;/div&gt;</span>
</span></span></code></pre></div><p>Now a little css to simulate the pointer on that div</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-css" data-lang="css"><span class="line"><span class="cl"><span class="p">.</span><span class="nc">clickable</span><span class="p">:</span><span class="nd">hover</span><span class="p">{</span> <span class="k">cursor</span><span class="p">:</span><span class="kc">pointer</span><span class="p">;</span> <span class="p">}</span>
</span></span></code></pre></div><p>Now onto the JavaScript part</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&#34;text/javascript&#34;</span><span class="o">&gt;</span> 
</span></span><span class="line"><span class="cl"><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">$</span><span class="p">(</span><span class="s2">&#34;div.clickable&#34;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">	<span class="kd">function</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nb">window</span><span class="p">.</span><span class="nx">location</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&#34;url&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	<span class="p">});</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">});</span>
</span></span><span class="line"><span class="cl"><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></span></code></pre></div><p>You can use as many clickable divs as you want.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
